-- MySQL dump 10.13  Distrib 5.7.15, for Linux (x86_64)
--
-- Host: localhost    Database: laravel
-- ------------------------------------------------------
-- Server version	5.7.15-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `blog_article`
--

DROP TABLE IF EXISTS `blog_article`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_article` (
  `art_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '主键id',
  `art_title` varchar(100) NOT NULL DEFAULT '' COMMENT '文章标题',
  `art_tag` varchar(45) NOT NULL DEFAULT '' COMMENT '文章关键词',
  `art_description` varchar(255) NOT NULL DEFAULT '' COMMENT '文章描述',
  `art_thumb` varchar(80) NOT NULL DEFAULT '' COMMENT '缩略图',
  `art_content` longtext NOT NULL,
  `art_time` int(11) NOT NULL DEFAULT '0' COMMENT '文章添加或者修改的时间',
  `art_editor` varchar(45) NOT NULL DEFAULT '',
  `art_view` int(11) NOT NULL DEFAULT '100' COMMENT '浏览次数',
  `art_recommend` tinyint(4) NOT NULL DEFAULT '0' COMMENT '1：推荐  0：不推荐',
  `art_open` tinyint(4) NOT NULL DEFAULT '0',
  `cate_id` int(11) DEFAULT NULL COMMENT '文章所属分类id',
  PRIMARY KEY (`art_id`)
) ENGINE=MyISAM AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 COMMENT='文章表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_article`
--

LOCK TABLES `blog_article` WRITE;
/*!40000 ALTER TABLE `blog_article` DISABLE KEYS */;
INSERT INTO `blog_article` VALUES (5,'42134134','','','','<p>4312</p>',0,'',100,0,1,9),(6,'342141','','','','<p>2341</p>',0,'',100,0,1,3),(7,'43214143','','','','<p>432141</p>',0,'',100,0,1,3),(8,'afdafdsa','','','','<p>adfasf</p>',0,'',100,0,1,7),(9,'adfaf','','','','<p>adfsas</p>',0,'',100,0,1,3),(10,'adfafafa','','','','<p>asdfas</p>',0,'',100,0,1,2),(11,'dsgwrwqe','','','','<p>qwreqwrqw</p>',0,'',100,0,1,7),(12,'2312312312','','','','<p>31231</p>',0,'',100,0,1,2),(13,'412341','','','/storage/uploads/20161020152644547.jpg','<p>4132</p>',0,'',100,0,0,2),(14,'41234daff','打发','','/storage/uploads/20161020153011310.jpg','<p>发啊啊</p>',0,'',100,0,1,8),(15,'1324141','341','','/storage/uploads/20161020153209111.jpg','<p>41234</p>',0,'13431',100,0,1,2),(16,'        php并发控制中的独占锁        ','                ','                ','','<table style=\"width: 828px;\" width=\"999\" cellspacing=\"0\" cellpadding=\"0\"><tbody style=\"word-wrap: break-word;\"><tr style=\"word-wrap: break-word;\" class=\"firstRow\"><td class=\"t_f\" id=\"postmessage_146114\" style=\"word-wrap: break-word;\">在php开发<a href=\"http://www.maiziedu.com/course/php/\" target=\"_blank\" class=\"gj_safe_a\" style=\"word-wrap: break-word; color: rgb(85, 85, 85);\">http://www.maiziedu.com/course/php/</a>中，我们常常遇到并发问题，那对于并发控制中的独占锁问题我们怎么解决呢？一起来看看吧。<br style=\"word-wrap: break-word;\"/>1.并发问题<br style=\"word-wrap: break-word;\"/>并发大家都知道是什么情况，这里说的是并发多个请求抢占同一个资源,直接上实例吧<br style=\"word-wrap: break-word;\"/>请求：index.php?mod=a&amp;action=b&amp;taskid=6<br style=\"word-wrap: break-word;\"/>处理：<br style=\"word-wrap: break-word;\"/>$key = &quot;a_b::&quot;.$uid.&#39;_&#39;.$taskid;<br style=\"word-wrap: break-word;\"/>$v = $redis-&gt;get($key);<br style=\"word-wrap: break-word;\"/>if($v == 1){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; $redis-&gt;setex($key,10,1);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; //处理逻辑省略<br style=\"word-wrap: break-word;\"/>}<br style=\"word-wrap: break-word;\"/>2.分析<br style=\"word-wrap: break-word;\"/>逻辑看来还可以，结果发现数据库中写入了两个同样的请求结果，我看了记录的时间戳,天!居然是同一秒.<br style=\"word-wrap: break-word;\"/>我用microtime(true) log一下两个请求的时间差居然相差了0.0001s，就是说$redis-&gt;setex($key,10,1);还没执行成功 第二个请求已经get到跟第一个请求一样的结果。这不就是传说中的并发抢占资源。这中情况 听过很多，在开发过程中也没刻意去模拟实验过。<br style=\"word-wrap: break-word;\"/>3.解决<br style=\"word-wrap: break-word;\"/>方案1：第一反应就是要给处理过程加事务(数据库是mysql innoDB)，加事务的结果就是 第一个请求成功了 第二个请求会执行到后面捡查发现重了会回滚。其实mysql事务在保证数据一致性上是很ok的，但是通过回滚来保证唯一资源独占代价太大，做过mysql事务测试测同学都知道，事务中的insert是已经插进去了，回滚之后才删掉的。<br style=\"word-wrap: break-word;\"/>方案2：还有一个选择就是php中的文件独占锁，那就是说这情况下我要新建 用户数 * 任务数的文件来实现每个请求资源的独占，如果独占资源较少的话可选的解决办法：<br style=\"word-wrap: break-word;\"/>/**<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;* 加锁<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;*/<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; public function file_lock($filename){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$fp_key = sha1($filename);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$this-&gt;fps[$fp_key] = fopen($filename, &#39;w+&#39;);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if($this-&gt;fps[$fp_key]){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return flock($this-&gt;fps[$fp_key], LOCK_EX|LOCK_NB);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return false;<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; }<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; /**<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;* 解锁<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;*/<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; public function file_unlock($filename){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$fp_key = sha1($filename);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if($this-&gt;fps[$fp_key] ){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;flock($this-&gt;fps[$fp_key] , LOCK_UN);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;fclose($this-&gt;fps[$fp_key] );<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; }<br style=\"word-wrap: break-word;\"/>方案3：发现$redis-&gt;setnx()可以提供原子操作的状态：相同的key执行setnx之后没过期或者没del，再执行会返回false。这就让两个以上的并发请求得到控制必须成功获取锁才能继续。<br style=\"word-wrap: break-word;\"/>/**<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;加锁<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;*/<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; public function task_lock($taskid){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;$expire = 2;<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; $lock_key =&#39;task_get_reward_&#39;.$this-&gt;uid.&#39;_&#39;.$taskid;<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;$lock = $this-&gt;redis-&gt;setNX($lock_key , time());//设当前时间<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if($lock){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; $this-&gt;redis-&gt;expire($lock_key,&nbsp;&nbsp;$expire); //如果没执行完 2s锁失效<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if(!$lock){//如果获取锁失败 检查时间<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; $time = $this-&gt;redis-&gt;get($lock_key);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if(time() - $time&nbsp;&nbsp;&gt;=&nbsp;&nbsp;$expire){//添加时间戳判断为了避免expire执行失败导致死锁 当然可以用redis自带的事务来保证<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$this-&gt;redis-&gt;rm($lock_key);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; $lock =&nbsp;&nbsp;$this-&gt;redis-&gt;setNX($lock_key , time());<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if($lock){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$this-&gt;redis-&gt;expire($lock_key,&nbsp;&nbsp;$expire); //如果没执行完 2s锁失效<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return $lock;<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;/**<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;*&nbsp;&nbsp;解锁<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;*/<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;public function task_unlock($taskid){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;$this-&gt;set_redis();<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;$lock_key = &#39;task_get_reward_&#39;.$this-&gt;uid.&#39;_&#39;.$taskid;<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;$this-&gt;redis-&gt;rm($lock_key);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br style=\"word-wrap: break-word;\"/>说明下setNX 和expire 这两个操作其实可以用redis事务来保证一致性<br style=\"word-wrap: break-word;\"/></td></tr></tbody></table><p><br/></p>',1477139279,'',100,1,1,18),(17,'   开发后台项目的套路是什么？   ','      ','      ','','<blockquote style=\"margin: 0px 0px 26px; padding: 0px 0px 0px 15px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-style: solid; border-color: rgba(0, 0, 0, 0.14902); white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: pre-wrap; font-size: 22.5px; line-height: 1.25; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 16px;\">需求评估</span></p></blockquote><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">产品经理、开发工程师、测试工程师，组织需求评审会议，讲解本次的开发功能。</span></p><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">开发需分析：</span></p><ul class=\" list-paddingleft-2\" style=\"margin-bottom: 13px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; max-width: 100%; box-sizing: border-box; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">是否涉及到其他开发部门？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">是否需要创建数据库/数据表？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">本次需要做多少页面？</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">有多少功能点，哪些是功能难点？</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">根据以上，给出开发工期（X/人/天）。</span></p><blockquote style=\"margin: 0px 0px 26px; padding: 0px 0px 0px 15px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-style: solid; border-color: rgba(0, 0, 0, 0.14902); white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: pre-wrap; font-size: 22.5px; line-height: 1.25; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 16px;\">跨部门沟通</span></p></blockquote><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">沟通确定后，沟通结果以邮件的形式确认抄送相关Leader。</span></p><blockquote style=\"margin: 0px 0px 26px; padding: 0px 0px 0px 15px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-style: solid; border-color: rgba(0, 0, 0, 0.14902); white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: pre-wrap; font-size: 22.5px; line-height: 1.25; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 16px;\">创建/更改 数据库</span></p></blockquote><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">根据公司要求规范操作数据表，确定后邮件抄送相关开发。</span></p><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">相关SQL语句，需要Leader、DBA 审核，才可部署。</span></p><blockquote style=\"margin: 0px 0px 26px; padding: 0px 0px 0px 15px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-style: solid; border-color: rgba(0, 0, 0, 0.14902); white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: pre-wrap; font-size: 22.5px; line-height: 1.25; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 16px;\">静态页面开发</span></p></blockquote><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">目前后台项目大部分使用 BootStrap，自己拼页面即可。</span></p><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">需要考虑：</span></p><ul class=\" list-paddingleft-2\" style=\"margin-bottom: 13px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; max-width: 100%; box-sizing: border-box; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">代码整洁性（标签元素对齐，DIV区块注释）。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">界面适配（BootStrap 栅格系统）。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">Js 相关验证（尽量自己学js类库，不要写在界面中）。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">产品验收（确认界面元素是否满足使用习惯）。</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">个人感觉界面做的漂亮，成就感也是满满的。</span></p><blockquote style=\"margin: 0px 0px 26px; padding: 0px 0px 0px 15px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-style: solid; border-color: rgba(0, 0, 0, 0.14902); white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: pre-wrap; font-size: 22.5px; line-height: 1.25; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 16px;\">程序逻辑代码开发</span></p></blockquote><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">需要考虑：</span></p><ul class=\" list-paddingleft-2\" style=\"margin-bottom: 13px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; max-width: 100%; box-sizing: border-box; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">复杂的逻辑可以自己先画流程图（</span><code style=\"margin: 0px 0.15em; padding: 0px 0.3em; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 0.85em; color: rgb(221, 17, 68); border-radius: 3px; border: 1px solid rgb(234, 234, 234); white-space: nowrap; display: inline; background-color: rgb(248, 248, 248);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">ProcessOn</span></code><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">）。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">遵循 PHP 代码规范（</span><code style=\"margin: 0px 0.15em; padding: 0px 0.3em; max-width: 100%; box-sizing: border-box; word-wrap: break-word !important; font-family: Consolas, Inconsolata, Courier, monospace; font-size: 0.85em; color: rgb(221, 17, 68); border-radius: 3px; border: 1px solid rgb(234, 234, 234); white-space: nowrap; display: inline; background-color: rgb(248, 248, 248);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">PSR</span></code><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">）。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">代码注释（重要、重要、重要）。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">数据验证（对前端提交的数据进行二次验证）。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">功能逻辑（考虑类库封装，代码复用）。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">性能问题（是否需要用到缓存）。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">安全问题（XSS、Sql注入）。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">日志问题（记录相关日志）。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">错误报警（</span><a href=\"http://mp.weixin.qq.com/s?__biz=MjM5NDM4MDIwNw==&mid=2448834689&idx=1&sn=f71fc5a5810694510991372462ede709&chksm=b28a404185fdc957ea237796d88dee07670a2e0e0496ca0ad4a2ac76e95450cbba5c5c2e0bfe#rd\" target=\"_blank\" style=\"margin: 0px; padding: 0px; color: rgb(179, 51, 255); max-width: 100%; box-sizing: border-box; font-size: 12px; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\">可供参考</span></a><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">）。</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">目前就考虑到以上这些。</span></p><blockquote style=\"margin: 0px 0px 26px; padding: 0px 0px 0px 15px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-style: solid; border-color: rgba(0, 0, 0, 0.14902); white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: pre-wrap; font-size: 22.5px; line-height: 1.25; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 16px;\">功能自测</span></p></blockquote><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">程序开发完毕后，需要自己先进行测试，走一遍全部流程。</span></p><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">需要考虑：</span></p><ul class=\" list-paddingleft-2\" style=\"margin-bottom: 13px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; max-width: 100%; box-sizing: border-box; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">创建一些测试数据。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">考虑功能的临界值。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">确保功能的可用性。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">其他。</span></p></li></ul><blockquote style=\"margin: 0px 0px 26px; padding: 0px 0px 0px 15px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-style: solid; border-color: rgba(0, 0, 0, 0.14902); white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: pre-wrap; font-size: 22.5px; line-height: 1.25; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 16px;\">代码评审（Code Review）</span></p></blockquote><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">代码评审被公认为是一个很好的提高代码质量的手段。</span></p><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">好处：</span></p><ul class=\" list-paddingleft-2\" style=\"margin-bottom: 13px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; max-width: 100%; box-sizing: border-box; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">加速个人的成长，让自己成为一个更优秀的程序员。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">可以分享/学习到更多的知识。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">保证代码清晰，容易被别人理解。</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">提前发现一些缺陷（代码检查者通常比代码编写者更挑剔）。</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">一些开源系统：</span></p><ul class=\" list-paddingleft-2\" style=\"margin-bottom: 13px; margin-left: 25px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; max-width: 100%; box-sizing: border-box; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">Phabricator</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">ReviewNinja</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">Codacy</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">RhodeCode</span></p></li><li><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">Gerrit</span></p></li></ul><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">如果有好的工具帮助我们进行codereview，往往会达到事半功倍的效果。</span></p><blockquote style=\"margin: 0px 0px 26px; padding: 0px 0px 0px 15px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-style: solid; border-color: rgba(0, 0, 0, 0.14902); white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: pre-wrap; font-size: 22.5px; line-height: 1.25; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 16px;\">WIKI 更新</span></p></blockquote><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">将自己开发的功能模块，部署到WIKI上。</span></p><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">写好需求方、开发者、使用者、是否用到API、相关逻辑、流程图...</span></p><blockquote style=\"margin: 0px 0px 26px; padding: 0px 0px 0px 15px; max-width: 100%; box-sizing: border-box; border-left-width: 5px; border-left-style: solid; border-color: rgba(0, 0, 0, 0.14902); white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: pre-wrap; font-size: 22.5px; line-height: 1.25; word-wrap: break-word !important;\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 16px;\">功能提测</span></p></blockquote><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">通知测试人员，该需求可以提测啦~</span></p><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">根据公司要求，可以进行邮件提测，也可以JIRA管理。</span></p><p style=\"margin-top: 0px; margin-bottom: 13px; padding: 0px; max-width: 100%; box-sizing: border-box; clear: both; min-height: 1em; white-space: normal; color: rgb(94, 90, 97); font-family: Arial, sans-serif; font-size: 14.4px; word-wrap: break-word !important; background-color: rgb(255, 255, 255);\"><span style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important; font-size: 12px;\">以上，只是大概的讲述了开发流程。</span></p><p><br/></p>',1477138544,'',100,0,1,18),(18,'PHP 使用 Redis','','','','<h2 style=\"box-sizing: border-box; margin: 0px -15px 20px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-weight: normal; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px; border-left-width: 4px; border-left-style: solid; border-left-color: rgb(66, 139, 202); white-space: normal; background-color: rgb(251, 251, 251);\">安装</h2><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px; white-space: normal;\">开始在 PHP 中使用 Redis 前， 我们需要确保已经安装了 redis 服务及 PHP redis 驱动，且你的机器上能正常使用 PHP。 接下来让我们安装 PHP redis 驱动：下载地址为:<a href=\"https://github.com/phpredis/phpredis/releases\" target=\"_blank\" rel=\"nofollow\" style=\"box-sizing: border-box; color: rgb(0, 160, 133); text-decoration: none;\"><strong style=\"box-sizing: border-box;\">https://github.com/phpredis/phpredis/releases</strong></a>。</p><h3 style=\"box-sizing: border-box; margin: 0px 0px 20px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-weight: normal; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 5px; white-space: normal;\">PHP安装 redis 扩展</h3><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px; white-space: normal;\">以下操作需要在下载的 phpredis 目录中完成：</p><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\"><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">$ wget https</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">:</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">//github.com/phpredis/phpredis/archive/2.2.4.tar.gz</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>$ cd phpredis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-</span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(25, 95, 145);\">2.2</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\"><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(25, 95, 145);\">.</span></span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(25, 95, 145);\">7</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\"># 进入 phpredis 目录</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>$ </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">/</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">usr</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">/</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\"><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">local</span></span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">/</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">php</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">/</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">bin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">/</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">phpize &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\"># php安装后的路径</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>$ </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\"><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">.</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">/</span></span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">configure </span></span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\"><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">--</span></span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\"><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">with</span></span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\"><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">-</span></span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">php</span></span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\"><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">-</span></span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">config</span></span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\"><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">=</span></span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\"><span class=\"str\" style=\"box-sizing: border-box;\">/</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">usr</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">/</span></span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\"><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">local</span></span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">/</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">php</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">/</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">bin</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">/</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">php</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">config<br style=\"box-sizing: border-box;\"/>$ make </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">&amp;&amp;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> make install</span></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px; white-space: normal;\">如果你是 PHP7 版本，则需要下载指定分支：</p><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\">git&nbsp;clone&nbsp;-b&nbsp;php7&nbsp;https://github.com/phpredis/phpredis.git</pre><h3 style=\"box-sizing: border-box; margin: 0px 0px 20px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-weight: normal; line-height: 35px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 16px; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 5px; white-space: normal;\">修改php.ini文件</h3><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\">vi&nbsp;/usr/local/php/lib/php.ini</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px; white-space: normal;\">增加如下内容:</p><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\"><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">extension_dir </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">=</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;/usr/local/php/lib/php/extensions/no-debug-zts-20090626&quot;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/><br style=\"box-sizing: border-box;\"/>extension</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">=</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">.</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">so</span></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px; white-space: normal;\">安装完成后重启php-fpm 或 apache。查看phpinfo信息，就能看到redis扩展。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px; white-space: normal;\"><a href=\"http://w3cschool.codecloud.net/redis/php-use-redis.html/attachment/14022020088882\" rel=\"attachment wp-att-2631\" style=\"box-sizing: border-box; color: rgb(0, 160, 133); text-decoration: none;\"><img class=\"aligncenter  wp-image-2631\" src=\"http://codecloud.b0.upaiyun.com/14022020088882.jpg\" alt=\"14022020088882\" width=\"566\" height=\"253\" style=\"box-sizing: border-box; border: 1px solid rgb(230, 230, 230); max-width: 95%; height: auto; vertical-align: middle; padding: 5px; clear: both; display: block; margin: auto;\"/></a></p><h2 style=\"box-sizing: border-box; margin: 0px -15px 20px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-weight: normal; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px; border-left-width: 4px; border-left-style: solid; border-left-color: rgb(66, 139, 202); white-space: normal; background-color: rgb(251, 251, 251);\">连接到 redis 服务</h2><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\"><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">&lt;?</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">php<br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp; </span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">//连接本地的 Redis 服务</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">=</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">new</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">();</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">connect</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&#39;127.0.0.1&#39;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">,</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(25, 95, 145);\">6379</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;echo </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Connection to server sucessfully&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">//查看服务是否运行</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;echo </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Server is running: &quot;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">.</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> $redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">ping</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">();</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/></span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">?&gt;</span></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px; white-space: normal;\">执行脚本，输出结果为：</p><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\"><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Connection</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> to server sucessfully<br style=\"box-sizing: border-box;\"/></span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Server</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">is</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> running</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">:</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> PONG</span></pre><h2 style=\"box-sizing: border-box; margin: 0px -15px 20px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-weight: normal; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px; border-left-width: 4px; border-left-style: solid; border-left-color: rgb(66, 139, 202); white-space: normal; background-color: rgb(251, 251, 251);\">Redis PHP String(字符串) 实例</h2><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\"><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">&lt;?</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">php<br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\"><span class=\"com\" style=\"box-sizing: border-box;\">//</span><a href=\"http://w3cschool.codecloud.net/\" style=\"box-sizing: border-box; color: rgb(0, 160, 133); text-decoration: none;\"><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">连接本地的 Redis 服务</span></a></span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">=</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">new</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">();</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">connect</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&#39;127.0.0.1&#39;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">,</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(25, 95, 145);\">6379</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;echo </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Connection to server sucessfully&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">//设置 redis 字符串数据</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">set</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;tutorial-name&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">,</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Redis tutorial&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">// 获取存储的数据并输出</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;echo </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Stored string in redis:: &quot;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">.</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> $redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">get</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;tutorial-name&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/></span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">?&gt;</span></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px; white-space: normal;\">执行脚本，输出结果为：</p><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\"><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Connection</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> to server sucessfully<br style=\"box-sizing: border-box;\"/></span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Stored</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">string</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">in</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">::</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Redis</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> tutorial</span></pre><h2 style=\"box-sizing: border-box; margin: 0px -15px 20px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-weight: normal; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px; border-left-width: 4px; border-left-style: solid; border-left-color: rgb(66, 139, 202); white-space: normal; background-color: rgb(251, 251, 251);\">Redis PHP List(列表) 实例</h2><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\"><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">&lt;?</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">php<br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">//连接本地的 Redis 服务</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">=</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">new</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">();</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">connect</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&#39;127.0.0.1&#39;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">,</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(25, 95, 145);\">6379</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;echo </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Connection to server sucessfully&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">//存储数据到列表中</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">lpush</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;tutorial-list&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">,</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Redis&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">lpush</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;tutorial-list&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">,</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Mongodb&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">lpush</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;tutorial-list&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">,</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Mysql&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">// 获取存储的数据并输出</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$arList </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">=</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> $redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">lrange</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;tutorial-list&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">,</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(25, 95, 145);\">0</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">,</span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(25, 95, 145);\">5</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;echo </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Stored string in redis:: &quot;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;print_r</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">$arList</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/></span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">?&gt;</span></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px; white-space: normal;\">执行脚本，输出结果为：</p><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\"><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Connection</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> to server sucessfully<br style=\"box-sizing: border-box;\"/></span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Stored</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">string</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">in</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">::</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/></span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Redis</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/></span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Mongodb</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/></span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Mysql</span></pre><h2 style=\"box-sizing: border-box; margin: 0px -15px 20px; font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-weight: normal; line-height: 18px; color: rgb(85, 85, 85); text-rendering: optimizeLegibility; font-size: 18px; padding: 10px 20px 9px; border-left-width: 4px; border-left-style: solid; border-left-color: rgb(66, 139, 202); white-space: normal; background-color: rgb(251, 251, 251);\">Redis PHP Keys 实例</h2><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\"><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">&lt;?</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">php<br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">//连接本地的 Redis 服务</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">=</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">new</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">();</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">connect</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&#39;127.0.0.1&#39;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">,</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"lit\" style=\"box-sizing: border-box; color: rgb(25, 95, 145);\">6379</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;echo </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Connection to server sucessfully&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;</span><span class=\"com\" style=\"box-sizing: border-box; color: rgb(147, 161, 161);\">// 获取数据并输出</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;$arList </span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">=</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> $redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-&gt;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">keys</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;*&quot;</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;echo </span><span class=\"str\" style=\"box-sizing: border-box; color: rgb(230, 219, 116);\">&quot;Stored keys in redis:: &quot;</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>&nbsp; &nbsp;print_r</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">(</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">$arList</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">);</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/></span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">?&gt;</span></pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 15px; color: rgb(85, 85, 85); font-family: &quot;Microsoft Yahei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; font-size: 15px; line-height: 25px; white-space: normal;\">执行脚本，输出结果为：</p><pre class=\"prettyprint prettyprinted\" style=\"box-sizing: border-box; padding: 10px 20px; font-family: &quot;courier new&quot;; font-size: 12px; color: rgb(248, 248, 212); border-radius: 0px; margin-top: 20px; margin-bottom: 20px; line-height: 20px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; border: none; overflow: auto; font-stretch: normal; background-color: rgb(74, 74, 74);\"><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Connection</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> to server sucessfully<br style=\"box-sizing: border-box;\"/></span><span class=\"typ\" style=\"box-sizing: border-box; color: rgb(166, 226, 46);\">Stored</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">string</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> </span><span class=\"kwd\" style=\"box-sizing: border-box; color: rgb(249, 38, 89);\">in</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"> redis</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">::</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\"><br style=\"box-sizing: border-box;\"/>tutorial</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">name<br style=\"box-sizing: border-box;\"/>tutorial</span><span class=\"pun\" style=\"box-sizing: border-box; color: rgb(248, 248, 242);\">-</span><span class=\"pln\" style=\"box-sizing: border-box; color: rgb(102, 217, 239);\">list</span></pre><p><br/></p>',0,'',100,0,1,18),(19,'  PHP/JS 常用的正则表达式  ','    ','    ','','<table cellspacing=\"0\" cellpadding=\"0\" width=\"999\" style=\"width: 828px;\"><tbody style=\"word-wrap: break-word;\"><tr style=\"word-wrap: break-word;\" class=\"firstRow\"><td class=\"t_f\" id=\"postmessage_142074\" style=\"word-wrap: break-word;\"><p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">正则表达式的都是匹配和替换</span></p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">PHP 搜索 preg_match*</span><br style=\"word-wrap: break-word;\"/><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>/**<br style=\"word-wrap: break-word;\"/></p></li><li><p>* int preg_match* ( string $pattern , string $subject [, array &amp;$matches [, int $flags = 0 [, int $offset = 0 ]]] )<br style=\"word-wrap: break-word;\"/></p></li><li><p>* $pattern 正则表达式<br style=\"word-wrap: break-word;\"/></p></li><li><p>* $subject 要匹配的字符串<br style=\"word-wrap: break-word;\"/></p></li><li><p>* &amp;$matches 匹配到的字符串<br style=\"word-wrap: break-word;\"/></p></li><li><p>* return 匹配到的个数，没有匹配到返回0<br style=\"word-wrap: break-word;\"/></p></li><li><p>*/</p></li></ol><p><span style=\"word-wrap: break-word; margin-left: 43px; font-size: 12px; cursor: pointer; color: rgb(85, 85, 85) !important;\">复制代码</span></p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">下面是例子</span><br style=\"word-wrap: break-word;\"/><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>$pattern = &quot;/\\d{2}/&quot;;<br style=\"word-wrap: break-word;\"/></p></li><li><p>$content = &quot;12:34:56:78:9a&quot;;<br style=\"word-wrap: break-word;\"/></p></li><li><p>// 执行一个正则表达式匹配， 非贪婪<br style=\"word-wrap: break-word;\"/></p></li><li><p>if (preg_match ($pattern, $content, $m)){<br style=\"word-wrap: break-word;\"/></p></li><li><p>print_r($m);<br style=\"word-wrap: break-word;\"/></p></li><li><p>}<br style=\"word-wrap: break-word;\"/></p></li><li><p>// 执行一个全局正则表达式匹配， 贪婪<br style=\"word-wrap: break-word;\"/></p></li><li><p>if ($c = preg_match_all($pattern, $content, $m)){<br style=\"word-wrap: break-word;\"/></p></li><li><p>echo &quot;match numbers is &quot;.$c.&quot;\\n&quot;;<br style=\"word-wrap: break-word;\"/></p></li><li><p>print_r($m);<br style=\"word-wrap: break-word;\"/></p></li><li><p>}</p></li></ol><p><span style=\"word-wrap: break-word; margin-left: 43px; font-size: 12px; cursor: pointer; color: rgb(85, 85, 85) !important;\">复制代码</span></p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">执行结果</span><br style=\"word-wrap: break-word;\"/><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>$ php run.php<br style=\"word-wrap: break-word;\"/></p></li><li><p>Array<br style=\"word-wrap: break-word;\"/></p></li><li><p>(<br style=\"word-wrap: break-word;\"/></p></li><li><p>[0] =&gt; 12<br style=\"word-wrap: break-word;\"/></p></li><li><p>)<br style=\"word-wrap: break-word;\"/></p></li><li><p>match numbers is 4<br style=\"word-wrap: break-word;\"/></p></li><li><p>Array<br style=\"word-wrap: break-word;\"/></p></li><li><p>(<br style=\"word-wrap: break-word;\"/></p></li><li><p>[0] =&gt; Array<br style=\"word-wrap: break-word;\"/></p></li><li><p>(<br style=\"word-wrap: break-word;\"/></p></li><li><p>[0] =&gt; 12<br style=\"word-wrap: break-word;\"/></p></li><li><p>[1] =&gt; 34<br style=\"word-wrap: break-word;\"/></p></li><li><p>[2] =&gt; 56<br style=\"word-wrap: break-word;\"/></p></li><li><p>[3] =&gt; 78<br style=\"word-wrap: break-word;\"/></p></li><li><p>)<br style=\"word-wrap: break-word;\"/></p></li><li><p>)</p></li></ol><p><span style=\"word-wrap: break-word; margin-left: 43px; font-size: 12px; cursor: pointer; color: rgb(85, 85, 85) !important;\">复制代码</span></p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">preg_grep</span><br style=\"word-wrap: break-word;\"/><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>&lt;?php<br style=\"word-wrap: break-word;\"/></p></li><li><p>$pattern = &quot;/^[a-z]*$/i&quot;;<br style=\"word-wrap: break-word;\"/></p></li><li><p>$content = [&quot;Mechanical Engineering&quot;,<br style=\"word-wrap: break-word;\"/></p></li><li><p>&quot;Medicine&quot;,<br style=\"word-wrap: break-word;\"/></p></li><li><p>&quot;Social Science&quot;,<br style=\"word-wrap: break-word;\"/></p></li><li><p>&quot;Agriculture&quot;,<br style=\"word-wrap: break-word;\"/></p></li><li><p>&quot;Commercial Science&quot;,<br style=\"word-wrap: break-word;\"/></p></li><li><p>&quot;Politics&quot; ];<br style=\"word-wrap: break-word;\"/></p></li><li><p>// 匹配所有仅由有一个单词组成的科目名<br style=\"word-wrap: break-word;\"/></p></li><li><p>$alonewords = preg_grep($pattern, $content);<br style=\"word-wrap: break-word;\"/></p></li><li><p>foreach($alonewords as $key =&gt; $value){<br style=\"word-wrap: break-word;\"/></p></li><li><p>echo $key.$value.&quot;\\n&quot;;<br style=\"word-wrap: break-word;\"/></p></li><li><p>}<br style=\"word-wrap: break-word;\"/></p></li><li><p>?&gt;</p></li></ol><p><span style=\"word-wrap: break-word; margin-left: 43px; font-size: 12px; cursor: pointer; color: rgb(85, 85, 85) !important;\">复制代码</span></p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">输出结果</span><br style=\"word-wrap: break-word;\"/><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>$ php run.php<br style=\"word-wrap: break-word;\"/></p></li><li><p>1Medicine<br style=\"word-wrap: break-word;\"/></p></li><li><p>3Agriculture<br style=\"word-wrap: break-word;\"/></p></li><li><p>5Politics</p></li></ol><p><span style=\"word-wrap: break-word; margin-left: 43px; font-size: 12px; cursor: pointer; color: rgb(85, 85, 85) !important;\">复制代码</span></p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">替换 preg_replace</span><br style=\"word-wrap: break-word;\"/><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>/**<br style=\"word-wrap: break-word;\"/></p></li><li><p>* mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )<br style=\"word-wrap: break-word;\"/></p></li><li><p>* $pattern 正则表达式<br style=\"word-wrap: break-word;\"/></p></li><li><p>* $subject 要匹配的字符串<br style=\"word-wrap: break-word;\"/></p></li><li><p>* $replacement 用于替换的字符串或字符串数组, replacement和subject的类型相同<br style=\"word-wrap: break-word;\"/></p></li><li><p>* return 替换的后的对象，类型和subject相同<br style=\"word-wrap: break-word;\"/></p></li><li><p>*/</p></li></ol><p><span style=\"word-wrap: break-word; margin-left: 43px; font-size: 12px; cursor: pointer; color: rgb(85, 85, 85) !important;\">复制代码</span></p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">例子</span><br style=\"word-wrap: break-word;\"/><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>&lt;?php<br style=\"word-wrap: break-word;\"/></p></li><li><p>$content = &quot;Name: {Name}\\nEmail: {Email}\\nAddress: {Address}\\n&quot;;<br style=\"word-wrap: break-word;\"/></p></li><li><p>$patterns = [&quot;/{Name}/&quot;, &quot;/{Email}/&quot;, &quot;/{Address}/&quot;];<br style=\"word-wrap: break-word;\"/></p></li><li><p>$replace = [&quot;Jaime&quot;, &quot;xsu@viewtool.com&quot;, &quot;Chongqing China&quot;];<br style=\"word-wrap: break-word;\"/></p></li><li><p>echo preg_replace($patterns, $replace, $content);<br style=\"word-wrap: break-word;\"/></p></li><li><p>?&gt;</p></li></ol><p><span style=\"word-wrap: break-word; margin-left: 43px; font-size: 12px; cursor: pointer; color: rgb(85, 85, 85) !important;\">复制代码</span></p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">输出结果</span><br style=\"word-wrap: break-word;\"/><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>$php run.php<br style=\"word-wrap: break-word;\"/></p></li><li><p>Name: Jaime<br style=\"word-wrap: break-word;\"/></p></li><li><p>Email: xsu@viewtool.com<br style=\"word-wrap: break-word;\"/></p></li><li><p>Address: Chongqing China</p></li></ol><p><span style=\"word-wrap: break-word; margin-left: 43px; font-size: 12px; cursor: pointer; color: rgb(85, 85, 85) !important;\">复制代码</span></p><p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">这个相当于就是最简单的模板实现了</span></p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">php其他</span><p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">PHP preg:<a href=\"http://php.net/manual/zh/ref.pcre.php\" target=\"_blank\" class=\"gj_safe_a\" style=\"word-wrap: break-word; color: rgb(85, 85, 85);\">http://php.net/manual/zh/ref.pcre.php</a><br style=\"word-wrap: break-word;\"/>下面有所有的函数手册<br style=\"word-wrap: break-word;\"/>preg_match<br style=\"word-wrap: break-word;\"/>preg_match_all<br style=\"word-wrap: break-word;\"/>preg_grep<br style=\"word-wrap: break-word;\"/>preg_replace<br style=\"word-wrap: break-word;\"/>preg_replace_callback<br style=\"word-wrap: break-word;\"/>preg_replace_callback_array<br style=\"word-wrap: break-word;\"/>preg_filter<br style=\"word-wrap: break-word;\"/>grep_quote<br style=\"word-wrap: break-word;\"/>grep_split<br style=\"word-wrap: break-word;\"/>grep_last_error</span></p><p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">PHP常用正则表达式汇总</span></p></td></tr></tbody></table><p><br/></p>',1477137001,'',100,1,1,18),(20,' PHP设计模式(五)：多态 ','  ','','','<p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">原文地址：PHP设计模式(五)：多态</span></p><p><span style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Introduction</span></p><p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">在PHP设计模式(四)：继承中我们介绍了继承，利用extends来进行程序设计的方法。<br style=\"word-wrap: break-word;\"/>在PHP设计模式(二)：抽象类和接口中我们介绍了接口，事实上也存在利用interface的程序设计方法，那就是多态。<br style=\"word-wrap: break-word;\"/>和C/C++，Java，Python等语言一样，PHP也支持多态。多态更多是是一种面向对象程序设计的概念，让同一类对象执行同一个接口，但却实现不同的逻辑功能。</span></p><p><span style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">多态/Polymorphism</span></p><p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">还是用动物、鲸鱼和鲤鱼来举例：</span></p><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>&lt;?php<br style=\"word-wrap: break-word;\"/></p></li><li><p>interface IEat {<br style=\"word-wrap: break-word;\"/></p></li><li><p>function eatFish();<br style=\"word-wrap: break-word;\"/></p></li><li><p>function eatMoss();<br style=\"word-wrap: break-word;\"/></p></li><li><p>}<br style=\"word-wrap: break-word;\"/></p></li><li><p>class Whale implements IEat {<br style=\"word-wrap: break-word;\"/></p></li><li><p>public function eatFish() {<br style=\"word-wrap: break-word;\"/></p></li><li><p>echo &quot;Whale eats fish.\\n&quot;;<br style=\"word-wrap: break-word;\"/></p></li><li><p>}<br style=\"word-wrap: break-word;\"/></p></li><li><p>public function eatMoss() {<br style=\"word-wrap: break-word;\"/></p></li><li><p>echo &quot;Whale doesn&#39;t eat fish\\n&quot;;<br style=\"word-wrap: break-word;\"/></p></li><li><p>}<br style=\"word-wrap: break-word;\"/></p></li><li><p>}<br style=\"word-wrap: break-word;\"/></p></li><li><p>class Carp implements IEat {<br style=\"word-wrap: break-word;\"/></p></li><li><p>public function eatFish() {<br style=\"word-wrap: break-word;\"/></p></li><li><p>echo &quot;Carp doesn&#39;t eat moss.\\n&quot;;<br style=\"word-wrap: break-word;\"/></p></li><li><p>}<br style=\"word-wrap: break-word;\"/></p></li><li><p>public function eatMoss() {<br style=\"word-wrap: break-word;\"/></p></li><li><p>echo &quot;Carp eats moss.\\n&quot;;<br style=\"word-wrap: break-word;\"/></p></li><li><p>}<br style=\"word-wrap: break-word;\"/></p></li><li><p>}<br style=\"word-wrap: break-word;\"/></p></li><li><p>$whale = new Whale();<br style=\"word-wrap: break-word;\"/></p></li><li><p>$whale-&gt;eatFish();<br style=\"word-wrap: break-word;\"/></p></li><li><p>$whale-&gt;eatMoss();<br style=\"word-wrap: break-word;\"/></p></li><li><p>$carp = new Carp();<br style=\"word-wrap: break-word;\"/></p></li><li><p>$carp-&gt;eatFish();<br style=\"word-wrap: break-word;\"/></p></li><li><p>$carp-&gt;eatMoss();<br style=\"word-wrap: break-word;\"/></p></li><li><p>?&gt;</p></li></ol><p><span style=\"word-wrap: break-word; margin-left: 43px; font-size: 12px; cursor: pointer; color: rgb(85, 85, 85) !important;\">复制代码</span></p><p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">运行一下：</span></p><ol style=\"list-style-type: none;\" class=\" list-paddingleft-2\"><li><p>$ php Inheritance.php<br style=\"word-wrap: break-word;\"/></p></li><li><p>Whale eats fish.<br style=\"word-wrap: break-word;\"/></p></li><li><p>Whale doesn&#39;t eat fish.<br style=\"word-wrap: break-word;\"/></p></li><li><p>Carp eats moss.<br style=\"word-wrap: break-word;\"/></p></li><li><p>Carp doesn&#39;t eat moss.</p></li></ol><p><span style=\"word-wrap: break-word; margin-left: 43px; font-size: 12px; cursor: pointer; color: rgb(85, 85, 85) !important;\">复制代码</span></p><p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">注意PHP的函数定义不包含返回值，因此完全可以给不同的接口实现返回不同类型的数据。这一点和C/C++，Java等语言是不同的。此外，返回不同类型的数据，甚至不返回结果，对程序设计来说，会额外增加维护成本，已经和使用接口的初衷不同了（接口为了封装实现，而不同的返回值事实上是需要调用者去理解实现的）。</span></p><p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">Summary</span></p><p><span style=\"font-family:Tahoma,;word-wrap: break-word;\">合理利用多态对接口进行不同的实现，简化你的编程模型，让代码易于维护。</span></p><p><br/></p>',1477137023,'',1001,0,1,18),(21,' PHP面试常用算法','','','','<pre class=\"brush:php;toolbar:false\">一、冒泡排序　　基本思想：\r\n　　　　对需要排序的数组从后往前（逆序）进行多遍的扫描，当发现相邻的两个数值的次序与排序要求的规则不一致时，就将这两个数值进行交换。这样比较小（大）的数值就将逐渐从后面向前面移动。\r\n　　//冒泡排序\r\n&nbsp;1&nbsp;&lt;?php&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//冒泡排序&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;mysort($arr)&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for($i&nbsp;=&nbsp;0;&nbsp;$i&nbsp;&lt;&nbsp;count($arr);&nbsp;$i++)&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$isSort&nbsp;=&nbsp;true;&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;($j=0;&nbsp;$j&lt;&nbsp;count($arr)&nbsp;-&nbsp;$i&nbsp;-&nbsp;1;&nbsp;$j++)&nbsp;\r\n&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($arr[$j]&nbsp;&lt;&nbsp;$arr[$j+1])11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$isSort&nbsp;=&nbsp;false;13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$temp&nbsp;=&nbsp;$arr[$j];14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$j]&nbsp;=&nbsp;$arr[$j+1];15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$j+1]&nbsp;=&nbsp;$temp&nbsp;;16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($isSort)19&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;21&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}23&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$arr;24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}25&nbsp;26&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr&nbsp;=&nbsp;array(3,1,2,6,5,3,3,9,95,65);27&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var_dump(mysort($arr));28&nbsp;?&gt;\r\n&nbsp;\r\n　　二、快速排序\r\n　　基本思想：\r\n　　　　在数组中挑出一个元素（多为第一个）作为标尺，扫描一遍数组将比标尺小的元素排在标尺之前，将所有比标尺大的元素排在标尺之后，通过递归将各子序列分别划分为更小的序列直到所有的序列顺序一致。\r\n　　//快速排序\r\n&nbsp;1&nbsp;&lt;?php&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//快速排序&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;quick_sort($arr)&nbsp;\r\n&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//先判断是否需要继续进行&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$length&nbsp;=&nbsp;count($arr);&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($length&nbsp;&lt;=&nbsp;1)&nbsp;\r\n&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$arr;10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$base_num&nbsp;=&nbsp;$arr[0];//选择一个标尺&nbsp;&nbsp;选择第一个元素13&nbsp;14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//初始化两个数组15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$left_array&nbsp;=&nbsp;array();//小于标尺的16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$right_array&nbsp;=&nbsp;array();//大于标尺的17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for($i=1;&nbsp;$i&lt;$length;&nbsp;$i++)&nbsp;\r\n18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//遍历&nbsp;除了标尺外的所有元素，按照大小关系放入两个数组内19&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($base_num&nbsp;&gt;&nbsp;$arr[$i])&nbsp;\r\n20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{21&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//放入左边数组22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$left_array[]&nbsp;=&nbsp;$arr[$i];23&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{26&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//放入右边27&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$right_array[]&nbsp;=&nbsp;$arr[$i];28&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}29&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}30&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//再分别对&nbsp;左边&nbsp;和&nbsp;右边的数组进行相同的排序处理方式31&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//递归调用这个函数,并记录结果32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$left_array&nbsp;=&nbsp;quick_sort($left_array);33&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$right_array&nbsp;=&nbsp;quick_sort($right_array);34&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//合并左边&nbsp;标尺&nbsp;右边35&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;array_merge($left_array,&nbsp;array($base_num),&nbsp;$right_array);36&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}37&nbsp;38&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr&nbsp;=&nbsp;array(3,1,2);39&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var_dump(quick_sort($arr));40&nbsp;41&nbsp;?&gt;\r\n　　\r\n　　三、二分查找\r\n　　基本思想：\r\n　　　　假设数据是按升序排序的，对于给定值x，从序列的中间位置开始比较，如果当前位置值等于x，则查找成功；若x小于当前位置值，则在数列的前半段中查找；若x大于当前位置值则在数列的后半段中继续查找，直到找到为止。（数据量大的时候使用）\r\n　　//二分查找\r\n&nbsp;1&nbsp;&lt;?php&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//二分查找&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;bin_search($arr,$low,$high,$k)&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($low&nbsp;&lt;=&nbsp;$high)&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$mid&nbsp;=&nbsp;intval(($low&nbsp;+&nbsp;$high)/2);&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($arr[$mid]&nbsp;==&nbsp;$k)&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$mid;11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;if($k&nbsp;&lt;&nbsp;$arr[$mid])13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;bin_search($arr,$low,$mid-1,$k);15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;bin_search($arr,$mid+1,$high,$k);19&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}21&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;-1;22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}23&nbsp;24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr&nbsp;=&nbsp;array(1,2,3,4,5,6,7,8,9,10);25&nbsp;26&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(bin_search($arr,0,9,3));27&nbsp;?&gt;\r\n&nbsp;\r\n　　四、顺序查找\r\n　　基本思想：\r\n　　　　从数组的第一个元素开始一个一个向下查找，如果有和目标一致的元素，查找成功；如果到最后一个元素仍没有目标元素，则查找失败。\r\n　　　　//顺序查找　\r\n&nbsp;1&nbsp;&lt;?php&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//顺序查找&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;seq_search($arr,$n,$k)&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$array[$n]&nbsp;=&nbsp;$k;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for($i&nbsp;=&nbsp;0;$i&nbsp;&lt;&nbsp;$n;&nbsp;$i++)&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($arr[$i]&nbsp;==&nbsp;$k)&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}13&nbsp;14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($i&nbsp;&lt;&nbsp;$n)15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$i;17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else19&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;-1;21&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}23&nbsp;?&gt;\r\n　　\r\n　　五、写一个函数，能够遍历一个文件下的所有文件和子文件夹\r\n&nbsp;1&nbsp;&lt;?php&nbsp;&nbsp;&nbsp;&nbsp;\r\n&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;my_scandir($dir)&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$files&nbsp;=&nbsp;array();&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($handle&nbsp;=&nbsp;opendir($dir))&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(($file&nbsp;=&nbsp;readdir($handle))!==&nbsp;false)&nbsp;\r\n&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($file&nbsp;!=&nbsp;&#39;..&#39;&nbsp;&amp;&amp;&nbsp;$file&nbsp;!=&nbsp;&#39;.&#39;)10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(is_dir($dir.&quot;/&quot;.$file))12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$files[$file]=my_scandir($dir.&quot;/&quot;.$file);14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$files[]&nbsp;=&nbsp;$file;18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}19&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}20&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}21&nbsp;22&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;closedir($handle);23&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$files;24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}25&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}26&nbsp;27&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var_dump(my_scandir(&#39;../&#39;));28&nbsp;?&gt;\r\n　　\r\n　　六、写一个函数，尽可能高效的从一个标准url中取出文件的扩展名\r\n&nbsp;1&nbsp;&lt;?php&nbsp;2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;function&nbsp;getExt($url)&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr&nbsp;=&nbsp;parse_url($url);//parse_url解析一个&nbsp;URL&nbsp;并返回一个关联数组，包含在&nbsp;URL&nbsp;中出现的各种组成部分&nbsp;5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&#39;scheme&#39;&nbsp;=&gt;&nbsp;string&nbsp;&#39;http&#39;&nbsp;(length=4)&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&#39;host&#39;&nbsp;=&gt;&nbsp;string&nbsp;&#39;www.sina.com.cn&#39;&nbsp;(length=15)&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&#39;path&#39;&nbsp;=&gt;&nbsp;string&nbsp;&#39;/abc/de/fg.php&#39;&nbsp;(length=14)&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&#39;query&#39;&nbsp;=&gt;&nbsp;string&nbsp;&#39;id=1&#39;&nbsp;(length=4)&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$file&nbsp;=&nbsp;basename($arr[&#39;path&#39;]);//&nbsp;basename函数返回路径中的文件名部分10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ext&nbsp;=&nbsp;explode(&#39;.&#39;,&nbsp;$file);11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$ext[count($ext)-1];12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}13&nbsp;14&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;print(getExt(&#39;http://www.sina.com.cn/abc/de/fg.html.php?id=1&#39;));15&nbsp;16&nbsp;?&gt;\r\n　　\r\n　　七、实现中文字符串截取无乱码的方法\r\n　　　　可使用mb_substr,但是需要确保在php.ini中加载了php_mbstring.dll，即确保“extension=php_mbstring.dll”这一行存在并且没有被注释掉，否则会出现未定义函&nbsp;数的问题。</pre><p><br/></p>',0,'',1002,0,1,18),(22,'PHP 中九大缓存技术总结','','','','<h2 style=\"margin: 20px 0px; padding: 5px 5px 5px 10px; font-weight: 400; font-family: verdana, arial, helvetica, sans-serif; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(255, 97, 0); font-size: 21px; line-height: 30px; white-space: normal; color: rgb(0, 107, 173); background: rgb(255, 255, 255);\">1、全页面静态化缓存</h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">也就是将页面全部生成html静态页面，用户访问时直接访问的静态页面，而不会去走php服务器解析的流程。此种方式，在CMS系统中比较常见，比如dedecms；</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">一种比较常用的实现方式是用输出缓存：</p><pre class=\"\" style=\"margin: 15px auto; padding: 10px 15px; font-family: &quot;courier new&quot;; font-stretch: normal; font-size: 12px; line-height: 20px; word-wrap: break-word; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(69, 69, 69); background-color: rgb(251, 251, 251);\">Ob_start()******要运行的代码*******$content&nbsp;=&nbsp;Ob_get_contents();****将缓存内容写入html文件*****Ob_end_clean();</pre><h2 style=\"margin: 20px 0px; padding: 5px 5px 5px 10px; font-weight: 400; font-family: verdana, arial, helvetica, sans-serif; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(255, 97, 0); font-size: 21px; line-height: 30px; white-space: normal; color: rgb(0, 107, 173); background: rgb(255, 255, 255);\">2、页面部分缓存</h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">该种方式，是将一个页面中不经常变的部分进行静态缓存，而经常变化的块不缓存，最后组装在一起显示；可以使用类似于ob_get_contents的方式实现，也可以利用类似ESI之类的页面片段缓存策略，使其用来做动态页面中相对静态的片段部分的缓存(ESI技术，请baidu，此处不详讲)。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">该种方式可以用于如商城中的商品页；</p><h2 style=\"margin: 20px 0px; padding: 5px 5px 5px 10px; font-weight: 400; font-family: verdana, arial, helvetica, sans-serif; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(255, 97, 0); font-size: 21px; line-height: 30px; white-space: normal; color: rgb(0, 107, 173); background: rgb(255, 255, 255);\">3、数据缓存</h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">顾名思义，就是缓存数据的一种方式；比如，商城中的某个商品信息，当用商品id去请求时，就会得出包括店铺信息、商品信息等数据，此时就可以将这些数据缓存到一个php文件中，文件名包含商品id来建一个唯一标示；下一次有人想查看这个商品时，首先就直接调这个文件里面的信息，而不用再去数据库查询；其实缓存文件中缓存的就是一个php数组之类；</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">Ecmall商城系统里面就用了这种方式；</p><h2 style=\"margin: 20px 0px; padding: 5px 5px 5px 10px; font-weight: 400; font-family: verdana, arial, helvetica, sans-serif; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(255, 97, 0); font-size: 21px; line-height: 30px; white-space: normal; color: rgb(0, 107, 173); background: rgb(255, 255, 255);\">4、查询缓存</h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">其实这跟数据缓存是一个思路，就是根据查询语句来缓存；将查询得到的数据缓存在一个文件中，下次遇到相同的查询时，就直接先从这个文件里面调数据，不会再去查数据库；但此处的缓存文件名可能就需要以查询语句为基点来建立唯一标示；</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">按时间变更进行缓存</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">其实，这一条不是真正的缓存方式；上面的2、3、4的缓存技术一般都用到了时间变更判断；就是对于缓存文件您需要设一个有效时间，在这个有效时间内，相同的访问才会先取缓存文件的内容，但是超过设定的缓存时间，就需要重新从数据库中获取数据，并生产最新的缓存文件；比如，我将我们商城的首页就是设置2个小时更新一次；</p><h2 style=\"margin: 20px 0px; padding: 5px 5px 5px 10px; font-weight: 400; font-family: verdana, arial, helvetica, sans-serif; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(255, 97, 0); font-size: 21px; line-height: 30px; white-space: normal; color: rgb(0, 107, 173); background: rgb(255, 255, 255);\">5、按内容变更进行缓存</h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">这个也并非独立的缓存技术，需结合着用；就是当数据库内容被修改时，即刻更新缓存文件；<br/>比如，一个人流量很大的商城，商品很多，商品表必然比较大，这表的压力也比较重；我们就可以对商品显示页进行页面缓存；</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">当商家在后台修改这个商品的信息时，点击保存，我们同时就更新缓存文件；那么，买家访问这个商品信息时，实际上访问的是一个静态页面，而不需要再去访问数据库；</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">试想，如果对商品页不缓存，那么每次访问一个商品就要去数据库查一次，如果有10万人在线浏览商品，那服务器压力就大了；</p><h2 style=\"margin: 20px 0px; padding: 5px 5px 5px 10px; font-weight: 400; font-family: verdana, arial, helvetica, sans-serif; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(255, 97, 0); font-size: 21px; line-height: 30px; white-space: normal; color: rgb(0, 107, 173); background: rgb(255, 255, 255);\">6、内存式缓存</h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">提到这个，可能大家想到的首先就是Memcached；memcached是高性能的分布式内存缓存服务器。 一般的使用目的是，通过缓存数据库查询结果，减少数据库访问次数，以提高动态Web应用的速度、 提高可扩展性。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">它就是将需要缓存的信息，缓存到系统内存中，需要获取信息时，直接到内存中取；比较常用的方式就是 key–&gt;value方式；</p><pre class=\"\" style=\"margin: 15px auto; padding: 10px 15px; font-family: &quot;courier new&quot;; font-stretch: normal; font-size: 12px; line-height: 20px; word-wrap: break-word; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(69, 69, 69); background-color: rgb(251, 251, 251);\">&lt;?php&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcachehost&nbsp;=&nbsp;&#39;192.168.6.191&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcacheport&nbsp;=&nbsp;11211;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcachelife&nbsp;=&nbsp;60;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcache&nbsp;=&nbsp;new&nbsp;Memcache;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcache-&gt;connect($memcachehost,$memcacheport)&nbsp;or&nbsp;die&nbsp;(&quot;Could&nbsp;not&nbsp;connect&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$memcache-&gt;set(&#39;key&#39;,&#39;缓存的内容&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$get&nbsp;=&nbsp;$memcache-&gt;get($key);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//获取信息?&gt;</pre><h2 style=\"margin: 20px 0px; padding: 5px 5px 5px 10px; font-weight: 400; font-family: verdana, arial, helvetica, sans-serif; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(255, 97, 0); font-size: 21px; line-height: 30px; white-space: normal; color: rgb(0, 107, 173); background: rgb(255, 255, 255);\">7、apache缓存模块</h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">apache安装完以后，是不允许被cache的。如果外接了cache或squid服务器要求进行web加速的话，就需要在htttpd.conf里进行设置，当然前提是在安装apache的时候要激活mod_cache的模块。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">安装apache时：./configure –enable-cache –enable-disk-cache –enable-mem-cache</p><h2 style=\"margin: 20px 0px; padding: 5px 5px 5px 10px; font-weight: 400; font-family: verdana, arial, helvetica, sans-serif; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(255, 97, 0); font-size: 21px; line-height: 30px; white-space: normal; color: rgb(0, 107, 173); background: rgb(255, 255, 255);\">8、php APC缓存扩展</h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">Php有一个APC缓存扩展，windows下面为php_apc.dll，需要先加载这个模块，然后是在php.ini里面进行配置：</p><pre class=\"\" style=\"margin: 15px auto; padding: 10px 15px; font-family: &quot;courier new&quot;; font-stretch: normal; font-size: 12px; line-height: 20px; word-wrap: break-word; border-width: 1px 1px 1px 4px; border-style: solid; border-color: rgb(221, 221, 221); color: rgb(69, 69, 69); background-color: rgb(251, 251, 251);\">[apc]&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;extension=php_apc.dll&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;apc.rfc1867&nbsp;=&nbsp;on&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_max_filesize&nbsp;=&nbsp;100M&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;post_max_size&nbsp;=&nbsp;100M&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;apc.max_file_size&nbsp;=&nbsp;200M&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;upload_max_filesize&nbsp;=&nbsp;1000M&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;post_max_size&nbsp;=&nbsp;1000M&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_execution_time&nbsp;=&nbsp;600&nbsp;;&nbsp;&nbsp;&nbsp;每个PHP页面运行的最大时间值(秒)，默认30秒&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max_input_time&nbsp;=&nbsp;600&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每个PHP页面接收数据所需的最大时间，默认60&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;memory_limit&nbsp;=&nbsp;128M&nbsp;;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;每个PHP页面所吃掉的最大内存，默认8M</pre><h2 style=\"margin: 20px 0px; padding: 5px 5px 5px 10px; font-weight: 400; font-family: verdana, arial, helvetica, sans-serif; border-left-width: 5px; border-left-style: solid; border-left-color: rgb(255, 97, 0); font-size: 21px; line-height: 30px; white-space: normal; color: rgb(0, 107, 173); background: rgb(255, 255, 255);\">9、Opcode缓存</h2><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">首先php代码被解析为Tokens，然后再编译为Opcode码，最后执行Opcode码，返回结果；所以，对于相同的php文件，第一次运行时可以缓存其Opcode码，下次再执行这个页面时，直接会去找到缓存下的opcode码，直接执行最后一步，而不再需要中间的步骤了。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; font-family: verdana, arial, helvetica, sans-serif; line-height: 30px; white-space: normal; color: rgb(0, 0, 102); font-size: 13px; background-color: rgb(255, 255, 255);\">比较知名的是XCache、Turck MM Cache、PHP Accelerator等。</p><p><br/></p>',0,'',1003,0,1,18),(23,' 如何正确配置Nginx+PHP ','  ','  ','','<p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">对很多人而言，配置Nginx+PHP无外乎就是搜索一篇教程，然后拷贝粘贴。听上去似乎也没什么问题，可惜实际上网络上很多资料本身年久失修，漏洞百出，如果大家不求甚解，一味的拷贝粘贴，早晚有一天会为此付出代价。<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">假设我们用PHP实现了一个前端控制器，或者直白点说就是统一入口：把PHP请求都发送到同一个文件上，然后在此文件里通过解析「REQUEST_URI」实现路由。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">此时很多教程会教大家这样配置Nginx+PHP：</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><blockquote style=\"margin: 0px; padding: 0px 0px 0px 10px; max-width: 100%; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(219, 219, 219); color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" white-space:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">server {</p>listen 80;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;server_name foo.com;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;root /path;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;location / {<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp;index index.html index.htm index.php;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp;if (!-e $request_filename) {<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;rewrite . /index.php last;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp;}<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;}<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;location ~ \\.php$ {<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp;include fastcgi_params;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp;fastcgi_param SCRIPT_FILENAME /path$fastcgi_script_name;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp;fastcgi_pass 127.0.0.1:9000;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp;fastcgi_index index.php;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;}<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">这里面有很多错误，或者说至少是坏味道的地方，大家看看能发现几个。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>…<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>我们有必要先了解一下Nginx配置文件里指令的继承关系：Nginx配置文件分为好多块，常见的从外到内依次是「http」、「server」、「location」等等，缺省的继承关系是从外到内，也就是说内层块会自动获取外层块的值作为缺省值（有例外，详见参考）。<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>参考：UNDERSTANDING THE NGINX CONFIGURATION INHERITANCE MODEL<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>…<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">让我们先从「index」指令入手吧，在问题配置中它是在「location」中定义的：</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><blockquote style=\"margin: 0px; padding: 0px 0px 0px 10px; max-width: 100%; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(219, 219, 219); color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" white-space:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">location / {</p>index index.html index.htm index.php;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">一旦未来需要加入新的「location」，必然会出现重复定义的「index」指令，这是因为多个「location」是平级的关系，不存在继承，此时应该在「server」里定义「index」，借助继承关系，「index」指令在所有的「location」中都能生效。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>参考：Nginx Pitfalls<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>…<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">接下来看看「if」指令，说它是大家误解最深的Nginx指令毫不为过：</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><blockquote style=\"margin: 0px; padding: 0px 0px 0px 10px; max-width: 100%; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(219, 219, 219); color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" white-space:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">if (!-e $request_filename) {</p>rewrite . /index.php last;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">很多人喜欢用「if」指令做一系列的检查，不过这实际上是「try_files」指令的职责：</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><blockquote style=\"margin: 0px; padding: 0px 0px 0px 10px; max-width: 100%; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(219, 219, 219); color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" white-space:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">try_files $uri $uri/ /index.php;</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">除此以外，初学者往往会认为「if」指令是内核级的指令，但是实际上它是rewrite模块的一部分，加上Nginx配置实际上是声明式的，而非过程式的，所以当其和非rewrite模块的指令混用时，结果可能会非你所愿。<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>参考：IfIsEvil and How nginx “location if” works<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>…<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">下面看看「fastcgi_params」配置文件：</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><blockquote style=\"margin: 0px; padding: 0px 0px 0px 10px; max-width: 100%; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(219, 219, 219); color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" white-space:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">include fastcgi_params;</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">Nginx有两份fastcgi配置文件，分别是「fastcgi_params」和「fastcgi.conf」，它们没有太大的差异，唯一的区别是后者比前者多了一行「SCRIPT_FILENAME」的定义：</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><blockquote style=\"margin: 0px; padding: 0px 0px 0px 10px; max-width: 100%; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(219, 219, 219); color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" white-space:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">注意：$document_root 和 $fastcgi_script_name 之间没有 /。<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>原本Nginx只有「fastcgi_params」，后来发现很多人在定义「SCRIPT_FILENAME」时使用了硬编码的方式，于是为了规范用法便引入了「fastcgi.conf」。<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>不过这样的话就产生一个疑问：为什么一定要引入一个新的配置文件，而不是修改旧的配置文件？这是因为「fastcgi_param」指令是数组型的，和普通指令相同的是：内层替换外层；和普通指令不同的是：当在同级多次使用的时候，是新增而不是替换。换句话说，如果在同级定义两次「SCRIPT_FILENAME」，那么它们都会被发送到后端，这可能会导致一些潜在的问题，为了避免此类情况，便引入了一个新的配置文件。<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>参考：FASTCGI_PARAMS VERSUS FASTCGI.CONF – NGINX CONFIG HISTORY<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>…<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">此外，我们还需要考虑一个安全问题：在PHP开启「cgi.fix_pathinfo」的情况下，PHP可能会把错误的文件类型当作PHP文件来解析。如果Nginx和PHP安装在同一台服务器上的话，那么最简单的解决方法是用「try_files」指令做一次过滤：</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><blockquote style=\"margin: 0px; padding: 0px 0px 0px 10px; max-width: 100%; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(219, 219, 219); color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" white-space:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">try_files $uri =404;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p></blockquote><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">参考：Nginx文件类型错误解析漏洞<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>…<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">依照前面的分析，给出一份改良后的版本，是不是比开始的版本清爽了很多：</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><blockquote style=\"margin: 0px; padding: 0px 0px 0px 10px; max-width: 100%; border-left-width: 3px; border-left-style: solid; border-left-color: rgb(219, 219, 219); color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" white-space:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">server {</p>listen 80;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;server_name foo.com;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;root /path;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;index index.html index.htm index.php;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;location / {<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp;try_files $uri $uri/ /index.php;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;}<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;location ~ \\.php$ {<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp;try_files $uri =404;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp;include fastcgi.conf;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp; &nbsp; &nbsp;fastcgi_pass 127.0.0.1:9000;<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>&nbsp; &nbsp;}<br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; box-sizing: border-box !important; word-wrap: break-word !important;\">}</p></blockquote><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/></p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\">实际上还有一些瑕疵，主要是「try_files」和「fastcgi_split_path_info」不够兼容，虽然能够解决，但方案比较丑陋，具体就不多说了，有兴趣的可以参考问题描述。</p><p style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; max-width: 100%; clear: both; min-height: 1em; white-space: pre-wrap; color: rgb(62, 62, 62); font-family: \" helvetica=\"\" hiragino=\"\" sans=\"\" microsoft=\"\" line-height:=\"\" box-sizing:=\"\" border-box=\"\" word-wrap:=\"\" break-word=\"\" background-color:=\"\"><br style=\"margin: 0px; padding: 0px; max-width: 100%; box-sizing: border-box !important; word-wrap: break-word !important;\"/>补充：因为「location」已经做了限定，所以「fastcgi_index」其实也没有必要。</p><p><br/></p>',1477139399,'',1004,1,1,18),(32,'smarty模板的配置','','','','<p>建议使用一个兼容性好的smary版本。</p><p>太新的版本往往对php的版本支持不好。</p><p>&nbsp;</p><p><span style=\"margin: 0px; padding: 0px; line-height: 1.8;\">php推荐使用的模板是：smarty</span></p><p>&nbsp;</p><p>其他模板：phplib</p><p>公司自己写的模板</p><p>&nbsp;</p><p><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">如何配置我们的smarty？</span></p><p><span style=\"margin: 0px; padding: 0px; line-height: 1.8;\">1.解压后，把libs文件夹放在网站根目录下。</span></p><p><span style=\"margin: 0px; padding: 0px; line-height: 1.8;\">2.创建两个文件夹&nbsp;templates(放模板文件) 和templates_c（放编译后的俄文件）</span></p><p style=\"margin: 10px auto; padding: 0px;\">开始使用smarty<br style=\"margin: 0px; padding: 0px;\"/>1.写一个模板文件（tpl），通常放在templates<br style=\"margin: 0px; padding: 0px;\"/>2.在php文件中引入smarty的核心文件，并创建smarty对象：</p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;\">&nbsp;&nbsp;&nbsp;&#39;./libs/Smarty.class.php&#39;;\r\n3&nbsp;$smarty&nbsp;=&nbsp;new&nbsp;Smarty;//建立smarty实例对象$smarty</pre><p style=\"margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">把数据分配给smarty对象，给tpl文件分配要显示的结果集合。对象，数组。</span></p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;\">1&nbsp;//把$res分配到smarty对象2&nbsp;$smarty-&gt;assign(&quot;myArr&quot;,$arr);3&nbsp;//指定用哪个模版显示4&nbsp;$smarty-&gt;display(&quot;empList2.tpl&quot;);</pre><p style=\"margin: 10px auto; padding: 0px;\">初始化其他参数（这些初始化应该放在display函数上面）</p><p><span class=\"cnblogs_code_copy\" style=\"margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.8;\"><a title=\"复制代码\" style=\"margin: 0px; padding: 0px; border: none !important;\"><img src=\"/ueditor/php/upload/image/20161023/1477191286316672.gif\" alt=\"复制代码\" style=\"margin: 0px; padding: 0px; max-width: 900px; border: none !important;\"/></a></span></p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;\">1&nbsp;$smarty&nbsp;-&gt;&nbsp;caching&nbsp;=&nbsp;false;//是否使用缓存2&nbsp;$smarty&nbsp;-&gt;&nbsp;template_dir&nbsp;=&nbsp;&quot;./templates&quot;;//设置模板目录3&nbsp;$smarty&nbsp;-&gt;&nbsp;compile_dir&nbsp;=&nbsp;&quot;./templates_c&quot;;//设置编译目录4&nbsp;$smarty&nbsp;-&gt;&nbsp;cache_dir&nbsp;=&nbsp;&quot;./smarty_cache&quot;;//缓存文件夹5&nbsp;//修改左右边界符号6&nbsp;$smarty&nbsp;-&gt;&nbsp;left_delimiter=&quot;&lt;{&quot;;7&nbsp;$smarty&nbsp;-&gt;&nbsp;right_delimiter=&quot;}&gt;&quot;;</pre><p><span class=\"cnblogs_code_copy\" style=\"margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.8;\"><a title=\"复制代码\" style=\"margin: 0px; padding: 0px; border: none !important;\"><img src=\"/ueditor/php/upload/image/20161023/1477191286316672.gif\" alt=\"复制代码\" style=\"margin: 0px; padding: 0px; max-width: 900px; border: none !important;\"/></a></span></p><p style=\"margin: 10px auto; padding: 0px;\">完整的代码应该是:</p><p><span class=\"cnblogs_code_copy\" style=\"margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.8;\"><a title=\"复制代码\" style=\"margin: 0px; padding: 0px; border: none !important;\"><img src=\"/ueditor/php/upload/image/20161023/1477191286316672.gif\" alt=\"复制代码\" style=\"margin: 0px; padding: 0px; max-width: 900px; border: none !important;\"/></a></span></p><pre style=\"margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;\">&nbsp;1&nbsp;&lt;?php&nbsp;2&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//创建smarty对象&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;require_once&nbsp;&#39;./libs/Smarty.class.php&#39;;&nbsp;5&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$smarty&nbsp;=&nbsp;new&nbsp;Smarty;//建立smarty实例对象$smarty&nbsp;7&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$smarty&nbsp;-&gt;&nbsp;caching&nbsp;=&nbsp;false;//是否使用缓存&nbsp;8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$smarty&nbsp;-&gt;&nbsp;template_dir&nbsp;=&nbsp;&quot;./templates&quot;;//设置模板目录&nbsp;9&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$smarty&nbsp;-&gt;&nbsp;compile_dir&nbsp;=&nbsp;&quot;./templates_c&quot;;//设置编译目录10&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$smarty&nbsp;-&gt;&nbsp;cache_dir&nbsp;=&nbsp;&quot;./smarty_cache&quot;;//缓存文件夹11&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//修改左右边界符号12&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$smarty&nbsp;-&gt;&nbsp;left_delimiter=&quot;&lt;{&quot;;13&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$smarty&nbsp;-&gt;&nbsp;right_delimiter=&quot;}&gt;&quot;;14&nbsp;15&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$smarty&nbsp;-&gt;&nbsp;assign(&quot;var1&quot;,&quot;hello&nbsp;world&quot;);//16&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$smarty&nbsp;-&gt;&nbsp;display(&quot;hello.tpl&quot;);//17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;18&nbsp;?&gt;</pre><p><span class=\"cnblogs_code_copy\" style=\"margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.8;\"><a title=\"复制代码\" style=\"margin: 0px; padding: 0px; border: none !important;\"><img src=\"/ueditor/php/upload/image/20161023/1477191286316672.gif\" alt=\"复制代码\" style=\"margin: 0px; padding: 0px; max-width: 900px; border: none !important;\"/></a></span></p><p style=\"margin: 10px auto; padding: 0px;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">3.一般在控制器中用。创建一个smarty对象。require_once</span></p><p><span style=\"margin: 0px; padding: 0px; line-height: 1.5;\">注意事项:</span></p><p>&nbsp;</p><p>1.替换变量的标识符一般使用：&lt;{}&gt;</p><p>因为{}会和内联css和js发生冲突。</p><p>&nbsp;</p><p>改动分隔符有两个方法：</p><p>&nbsp; &nbsp;1直接该smarty源码。</p><p>&nbsp; &nbsp;2 动态修改分隔符</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; $smarty = new Smarty;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;$smarty -&gt;left_delimiter=&quot;&lt;{&quot;;</p><p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;$smarty -&gt;right_delimiter=&quot;}&gt;&quot;;</p><p>&nbsp;</p><p><span style=\"margin: 0px; padding: 0px; line-height: 1.8; color: rgb(85, 85, 85); font-family: verdana, &quot;ms song&quot;, 宋体, Arial, 微软雅黑, Helvetica, sans-serif;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8;\">传统方法的弱点：</span></span></p><p><span style=\"margin: 0px; padding: 0px; line-height: 1.8; color: rgb(85, 85, 85); font-family: verdana, &quot;ms song&quot;, 宋体, Arial, 微软雅黑, Helvetica, sans-serif;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8;\">1、php脚本和html，css，js混合，界面不简洁、</span></span></p><p><span style=\"margin: 0px; padding: 0px; line-height: 1.8; color: rgb(85, 85, 85); font-family: verdana, &quot;ms song&quot;, 宋体, Arial, 微软雅黑, Helvetica, sans-serif;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8;\">2.编写php页面要求程序员同时会网页设计技术、</span></span></p><p><span style=\"margin: 0px; padding: 0px; line-height: 1.8; color: rgb(85, 85, 85); font-family: verdana, &quot;ms song&quot;, 宋体, Arial, 微软雅黑, Helvetica, sans-serif;\"><span style=\"margin: 0px; padding: 0px; line-height: 1.8;\">3，不利于项目分工协同开发。</span></span></p><p>&nbsp;</p><p><span style=\"margin: 0px; padding: 0px; line-height: 1.8;\">smarty的用处：</span></p><p><span style=\"margin: 0px; padding: 0px; line-height: 1.8;\">1。把界面需要的数据获取到，然后分配给某个界面。</span></p><p><br/></p>',1477191289,'admin',100,1,1,19),(24,'10 件在 PHP 7 中不要做的事情','','','','<h2 id=\"articleHeader1\" style=\"box-sizing: border-box; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);\">1. 不要使用<code style=\"box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; color: rgb(199, 37, 78); padding: 2px 4px; border-radius: 3px; background-color: rgb(249, 242, 244);\">mysql_</code>函数</h2><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">这一天终于来了，从此你不仅仅“不应该”使用<code style=\"box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; color: rgb(199, 37, 78); padding: 2px 4px; border-radius: 3px; background-color: rgb(249, 242, 244);\">mysql_</code>函数。PHP 7 已经把它们从核心中全部移除了，也就是说你需要迁移到好得多的<code style=\"box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; color: rgb(199, 37, 78); padding: 2px 4px; border-radius: 3px; background-color: rgb(249, 242, 244);\">mysqli_</code>函数，或者更灵活的 PDO 实现。</p><h2 id=\"articleHeader2\" style=\"box-sizing: border-box; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);\">2. 不要编写垃圾代码</h2><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">这一条可能易于理解，但是会变得越来越重要，因为 PHP 7 的速度提升可能会隐藏你的一些问题。不要仅仅满足于你的站点速度，因为迁移到 PHP 7 才让它变快。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">为了理解速度有多重要，以及如何把事情做得更好，请看一看我们的文章<a href=\"https://kinsta.com/learn/page-speed/\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 154, 97); text-decoration: none; outline: 0px; background: transparent;\">速度优化入门指南</a>。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">作为一名开发者，你应该总是确保按需加载脚本，尽可能连接它们，编写高效的数据库查询，尽可能使用缓存，以及其它。</p><h2 id=\"articleHeader3\" style=\"box-sizing: border-box; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);\">3. 不要在文件末尾使用 PHP 闭合标签</h2><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">你可以看一看，当一个文件以 PHP 代码结尾时，WordPress 多数核心代码都把末尾的 PHP 标签去掉了。实际上，Zend 框架特别<a href=\"https://framework.zend.com/manual/1.12/en/coding-standard.php-file-formatting.html\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 154, 97); text-decoration: none; outline: 0px; background: transparent;\">禁止了它</a>。PHP 并不需要文件末尾的闭合标签，并且我们可以通过去掉它来保证不会在后面添加任何的空白字符。</p><h2 id=\"articleHeader4\" style=\"box-sizing: border-box; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);\">4. 不要做不必要的引用传递</h2><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我个人不喜欢引用传递。我知道有时候它很实用，但是其它情况下它使代码变得难懂，并且更难预测结果。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">据说一些人认为它使代码运行更快，但是根据<a href=\"http://schlueters.de/blog/archives/125-Do-not-use-PHP-references.html\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 154, 97); text-decoration: none; outline: 0px; background: transparent;\">一些 PHP 高级程序员</a>所说，这并不正确。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">说明引用为什么不好的一个例子是，PHP 内建了<code style=\"box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; color: rgb(199, 37, 78); padding: 2px 4px; border-radius: 3px; background-color: rgb(249, 242, 244);\">shuffle()</code>和<code style=\"box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; color: rgb(199, 37, 78); padding: 2px 4px; border-radius: 3px; background-color: rgb(249, 242, 244);\">sort()</code>。它们修改原始数组，而不是返回处理后的数组，这很不合逻辑。</p><h2 id=\"articleHeader5\" style=\"box-sizing: border-box; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);\">5. 不要在循环中执行查询</h2><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">在循环中执行查询非常浪费。它给你的系统施加不必要的压力，并且可能能够在循环外部更快获得相同结果。当我遇到需要这样的情况时，我通常会使用两个分离的查询来解决问题，我会使用它们来构建数据数组。之后我会遍历数组，并不需要在这个过程中执行查询。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">由于 WordPress 适用于这里，它可能有一些例外。虽然<code style=\"box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; color: rgb(199, 37, 78); padding: 2px 4px; border-radius: 3px; background-color: rgb(249, 242, 244);\">get_post_meta()&nbsp;</code>会从数据库获取大量数据，如果你正在遍历某个特殊博文的元数据你可以在循环中使用它。这是因为当你第一次调用它的时候，WordPress实际上会获取所有元数据并缓存它们。后续的调用使用这些缓存数据，没有数据库的调用。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">弄懂这些的最佳方式是阅读函数文档，以及使用类似&nbsp;<a href=\"https://wordpress.org/plugins/query-monitor/\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 154, 97); text-decoration: none; outline: 0px; background: transparent;\">Query Monitor</a>&nbsp;的工具。</p><h2 id=\"articleHeader6\" style=\"box-sizing: border-box; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);\">6. 不要在 SQL 查询中使用<code style=\"box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; color: rgb(199, 37, 78); padding: 2px 4px; border-radius: 3px; background-color: rgb(249, 242, 244);\">*</code></h2><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">当然，这个更像 MySQL 的问题，但是我们习惯在 PHP 中编写 SQL 代码，所以都差不多。无论如何，如果可以避免的话，不要在 SQL 查询里使用通配符，尤其是数据库有很多列的时候。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">你应该明确指定需要哪些行，并且仅仅获取它们。这有助于减少所用资源，保护数据，以及让事情变得尽可能清晰。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">对于 SQL，你需要了解所有可用的函数，并且尽可能测试其速度。在计算均值、求和或计算类似数值时，要使用 SQL 函数而不是 PHP 函数。如果你不确定某个查询的速度，测试它并且尝试一些其它的编译 -- 之后使用最好的那个。</p><h2 id=\"articleHeader7\" style=\"box-sizing: border-box; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);\">7. 不要信任用户输入</h2><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">信任用户输入是不明智的。始终校验、过滤、转义、检查并留好退路。用户数据存在三个问题：我们开发者并没有考虑每种可能性，它通常不正确，以及它可能是蓄意破坏。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">经过周密考虑的系统可以防护这些威胁。要确保使用类似<code style=\"box-sizing: border-box; font-family: &quot;Source Code Pro&quot;, Consolas, Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 0.93em; color: rgb(199, 37, 78); padding: 2px 4px; border-radius: 3px; background-color: rgb(249, 242, 244);\">filter_var()</code>的内建函数检查适当的值，以及在处理数据库时转义（或预编译）。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">WordPress 拥有一些函数来解决问题。详见文章<a href=\"https://codex.wordpress.org/Validating_Sanitizing_and_Escaping_User_Data\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 154, 97); text-decoration: none; outline: 0px; background: transparent;\">校验、转义和过滤用户数据</a>。</p><h2 id=\"articleHeader8\" style=\"box-sizing: border-box; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);\">8. 不要故作聪明</h2><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">你的目标应该是编写优雅的代码，来更清晰地表达你的意图。你可能能够通过将任何东西缩短为一个单词的变量，使用多层的三元逻辑，以及其它手段，从每个页面中优化 0.01 秒。但这只会给你和你周围的人产生大麻烦。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">合理命名变量，为代码编写文档，优先选择清晰而不是简洁。甚至还可以更好，使用标准的面向对象代码，它本身或多或少就是文档，不需要一大堆内联数值。</p><h2 id=\"articleHeader9\" style=\"box-sizing: border-box; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);\">9. 不要重新发明轮子</h2><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">PHP 到现在为止有很长时间了，网站被造出来的时间更长。很可能无论你需要造出什么，一些人之前早就造出来了。不要害怕向他人寻求支持，<a href=\"http://github.com/\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 154, 97); text-decoration: none; outline: 0px; background: transparent;\">Github</a>是你的好朋友，<a href=\"https://getcomposer.org/\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 154, 97); text-decoration: none; outline: 0px; background: transparent;\">Composer</a>也是，<a href=\"https://packagist.org/\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 154, 97); text-decoration: none; outline: 0px; background: transparent;\">Packagist</a>也是。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">从日志工具到调色工具，从性能分析器到单元测试框架，从 Mailchimp API 到 Twitter Bootstrap，每个东西都可以通过按下按键（或者敲下命令）来获取，使用它们吧！</p><h2 id=\"articleHeader10\" style=\"box-sizing: border-box; font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-weight: 500; line-height: 1.2; color: rgb(51, 51, 51); margin: 1.5em 0px 0px; font-size: 1.75em; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); padding-bottom: 10px; white-space: normal; background-color: rgb(255, 255, 255);\">10. 不要忽略其它语言</h2><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">如果你是个 PHP 程序员，现在有个好机会去至少了解 HTML、CSS、JavaScript 和 MySQL。当你能够更好地处理这些语言时，就是重新学习 JavaScript 的时机了。JavaScript 并不是 jQuery，你应该合理地学习 JavaScript 来更高效地使用它。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">我也打算向你推荐学习面向对象的 PHP，它可以节省时间，并且在代码规模更大时会变得更好。对于类似 C# 和 Java 的语言，在你了解 OOP 之后，它们也更易于理解。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 1.5em; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">通过了解包管理器、构建脚本、CoffeeScript、LESS、SASS、YAML 、脚本引擎和其它强大的工具来扩展你的知识面。我强烈向你推荐看一看其它框架，尤其是&nbsp;<a href=\"http://laravel.com/\" target=\"_blank\" style=\"box-sizing: border-box; color: rgb(0, 154, 97); text-decoration: none; outline: 0px; background: transparent;\">Laravel</a>。</p><p style=\"box-sizing: border-box; margin-top: 1.5em; margin-bottom: 0px; color: rgb(51, 51, 51); font-family: &quot;Helvetica Neue&quot;, Helvetica, Arial, &quot;PingFang SC&quot;, &quot;Hiragino Sans GB&quot;, &quot;WenQuanYi Micro Hei&quot;, &quot;Microsoft Yahei&quot;, sans-serif; font-size: 14px; line-height: 22.4px; white-space: normal; background-color: rgb(255, 255, 255);\">当你使用它们出色完成任务时，学习 Ruby、RoR、Android、iPhone 和 Windows Phone 应用开发如何？你可能会认为这毫无意义，因为它们在你的舒适区和工作所需范围之外，但是这就是它们的意义。每种语言都有一些要学习的实用的东西，以及从没碰到的新知识。所有 PHP 顶级开发者都懂得很多其它编程语言，这并非偶然。</p><p><br/></p>',0,'',1005,0,1,18),(25,'PHP经典算法集锦【经典收藏】','','','','<pre class=\"brush:php;toolbar:false\">1、首先来画个菱形玩玩，很多人学C时在书上都画过，咱们用PHP画下，画了一半。\r\n思路：多少行for一次，然后在里面空格和星号for一次。\r\n&lt;?php\r\nfor($i=0;$i&lt;=3;$i++){\r\n&nbsp;&nbsp;echo&nbsp;str_repeat(&quot;&nbsp;&quot;,3-$i);\r\n&nbsp;&nbsp;echo&nbsp;str_repeat(&quot;*&quot;,$i*2+1);\r\n&nbsp;&nbsp;echo&nbsp;&#39;&lt;br/&gt;&#39;;\r\n}\r\n2、冒泡排序，C里基础算法，从小到大对一组数排序。\r\n思路：这题从小到大，第一轮排最小，第二轮排第二小，第三轮排第三小，依次类推……\r\n&lt;?php\r\n$arr&nbsp;=&nbsp;array(1,3,5,32,756,2,6);\r\n$len&nbsp;=&nbsp;count($arr);\r\nfor&nbsp;($i=0;$i&lt;$len-1;$i++){\r\n&nbsp;&nbsp;for&nbsp;($j=$i+1;$j&lt;$len;$j++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;if($arr[$i]&gt;$arr[$j]){//从小到大\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$p&nbsp;=&nbsp;$arr[$i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$i]&nbsp;=&nbsp;$arr[$j];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$j]=&nbsp;$p;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}\r\n}\r\nvar_dump($arr);\r\n3、杨辉三角，用PHP写。\r\n思路：每一行的第一位和最后一位是1，没有变化，中间是前排一位与左边一排的和，这种算法是用一个二维数组保存，另外有种算法用一维数组也可以实现，一行&nbsp;一行的输出，有兴趣去写着玩下。\r\n1\r\n1&nbsp;&nbsp;&nbsp;1\r\n1&nbsp;&nbsp;&nbsp;2&nbsp;&nbsp;&nbsp;1\r\n1&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;3&nbsp;&nbsp;&nbsp;1\r\n1&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;6&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;1\r\n1&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;10&nbsp;&nbsp;10&nbsp;&nbsp;&nbsp;5&nbsp;&nbsp;&nbsp;1\r\n&lt;?php\r\n//每行的第一个和最后一个都为1，写了6行\r\n&nbsp;for($i=0;&nbsp;$i&lt;6;&nbsp;$i++)&nbsp;{\r\n&nbsp;&nbsp;$a[$i][0]=1;\r\n&nbsp;&nbsp;$a[$i][$i]=1;\r\n&nbsp;}\r\n//出除了第一位和最后一位的值，保存在数组中\r\n&nbsp;for($i=2;&nbsp;$i&lt;6;&nbsp;$i++)&nbsp;{\r\n&nbsp;&nbsp;for($j=1;&nbsp;$j&lt;$i;&nbsp;$j++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;$a[$i][$j]&nbsp;=&nbsp;$a[$i-1][$j-1]+$a[$i-1][$j];\r\n&nbsp;&nbsp;}\r\n&nbsp;}\r\n//打印\r\n&nbsp;for($i=0;&nbsp;$i&lt;6;&nbsp;$i++){\r\n&nbsp;&nbsp;for($j=0;&nbsp;$j&lt;=$i;&nbsp;$j++)&nbsp;{\r\n&nbsp;&nbsp;echo&nbsp;$a[$i][$j].&#39;&nbsp;&#39;;\r\n&nbsp;&nbsp;}\r\n&nbsp;&nbsp;echo&nbsp;&#39;&lt;br/&gt;&#39;;\r\n&nbsp;}\r\n4、在一组数中，要求插入一个数，按其原来顺序插入，维护原来排序方式。\r\n思路：找到比要插入数大的那个位置，替换，然后把后面的数后移一位。\r\n&lt;?php\r\n$in&nbsp;=&nbsp;2;\r\n$arr&nbsp;=&nbsp;array(1,1,1,3,5,7);\r\n$n&nbsp;=&nbsp;count($arr);\r\n//如果要插入的数已经最大，直接打印\r\nif($arr[$n-1]&nbsp;&lt;&nbsp;$in)&nbsp;{\r\n&nbsp;&nbsp;$arr[$n+1]&nbsp;=&nbsp;$in;&nbsp;print_r($arr);\r\n&nbsp;&nbsp;}\r\nfor($i=0;&nbsp;$i&lt;$n;&nbsp;$i++)&nbsp;{\r\n//找出要插入的位置\r\n&nbsp;&nbsp;if($arr[$i]&nbsp;&gt;=&nbsp;$in){\r\n&nbsp;&nbsp;&nbsp;&nbsp;$t1=&nbsp;$arr[$i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;$arr[$i]&nbsp;=&nbsp;$in;\r\n//把后面的数据后移一位\r\n&nbsp;&nbsp;&nbsp;&nbsp;for($j=$i+1;&nbsp;$j&lt;$n+1;&nbsp;$j++)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$t2&nbsp;=&nbsp;$arr[$j];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$arr[$j]&nbsp;=&nbsp;$t1;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$t1&nbsp;=&nbsp;$t2;\r\n&nbsp;&nbsp;}\r\n//打印\r\n&nbsp;&nbsp;print_r($arr);\r\n&nbsp;&nbsp;die;\r\n&nbsp;&nbsp;}\r\n}\r\n5、对一组数进行排序（快速排序算法）。\r\n思路：通过一趟排序分成两部分，然后递归对这两部分排序，最后合并。\r\n&lt;?php\r\nfunction&nbsp;q($array)&nbsp;{\r\n&nbsp;&nbsp;if&nbsp;(count($array)&nbsp;&lt;=&nbsp;1)&nbsp;{return&nbsp;$array;}\r\n//以$key为界，分成两个子数组\r\n&nbsp;&nbsp;$key&nbsp;=&nbsp;$array[0];\r\n&nbsp;&nbsp;$l&nbsp;=&nbsp;array();\r\n&nbsp;&nbsp;$r&nbsp;=&nbsp;array();\r\n//分别进行递归排序，然后合成一个数组\r\n&nbsp;&nbsp;for&nbsp;($i=1;&nbsp;$i&lt;count($array);&nbsp;$i++)&nbsp;{\r\n&nbsp;&nbsp;if&nbsp;($array[$i]&nbsp;&lt;=&nbsp;$key)&nbsp;{&nbsp;$l[]&nbsp;=&nbsp;$array[$i];&nbsp;}\r\n&nbsp;&nbsp;else&nbsp;{&nbsp;$r[]&nbsp;=&nbsp;$array[$i];&nbsp;}\r\n&nbsp;}\r\n&nbsp;&nbsp;$l&nbsp;=&nbsp;q($l);\r\n&nbsp;&nbsp;$r&nbsp;=&nbsp;q($r);\r\n&nbsp;&nbsp;return&nbsp;array_merge($l,&nbsp;array($key),&nbsp;$r);\r\n}\r\n$arr&nbsp;=&nbsp;array(1,2,44,3,4,33);\r\nprint_r(&nbsp;q($arr)&nbsp;);\r\n6、在一个数组查找你所需元素（二分查找算法）。\r\n思路：以数组中某个值为界，再递归进行查找，直到结束。\r\n&lt;?php\r\nfunction&nbsp;find($array,&nbsp;$low,&nbsp;$high,&nbsp;$k){\r\n&nbsp;&nbsp;if&nbsp;($low&nbsp;&lt;=&nbsp;$high){\r\n&nbsp;&nbsp;$mid&nbsp;=&nbsp;intval(($low+$high)/2);\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($array[$mid]&nbsp;==&nbsp;$k){\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$mid;\r\n&nbsp;&nbsp;}elseif&nbsp;($k&nbsp;&lt;&nbsp;$array[$mid]){\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;find($array,&nbsp;$low,&nbsp;$mid-1,&nbsp;$k);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}else{\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;find($array,&nbsp;$mid+1,&nbsp;$high,&nbsp;$k);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}\r\n&nbsp;&nbsp;die(&#39;Not&nbsp;have...&#39;);\r\n}\r\n//test\r\n$array&nbsp;=&nbsp;array(2,4,3,5);\r\n$n&nbsp;=&nbsp;count($array);\r\n$r&nbsp;=&nbsp;find($array,0,$n,5)\r\n7、合并多个数组，不用array_merge()，题目来于论坛。\r\n思路：遍历每个数组，重新组成一个新数组。\r\n&lt;?php\r\nfunction&nbsp;t(){\r\n&nbsp;&nbsp;$c&nbsp;=&nbsp;func_num_args()-1;\r\n&nbsp;&nbsp;$a&nbsp;=&nbsp;func_get_args();\r\n&nbsp;&nbsp;//print_r($a);\r\n&nbsp;&nbsp;for($i=0;&nbsp;$i&lt;=$c;&nbsp;$i++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;if(is_array($a[$i])){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for($j=0;&nbsp;$j&lt;count($a[$i]);&nbsp;$j++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$r[]&nbsp;=&nbsp;$a[$i][$j];\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;die(&#39;Not&nbsp;a&nbsp;array!&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}\r\n&nbsp;&nbsp;return&nbsp;$r;\r\n}\r\n//test\r\nprint_r(t(range(1,4),range(1,4),range(1,4)));\r\necho&nbsp;&#39;&lt;br/&gt;&#39;;\r\n$a&nbsp;=&nbsp;array_merge(range(1,4),range(1,4),range(1,4));\r\nprint_r($a);\r\n8、牛年求牛：有一母牛，到4岁可生育，每年一头，所生均是一样的母牛，到15岁绝育，不再能生，20岁死亡，问n年后有多少头牛。（来自论坛）\r\n&lt;?php\r\nfunction&nbsp;t($n)&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;static&nbsp;$num&nbsp;=&nbsp;1\r\n&nbsp;&nbsp;&nbsp;&nbsp;for($j=1;&nbsp;$j&lt;=$n;&nbsp;$j++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($j&gt;=4&nbsp;&amp;&amp;&nbsp;$j&lt;15)&nbsp;{$num++;t($n-$j);}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if($j==20){$num--;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$num;\r\n}\r\n//test\r\necho&nbsp;t(8);\r\n====================其他算法=========================\r\n冒泡排序&nbsp;（bubble&nbsp;sort）&nbsp;―&nbsp;O(n2)\r\n$data&nbsp;=&nbsp;array(3,5,9,32,2,1,2,1,8,5);\r\ndump($data);\r\nBubbleSort($data);\r\ndump($data);\r\nfunction&nbsp;BubbleSort(&amp;&nbsp;$arr)\r\n{\r\n$limit&nbsp;=&nbsp;count($arr);\r\nfor($i=1;&nbsp;$i&lt;$limit;&nbsp;$i++)\r\n{\r\n&nbsp;&nbsp;for($p=$limit-1;&nbsp;$p&gt;=$i;&nbsp;$p--)\r\n&nbsp;&nbsp;{\r\n&nbsp;&nbsp;if($arr[$p-1]&nbsp;&gt;&nbsp;$arr[$p])\r\n&nbsp;&nbsp;{\r\n&nbsp;&nbsp;&nbsp;$temp&nbsp;=&nbsp;$arr[$p-1];\r\n&nbsp;&nbsp;&nbsp;$arr[$p-1]&nbsp;=&nbsp;$arr[$p];\r\n&nbsp;&nbsp;&nbsp;$arr[$p]&nbsp;=&nbsp;$temp;\r\n&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}\r\n}\r\n}\r\nfunction&nbsp;dump(&nbsp;$d&nbsp;)\r\n{\r\necho&nbsp;&#39;&lt;pre&gt;&#39;;\r\nprint_r($d);\r\necho&nbsp;&#39;&lt;/pre&gt;&#39;;\r\n}\r\n插入排序&nbsp;&nbsp;&nbsp;（insertion&nbsp;sort）―&nbsp;O(n2)\r\n$data&nbsp;=&nbsp;array(6,13,21,99,18,2,25,33,19,84);\r\n$nums&nbsp;=&nbsp;count($data)-1;\r\ndump(&nbsp;$data&nbsp;);\r\nInsertionSort($data,$nums);\r\ndump(&nbsp;$data&nbsp;);\r\nfunction&nbsp;InsertionSort(&amp;&nbsp;$arr,$n&nbsp;)\r\n{\r\nfor(&nbsp;$i=1;&nbsp;$i&lt;=$n;&nbsp;$i++&nbsp;)\r\n{\r\n&nbsp;&nbsp;$tmp&nbsp;=&nbsp;$arr[$i];\r\n&nbsp;&nbsp;for(&nbsp;$j&nbsp;=&nbsp;$i;&nbsp;$j&gt;0&nbsp;&amp;&amp;&nbsp;$arr[$j-1]&gt;$tmp;&nbsp;$j--&nbsp;)\r\n&nbsp;&nbsp;{\r\n&nbsp;&nbsp;$arr[$j]&nbsp;=&nbsp;$arr[$j-1];\r\n&nbsp;&nbsp;}\r\n&nbsp;&nbsp;$arr[$j]&nbsp;=&nbsp;$tmp;\r\n}\r\n}\r\nfunction&nbsp;dump(&nbsp;$d&nbsp;)\r\n{\r\necho&nbsp;&#39;&lt;pre&gt;&#39;;print_r($d);echo&nbsp;&#39;&lt;/pre&gt;&#39;;\r\n}\r\n希&nbsp;尔排序&nbsp;&nbsp;&nbsp;（shell&nbsp;sort）―&nbsp;O(n&nbsp;log&nbsp;n)\r\n$data&nbsp;=&nbsp;array(6,13,21,99,18,2,25,33,19,84);\r\n$nums&nbsp;=&nbsp;count($data);\r\ndump(&nbsp;$data&nbsp;);\r\nShellSort($data,$nums);\r\ndump(&nbsp;$data&nbsp;);\r\nfunction&nbsp;ShellSort(&amp;&nbsp;$arr,$n&nbsp;)\r\n{\r\nfor(&nbsp;$increment&nbsp;=&nbsp;intval($n/2);&nbsp;$increment&nbsp;&gt;&nbsp;0;&nbsp;$increment&nbsp;=&nbsp;intval($increment/2)&nbsp;)\r\n{\r\n&nbsp;&nbsp;for(&nbsp;$i=$increment;&nbsp;$i&lt;$n;&nbsp;$i++&nbsp;)\r\n&nbsp;&nbsp;{\r\n&nbsp;&nbsp;$tmp&nbsp;=&nbsp;$arr[$i];\r\n&nbsp;&nbsp;for(&nbsp;$j&nbsp;=&nbsp;$i;&nbsp;$j&gt;=&nbsp;$increment;&nbsp;$j&nbsp;-=&nbsp;$increment&nbsp;)\r\n&nbsp;&nbsp;&nbsp;if(&nbsp;$tmp&nbsp;&lt;&nbsp;$arr[&nbsp;$j-$increment&nbsp;]&nbsp;)\r\n&nbsp;&nbsp;&nbsp;$arr[$j]&nbsp;=&nbsp;$arr[$j-$increment];\r\n&nbsp;&nbsp;&nbsp;else\r\n&nbsp;&nbsp;&nbsp;break;\r\n&nbsp;&nbsp;$arr[$j]&nbsp;=&nbsp;$tmp;\r\n&nbsp;&nbsp;}\r\n}\r\n}\r\nfunction&nbsp;dump(&nbsp;$d&nbsp;)\r\n{\r\necho&nbsp;&#39;&lt;pre&gt;&#39;;print_r($d);echo&nbsp;&#39;&lt;/pre&gt;&#39;;\r\n}\r\n快&nbsp;速排序&nbsp;&nbsp;&nbsp;（quicksort）―&nbsp;O(n&nbsp;log&nbsp;n)\r\n$data&nbsp;=&nbsp;array(6,13,21,99,18,2,25,33,19,84);\r\ndump($data);\r\nquicks($data,0,count($data)-1);\r\ndump($data);\r\nfunction&nbsp;dump(&nbsp;$data){\r\necho&nbsp;&#39;&lt;pre&gt;&#39;;print_r($data);echo&nbsp;&#39;&lt;/pre&gt;&#39;;\r\n}\r\nfunction&nbsp;QuickSort(&amp;&nbsp;$arr,$left,$right)\r\n{\r\n$l&nbsp;=&nbsp;$left;\r\n$r&nbsp;=&nbsp;$right;\r\n$pivot&nbsp;=&nbsp;intval(($r+$l)/2);\r\n$p&nbsp;=&nbsp;$arr[$pivot];\r\ndo\r\n{\r\n&nbsp;&nbsp;while(($arr[$l]&nbsp;&lt;&nbsp;$p)&nbsp;&amp;&amp;&nbsp;($l&nbsp;&lt;&nbsp;$right))\r\n&nbsp;&nbsp;$l++;\r\n&nbsp;&nbsp;while(($arr[$r]&nbsp;&gt;&nbsp;$p)&nbsp;&amp;&amp;&nbsp;($r&nbsp;&gt;&nbsp;$left))\r\n&nbsp;&nbsp;$r--;\r\n&nbsp;&nbsp;if($l&nbsp;&lt;=&nbsp;$r)\r\n&nbsp;&nbsp;{\r\n&nbsp;&nbsp;$temp&nbsp;=&nbsp;$arr[$l];\r\n&nbsp;&nbsp;$arr[$l]&nbsp;=&nbsp;$arr[$r];\r\n&nbsp;&nbsp;$arr[$r]&nbsp;=&nbsp;$temp;\r\n&nbsp;&nbsp;$l++;\r\n&nbsp;&nbsp;$r--;\r\n&nbsp;&nbsp;}\r\n}\r\nwhile($l&nbsp;&lt;=&nbsp;$r);\r\nif($left&nbsp;&lt;&nbsp;$r)\r\n&nbsp;&nbsp;QuickSort(&amp;$arr,$left,$r);\r\nif($l&nbsp;&lt;&nbsp;$right)\r\n&nbsp;&nbsp;QuickSort(&amp;$arr,$l,$right);\r\n}\r\n=================================================\r\n冒泡排序：两两交换数值，最小的值在最左边，就如最轻的气泡在最上边。对整列数两两交换一次，最小的数在最左边，每次都能得一个在剩下的数中的最小&nbsp;的数，“冒”出来的数组成一个有序区间，剩下的值组成一无序区间，且有序区间中每一元素值都比无序区间的小。\r\n快速排序：基准数，左右二个数组，递归调用，合并。\r\n插入排序：排序区间分成二部分，左边有序，右边无序，从右区间取&nbsp;第一个元素插入左区间，若此元素比左边区间最右边的元素大，留在原处，若此元素比左&nbsp;边区间最右边的元素小，则插在最右边元素的原位置，同时最右边元素右移一位，计算器减一，重新和前面的元素比较，直到前面的元素比要插入元素小为止，重复&nbsp;上述步骤。\r\n注意区间端点值的处理，及数组的第一个元素下标为0.\r\n&lt;?php\r\n//PHP常用排序算法\r\nfunction&nbsp;bubblesort&nbsp;($array)\r\n{\r\n$n&nbsp;=&nbsp;count&nbsp;($array);\r\nfor&nbsp;($i&nbsp;=&nbsp;0;&nbsp;$i&nbsp;&lt;&nbsp;$n;&nbsp;$i++)\r\n{\r\nfor&nbsp;($j&nbsp;=&nbsp;$n&nbsp;-&nbsp;2;&nbsp;$j&nbsp;&gt;=&nbsp;$i;&nbsp;$j--)&nbsp;//[0,i-1]&nbsp;[i,n-1]\r\n{\r\nif&nbsp;($array[$j]&nbsp;&gt;&nbsp;$array[$j&nbsp;+&nbsp;1])\r\n{\r\n$temp&nbsp;=&nbsp;$array[$j];\r\n$array[$j]&nbsp;=&nbsp;$array[$j&nbsp;+&nbsp;1];\r\n$array&nbsp;[$j&nbsp;+&nbsp;1]&nbsp;=&nbsp;$temp;\r\n}\r\n}\r\n}\r\nreturn&nbsp;$array;\r\n}\r\n$array&nbsp;=&nbsp;array&nbsp;(3,6,1,5,9,0,4,6,11);\r\nprint_r&nbsp;(bubblesort&nbsp;($array));\r\necho&nbsp;&#39;&lt;hr&gt;&#39;;\r\nfunction&nbsp;quicksort&nbsp;($array)\r\n{\r\n$n&nbsp;=&nbsp;count&nbsp;($array);\r\nif&nbsp;($n&nbsp;&lt;=&nbsp;1)\r\n{\r\nreturn&nbsp;$array;\r\n}\r\n$key&nbsp;=&nbsp;$array[&#39;0&#39;];\r\n$array_r&nbsp;=&nbsp;array&nbsp;();\r\n$array_l&nbsp;=&nbsp;array&nbsp;();\r\nfor&nbsp;($i&nbsp;=&nbsp;1;&nbsp;$i&nbsp;&lt;&nbsp;$n;&nbsp;$i++)\r\n{\r\nif&nbsp;($array[$i]&nbsp;&gt;&nbsp;$key)\r\n{\r\n$array_r[]&nbsp;=&nbsp;$array[$i];\r\n}\r\nelse\r\n{\r\n$array_l[]&nbsp;=&nbsp;$array[$i];\r\n}\r\n}\r\n$array_r&nbsp;=&nbsp;quicksort&nbsp;($array_r);\r\n$array_l&nbsp;=&nbsp;quicksort&nbsp;($array_l);\r\n$array&nbsp;=&nbsp;array_merge&nbsp;($array_l,&nbsp;array($key),&nbsp;$array_r);\r\nreturn&nbsp;$array;\r\n}\r\nprint_r&nbsp;(quicksort&nbsp;($array));\r\necho&nbsp;&#39;&lt;hr&gt;&#39;;\r\nfunction&nbsp;insertsort&nbsp;($array)\r\n{\r\n$n&nbsp;=&nbsp;count&nbsp;($array);\r\nfor&nbsp;($i&nbsp;=&nbsp;1;&nbsp;$i&nbsp;&lt;&nbsp;$n;&nbsp;$i++)&nbsp;//[0,i-1]&nbsp;[i,n]\r\n{\r\n$j&nbsp;=&nbsp;$i&nbsp;-&nbsp;1;\r\n$temp&nbsp;=&nbsp;$array[$i];\r\nwhile&nbsp;($array[$j]&nbsp;&gt;&nbsp;$temp)\r\n{\r\n$array[$j&nbsp;+&nbsp;1]&nbsp;=&nbsp;$array[$j];\r\n$array[$j]&nbsp;=&nbsp;$temp;\r\n$j--;\r\n}\r\n}\r\nreturn&nbsp;$array;\r\n}\r\nprint_r&nbsp;(insertsort&nbsp;($array));\r\n?&gt;\r\n=======================================\r\n&lt;?php\r\n/*\r\n【插&nbsp;入排序（一维数组）】\r\n【基本思想】：每次将一个待排序的数据元素，插入到前面已经排好序的数列中的适当位置，使数列依然有序；直到待排序数据元素&nbsp;全部插入完为止。\r\n【示例】：\r\n[初始关键字]&nbsp;[49]&nbsp;38&nbsp;65&nbsp;97&nbsp;76&nbsp;13&nbsp;27&nbsp;49\r\nJ=2(38)&nbsp;[38&nbsp;49]&nbsp;65&nbsp;97&nbsp;76&nbsp;13&nbsp;27&nbsp;49\r\nJ=3(65)&nbsp;[38&nbsp;49&nbsp;65]&nbsp;97&nbsp;76&nbsp;13&nbsp;27&nbsp;49\r\nJ=4(97)&nbsp;[38&nbsp;49&nbsp;65&nbsp;97]&nbsp;76&nbsp;13&nbsp;27&nbsp;49\r\nJ=5(76)&nbsp;[38&nbsp;49&nbsp;65&nbsp;76&nbsp;97]&nbsp;13&nbsp;27&nbsp;49\r\nJ=6(13)&nbsp;[13&nbsp;38&nbsp;49&nbsp;65&nbsp;76&nbsp;97]&nbsp;27&nbsp;49\r\nJ=7(27)&nbsp;[13&nbsp;27&nbsp;38&nbsp;49&nbsp;65&nbsp;76&nbsp;97]&nbsp;49\r\nJ=8(49)&nbsp;[13&nbsp;27&nbsp;38&nbsp;49&nbsp;49&nbsp;65&nbsp;76&nbsp;97]\r\n*/\r\nfunction&nbsp;insert_sort($arr){\r\n$count&nbsp;=&nbsp;count($arr);\r\nfor($i=1;&nbsp;$i&lt;$count;&nbsp;$i++){\r\n&nbsp;&nbsp;$tmp&nbsp;=&nbsp;$arr[$i];\r\n&nbsp;&nbsp;$j&nbsp;=&nbsp;$i&nbsp;-&nbsp;1;\r\n&nbsp;&nbsp;while($arr[$j]&nbsp;&gt;&nbsp;$tmp){\r\n&nbsp;&nbsp;&nbsp;$arr[$j+1]&nbsp;=&nbsp;$arr[$j];\r\n&nbsp;&nbsp;&nbsp;$arr[$j]&nbsp;=&nbsp;$tmp;\r\n&nbsp;&nbsp;&nbsp;$j--;\r\n&nbsp;&nbsp;}\r\n}\r\nreturn&nbsp;$arr;\r\n}\r\n/*\r\n【选择排序（一维数组）】\r\n【基&nbsp;本思想】：每一趟从待排序的数据元素中选出最小（或最大）的一个元素，顺序放在已排好序的数列的最后，直到全部待排序的数据元素排完。\r\n【示例】：\r\n[初&nbsp;始关键字]&nbsp;[49&nbsp;38&nbsp;65&nbsp;97&nbsp;76&nbsp;13&nbsp;27&nbsp;49]\r\n第一趟排序后&nbsp;13&nbsp;［38&nbsp;65&nbsp;97&nbsp;76&nbsp;49&nbsp;27&nbsp;49]\r\n第&nbsp;二趟排序后&nbsp;13&nbsp;27&nbsp;［65&nbsp;97&nbsp;76&nbsp;49&nbsp;38&nbsp;49]\r\n第三趟排序后&nbsp;13&nbsp;27&nbsp;38&nbsp;[97&nbsp;76&nbsp;49&nbsp;65&nbsp;49]\r\n第&nbsp;四趟排序后&nbsp;13&nbsp;27&nbsp;38&nbsp;49&nbsp;[49&nbsp;97&nbsp;65&nbsp;76]\r\n第五趟排序后&nbsp;13&nbsp;27&nbsp;38&nbsp;49&nbsp;49&nbsp;[97&nbsp;97&nbsp;76]\r\n第&nbsp;六趟排序后&nbsp;13&nbsp;27&nbsp;38&nbsp;49&nbsp;49&nbsp;76&nbsp;[76&nbsp;97]\r\n第七趟排序后&nbsp;13&nbsp;27&nbsp;38&nbsp;49&nbsp;49&nbsp;76&nbsp;76&nbsp;[&nbsp;97]\r\n最&nbsp;后排序结果&nbsp;13&nbsp;27&nbsp;38&nbsp;49&nbsp;49&nbsp;76&nbsp;76&nbsp;97\r\n*/\r\nfunction&nbsp;select_sort($arr){\r\n$count&nbsp;=&nbsp;count($arr);\r\nfor($i=0;&nbsp;$i&lt;$count;&nbsp;$i++){\r\n&nbsp;&nbsp;$k&nbsp;=&nbsp;$i;\r\n&nbsp;&nbsp;for($j=$i+1;&nbsp;$j&lt;$count;&nbsp;$j++){\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($arr[$k]&nbsp;&gt;&nbsp;$arr[$j])\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$k&nbsp;=&nbsp;$j;\r\n}\r\n&nbsp;&nbsp;if($k&nbsp;!=&nbsp;$i){\r\n&nbsp;&nbsp;&nbsp;&nbsp;$tmp&nbsp;=&nbsp;$arr[$i];\r\n&nbsp;&nbsp;&nbsp;&nbsp;$arr[$i]&nbsp;=&nbsp;$arr[$k];\r\n&nbsp;&nbsp;&nbsp;&nbsp;$arr[$k]&nbsp;=&nbsp;$tmp;\r\n&nbsp;&nbsp;}\r\n}\r\nreturn&nbsp;$arr;\r\n}\r\n/*\r\n【冒泡排序（一维数组）&nbsp;】\r\n【基本思想】：两两比较待排序数据元素的大小，发现两个数据元素的次序&nbsp;相反时即进行交换，直到没有反序的数据元素为止。\r\n【排序过程】：设想被排序的数组R［1..N］垂直竖立，将每个数据元素看作有重量的气泡，根据&nbsp;轻气泡不能在重气泡之下的原则，\r\n从下往上扫描数组R，凡扫描到违反本原则的轻气泡，就使其向上&quot;漂浮&quot;，如此反复进行，直至最后任何两个气泡都是&nbsp;轻者在上，重者在下为止。\r\n【示例】：\r\n49&nbsp;13&nbsp;13&nbsp;13&nbsp;13&nbsp;13&nbsp;13&nbsp;13\r\n38&nbsp;49&nbsp;27&nbsp;27&nbsp;27&nbsp;27&nbsp;27&nbsp;27\r\n65&nbsp;38&nbsp;49&nbsp;38&nbsp;38&nbsp;38&nbsp;38&nbsp;38\r\n97&nbsp;65&nbsp;38&nbsp;49&nbsp;49&nbsp;49&nbsp;49&nbsp;49\r\n76&nbsp;97&nbsp;65&nbsp;49&nbsp;49&nbsp;49&nbsp;49&nbsp;49\r\n13&nbsp;76&nbsp;97&nbsp;65&nbsp;65&nbsp;65&nbsp;65&nbsp;65\r\n27&nbsp;27&nbsp;76&nbsp;97&nbsp;76&nbsp;76&nbsp;76&nbsp;76\r\n49&nbsp;49&nbsp;49&nbsp;76&nbsp;97&nbsp;97&nbsp;97&nbsp;97\r\n*/\r\nfunction&nbsp;bubble_sort($array){\r\n$count&nbsp;=&nbsp;count($array);\r\nif&nbsp;($count&nbsp;&lt;=&nbsp;0)&nbsp;return&nbsp;false;\r\nfor($i=0;&nbsp;$i&lt;$count;&nbsp;$i++){\r\n&nbsp;&nbsp;for($j=$count-1;&nbsp;$j&gt;$i;&nbsp;$j--){\r\n&nbsp;&nbsp;&nbsp;if&nbsp;($array[$j]&nbsp;&lt;&nbsp;$array[$j-1]){\r\n&nbsp;&nbsp;&nbsp;&nbsp;$tmp&nbsp;=&nbsp;$array[$j];\r\n&nbsp;&nbsp;&nbsp;&nbsp;$array[$j]&nbsp;=&nbsp;$array[$j-1];\r\n&nbsp;&nbsp;&nbsp;&nbsp;$array[$j-1]&nbsp;=&nbsp;$tmp;\r\n&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}\r\n}\r\nreturn&nbsp;$array;\r\n}\r\n/*\r\n【快速排序（一&nbsp;维数组）】\r\n【基本思想】：在当前无序区R[1..H]中任取一个数据元素作为比较的&quot;基准&quot;(不妨记为X)，\r\n用此基准将当前无序区划分为&nbsp;左右两个较小的无序区：R[1..I-1]和R[I&nbsp;1..H]，且左边的无序子区中数据元素均小于等于基准元素，\r\n右边的无序子区中数据元素均大&nbsp;于等于基准元素，而基准X则位于最终排序的位置上，即R[1..I-1]≤X.Key≤R[I&nbsp;1..H](1≤I≤H)，\r\n当R[1..I-1]&nbsp;和R[I&nbsp;1..H]均非空时，分别对它们进行上述的划分过程，直至所有无序子区中的数据元素均已排序为止。\r\n【示例】：\r\n初始关键字&nbsp;[49&nbsp;38&nbsp;65&nbsp;97&nbsp;76&nbsp;13&nbsp;27&nbsp;49］\r\n第一次交换后&nbsp;［27&nbsp;38&nbsp;65&nbsp;97&nbsp;76&nbsp;13&nbsp;49&nbsp;49］\r\n第二次交换后&nbsp;［27&nbsp;38&nbsp;49&nbsp;97&nbsp;76&nbsp;13&nbsp;65&nbsp;49］\r\nJ向左扫描，位置不变，第三次交换后&nbsp;［27&nbsp;38&nbsp;13&nbsp;97&nbsp;76&nbsp;49&nbsp;65&nbsp;49］\r\nI向右扫描，位置不变，第四次交换后&nbsp;［27&nbsp;38&nbsp;13&nbsp;49&nbsp;76&nbsp;97&nbsp;65&nbsp;49］\r\nJ向左扫描&nbsp;［27&nbsp;38&nbsp;13&nbsp;49&nbsp;76&nbsp;97&nbsp;65&nbsp;49］\r\n（一次划分过程）\r\n初始关键字&nbsp;［49&nbsp;38&nbsp;65&nbsp;97&nbsp;76&nbsp;13&nbsp;27&nbsp;49］\r\n一趟排序之后&nbsp;［27&nbsp;38&nbsp;13］&nbsp;49&nbsp;［76&nbsp;97&nbsp;65&nbsp;49］\r\n二趟排序之后&nbsp;［13］&nbsp;27&nbsp;［38］&nbsp;49&nbsp;［49&nbsp;65］76&nbsp;［97］\r\n三趟排序之后&nbsp;13&nbsp;27&nbsp;38&nbsp;49&nbsp;49&nbsp;［65］76&nbsp;97\r\n最后的排序结果&nbsp;13&nbsp;27&nbsp;38&nbsp;49&nbsp;49&nbsp;65&nbsp;76&nbsp;97\r\n各趟排序之后的状态\r\n*/\r\nfunction&nbsp;quick_sort($array){\r\nif&nbsp;(count($array)&nbsp;&lt;=&nbsp;1)&nbsp;return&nbsp;$array;\r\n$key&nbsp;=&nbsp;$array[0];\r\n$left_arr&nbsp;=&nbsp;array();\r\n$right_arr&nbsp;=&nbsp;array();\r\nfor&nbsp;($i=1;&nbsp;$i&lt;count($array);&nbsp;$i++){\r\n&nbsp;&nbsp;if&nbsp;($array[$i]&nbsp;&lt;=&nbsp;$key)\r\n&nbsp;&nbsp;&nbsp;$left_arr[]&nbsp;=&nbsp;$array[$i];\r\n&nbsp;&nbsp;else\r\n&nbsp;&nbsp;&nbsp;$right_arr[]&nbsp;=&nbsp;$array[$i];\r\n}\r\n$left_arr&nbsp;=&nbsp;quick_sort($left_arr);\r\n$right_arr&nbsp;=&nbsp;quick_sort($right_arr);\r\nreturn&nbsp;array_merge($left_arr,&nbsp;array($key),&nbsp;$right_arr);\r\n}\r\n/*打印数组全部内容*/\r\nfunction&nbsp;display_arr($array){\r\n$len&nbsp;=&nbsp;count($array);\r\nfor($i&nbsp;=&nbsp;0;&nbsp;$i&lt;$len;&nbsp;$i++){\r\n&nbsp;&nbsp;echo&nbsp;$array[$i].&#39;&nbsp;&#39;;\r\n}\r\necho&nbsp;&#39;&lt;br&nbsp;/&gt;&#39;;\r\n}\r\n/*\r\n几种排序算法的比较和选择\r\n1.&nbsp;选取排序方法需要考虑的因素：\r\n(1)&nbsp;待排序的元素数目n；\r\n(2)&nbsp;元素本身信息量的大小；\r\n(3)&nbsp;关键字的结构及其分布情况；\r\n(4)&nbsp;语言工具的条件，辅助空间的大小等。\r\n2.&nbsp;小结：\r\n(1)&nbsp;若n较小(n&nbsp;&lt;=&nbsp;50)，则可以采用直接插入排序或直接选择排序。由于直接插入排序所需的记录移动操作较直接选择排序多，因而当记录本身信息量较大时，用直接选择排序较&nbsp;好。\r\n(2)&nbsp;若文件的初始状态已按关键字基本有序，则选用直接插入或冒泡排序为宜。\r\n(3)&nbsp;若n较大，则应采用时间复杂度为O(nlog2n)的排序方法：快速排序、堆排序或归并排序。&nbsp;快速排序是目前基于比较的内部排序法中被认为是最好的方法。\r\n(4)&nbsp;在基于比较排序方法中，每次比较两个关键字的大小之后，仅仅出现两种可能的转移，因此可以用一棵二叉树来描述比较判定过程，由此可以证明：当文件的n个关&nbsp;键字随机分布时，任何借助于&quot;比较&quot;的排序算法，至少需要O(nlog2n)的时间。\r\n(5)&nbsp;当记录本身信息量较大时，为避免耗费大量时间移动记录，可以用链表作为存储结构。\r\n*/\r\n/*排序测试*/\r\n$a&nbsp;=&nbsp;array(&#39;12&#39;,&#39;4&#39;,&#39;16&#39;,&#39;8&#39;,&#39;13&#39;,&#39;20&#39;,&#39;5&#39;,&#39;32&#39;);\r\necho&nbsp;&#39;The&nbsp;result&nbsp;of&nbsp;insert&nbsp;sort:&#39;;\r\n$insert_a&nbsp;=&nbsp;insert_sort($a);\r\ndisplay_arr($insert_a);\r\necho&nbsp;&#39;The&nbsp;result&nbsp;of&nbsp;select&nbsp;sort:&#39;;\r\n$select_a&nbsp;=&nbsp;select_sort($a);\r\ndisplay_arr($select_a);\r\necho&nbsp;&#39;The&nbsp;result&nbsp;of&nbsp;bubble&nbsp;sort:&#39;;\r\n$bubble_a&nbsp;=&nbsp;bubble_sort($a);\r\ndisplay_arr($bubble_a);\r\necho&nbsp;&#39;The&nbsp;result&nbsp;of&nbsp;bubble&nbsp;sort:&#39;;\r\n$quick_a&nbsp;=&nbsp;quick_sort($a);\r\ndisplay_arr($quick_a);\r\n?&gt;\r\n/**\r\n&nbsp;*&nbsp;排列组合\r\n&nbsp;*&nbsp;采用二进制方法进行组合的选择，如表示5选3时，只需有3位为1就可以了，所以可得到的组合是&nbsp;01101&nbsp;11100&nbsp;00111&nbsp;10011&nbsp;01110等10种组合\r\n&nbsp;*\r\n&nbsp;*&nbsp;@param&nbsp;需要排列的数组&nbsp;$arr\r\n&nbsp;*&nbsp;@param&nbsp;最小个数&nbsp;$min_size\r\n&nbsp;*&nbsp;@return&nbsp;满足条件的新数组组合\r\n&nbsp;*/\r\nfunction&nbsp;pl($arr,$size=5)&nbsp;{\r\n&nbsp;$len&nbsp;=&nbsp;count($arr);\r\n&nbsp;$max&nbsp;=&nbsp;pow(2,$len);\r\n&nbsp;$min&nbsp;=&nbsp;pow(2,$size)-1;\r\n&nbsp;$r_arr&nbsp;=&nbsp;array();\r\n&nbsp;for&nbsp;($i=$min;&nbsp;$i&lt;$max;&nbsp;$i++){\r\n&nbsp;&nbsp;$count&nbsp;=&nbsp;0;\r\n&nbsp;&nbsp;$t_arr&nbsp;=&nbsp;array();\r\n&nbsp;&nbsp;for&nbsp;($j=0;&nbsp;$j&lt;$len;&nbsp;$j++){\r\n&nbsp;&nbsp;$a&nbsp;=&nbsp;pow(2,&nbsp;$j);\r\n&nbsp;&nbsp;$t&nbsp;=&nbsp;$i&amp;$a;\r\n&nbsp;&nbsp;if($t&nbsp;==&nbsp;$a){\r\n&nbsp;&nbsp;&nbsp;$t_arr[]&nbsp;=&nbsp;$arr[$j];\r\n&nbsp;&nbsp;&nbsp;$count++;\r\n&nbsp;&nbsp;}\r\n&nbsp;&nbsp;}\r\n&nbsp;&nbsp;if($count&nbsp;==&nbsp;$size){\r\n&nbsp;&nbsp;$r_arr[]&nbsp;=&nbsp;$t_arr;\r\n&nbsp;&nbsp;}\r\n&nbsp;}</pre><p><br/></p>',0,'',1006,0,1,18),(26,' PHP程序员必须收藏的资源大全 ','  ','  ','','<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">ziadoz 在 Github 发起维护的一个 PHP 资源列表，内容包括：库、框架、模板、安全、代码分析、日志、第三方库、配置工具、Web 工具、书籍、电子书、经典博文等等。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">伯乐在线已在 GitHub 上发起「PHP 资源大全中文版」的整理。欢迎扩散、欢迎加入。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">https://github.com/jobbole/awesome-php-cn</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">依赖管理</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">依赖和包管理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Composer/Packagist：一个包和依赖管理器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Composer Installers：一个多框架Composer库安装器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Pickle：一个PHP扩展安装器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">其他的依赖管理</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">其他的相关依赖管理</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Satis：一个静态Composer存储库生成器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Composition：一个在运行时检查Composer环境的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Version：语义版本的解析和比较库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">NameSpacer -转化下划线到命名空间的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Patch Installer -使用Composer安装补丁的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Composer Checker -校验Composer配置的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">框架</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Web开发框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Symfony2 -一个独立组件组成的框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Zend Framework 2 -另一个由独立组件组成的框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Laravel 4 -另一个PHP框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Aura PHP -独立组件的框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Yii2 – 另一个PHP框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Nette – 另一个由个体组件组成的框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PPI Framework 2 -一个互操作性框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Phalcon -通过C扩展实现的框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">其他框架</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">其他Web开发框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Symfony CMF – 创建自定义CMS的内容管理框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Knp RAD Bundle -Symfony 2的快速应用程序(RAD)包</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">框架组件</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">来自web开发框架的独立组件</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Symfony2 Components -Symfony2组件</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Zend Framework 2 Components -ZF2组件</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Aura Components -PHP5.4组件包</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Hoa Project -另一个PHP组件包</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">微型框架</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">微型框架和路由</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Silex – 基于Symfony2组件的微型框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Slim – 另一个简单的微型框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Bullet PHP -用于构建REST APIs的微型框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Fast Route – 快速路由库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Pux -另一个快速路由库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">其他微型框架</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">其他相关的微型框架和路由</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Silex Skeleton -Silex的项目架构</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Silex Web Profiler -Silex web调试工具条</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Stack – Silex/Symfony的可堆叠中间件库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Slim Skeleton -Slim架构</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Slim View -Slim的自定义视图集合</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Slim Middleware -Slim的自定义中间件集合</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">模板</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">模板化和词法分析的库和工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Twig -一个全面的模板语言</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Twig Cache Extension -一个用于Twig的模板片段缓存库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Mustache -一个Mustache模板语言的PHP实现</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Phly Mustache -另一个Mustache模板语言的PHP实现</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">MtHaml – 一个HAML 模板语言的PHP实现</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPTAL -一个 TAL 模板语言的PHP实现</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Plates -一个原生PHP模板库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Lex -一个轻量级模板解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">静态站点生成器</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">预处理工具来生成web页面的内容。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Sculpin -转换Markdown和Twig为静态HTML的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Phrozn – 另一个转换Textile，Markdown和Twig为HTML的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">HTTP</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">用于HTTP和网站爬取的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Guzzle -一个全面的HTTP客户端</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Buzz -另一个HTTP客户端</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Requests -一个简单的HTTP库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">HTTPFul -一个链式HTTP库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Goutte -一个简单的web爬取器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP VCR -录制和重放HTTP请求的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">URL</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">解析URL的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Purl -一个URL处理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Domain Parser -一个本地前缀解析库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Email</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">发送和解析邮件的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">SwiftMailer – 一个邮件解决方案</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPMailer – 另一个邮件解决方案</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Fetch -一个IMAP库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Email Reply Parser -一个邮件回复解析库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Stampie -邮件服务库，不如 SendGrid, PostMark, MailGun 和 Mandrill.</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">CssToInlineStyles -一个在邮件模板内联CSS的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">文件</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">文件处理和MIME类型检测库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Gaufrette -一个文件系统抽象层</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Flysystem – 另一个文件系统抽象层</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Canal -一个检测互联网媒体类型的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Apache MIME Types -一个解析Apache MIME类型的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Ferret – 一个MIME检测库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Hoa Mime -另一个MIME检测库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Lurker -一个资源跟踪库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP File Locator -一个在大型项目定位文件的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP FFmpeg -一个用于FFmpeg 视频包装的库.</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">CSV – 一个CSV数据处理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Streams 流</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">处理流的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Streamer – 一个面向对象的流包装库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Dependency Injection依赖注入</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">实现依赖注入设计模式的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Pimple – 一个小的依赖注入容器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Auryn – 另一个依赖注入容器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Orno Di -另一个可伸缩的依赖注入容器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP DI -一个使用注释实现的依赖注入</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Acclimate -一个依赖注入容器和服务定位的通用接口</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Imagery 图像</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">处理图像的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Imagine -一个图像处理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Image Workshop -另一个图像处理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Intervention Image -另一个图像处理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">GIF Frame Extractor -一个提取GIF动画帧信息的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">GIF Creator – 一个通过多张图片创建GIF动画的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Image With Text -一个在图像中嵌入文本的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Color Extractor -一个从图像中提取颜色的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Testing 测试</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">测试代码和生成测试数据的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPUnit -一个单元测试框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">DBUnit -PHPUnit的数据库测试库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">ParaTest – PHPUnit的并行测试库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPSpec -基于功能点设计的单元测试库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Codeception -一个全栈测试框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">AspectMock – PHPUnit/ Codeception 模拟框架。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Atoum -一个简单的测试库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Mockery -一个用测试的模拟对象库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Phake -另一个用测试的模拟对象库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Prophecy -一个可选度很高的模拟框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Faker -一个伪数据生成库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Samsui – 另一个伪数据生成库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Alice -富有表现力的一代库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Behat -一个行为驱动开发(BDD)测试框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Pho -一个行为驱动开发测试框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Mink -Web验收测试</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">HTTP Mock – 一个在单元测试模拟HTTP请求的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">VFS Stream -一个用于测试的虚拟文件系统流的包装器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">VFS -另一个用于测试虚拟文件系统</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Locust -一个用Python编写的现代加载测试库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Continuous Integration 持续集成</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">持续集成的库和应用</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Travis CI – 一个持续集成平台</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPCI -一个PHP的开源持续集成平台</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Sismo – 一个持续测试服务库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Jenkins一个 PHP 支持的持续集成平台</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">JoliCi – 一个用PHP编写的由Docker支持的持续集成客户端</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Documentation 文档</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">生成项目文档的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Sami -一个API文档生成器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">APIGen -另一个API文档生成器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Documentor 2 -一个API文档生成器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">phpDox – 一个PHP项目的文档生成器(不限于API文档)</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Security 安全</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">生成安全的随机数，加密数据，扫描漏洞的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">HTML Purifier -一个兼容标准的HTML过滤器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">RandomLib -一个生成随机数和字符串的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">True Random -使用 www.random.org生成随机数的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">SecurityMultiTool -一个PHP安全库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPSecLib -一个纯PHP安全通信库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">TCrypto -一个简单的键值加密存储库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP IDS – 一个结构化的PHP安全层</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP SSH -一个试验的面向对象的SSH包装库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">IniScan -一个扫描PHP INI文件安全的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">SensioLabs Security Check -一个为检查Composer依赖提供安全建议的web工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Zed – 一个集成的web应用渗透测试工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Passwords 密码</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">处理和存储密码的库和工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Password Compat -一个新的PHP5.5密码函数的兼容库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">phpass – 一个便携式的密码哈希框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Password Lib -一个生成和校验密码的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Password Policy – 一个PHP和JavaScript的密码策略库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Password Validator – 校验和升级密码哈希的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Zxcvbn PHP -一个基于Zxcvbn JS的现实的PHP密码强度估计库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Code Analysis 代码分析</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">分析，解析和处理代码库的库的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Parser -一个PHP编写的PHP解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPPHP – 一个PHP实现的PHP虚拟机</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPSandbox -一个PHP沙盒环境</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Dissect -一个词法和语法分析的工具集合</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Mess Detector -一个扫描代码缺陷,次优代码，未使用的参数等等的库。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Code Sniffer -一个检测PHP、CSS和JS代码标准冲突的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPCPD – 一个检测复制和粘贴代码的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Analyser -一个分析PHP代码查找缺陷和错误的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP CS Fixer – 一个编码标准库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Manipulator -一个分析和修改PHP源代码的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Metrics -一个静态测量库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Refactoring Browser -一个重构PHP代码的命令行工具集</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">UBench – 一个简单的微型基准检测库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Athletic -一个基于注释的基准检测库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Mondrian – 使用使用图论的代码分析工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Scrutinizer -一个审查PHP代码的web工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPLOC -一个快速测量PHP项目大小的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">xHprof -另一个PHP分析工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPCheckstyle -一个帮助遵守特定的编码惯例的工具。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Debugging 调试</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调试代码的库和工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">xDebug -一个调试和分析PHP的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Debug Bar – 一个调试工具栏</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Console -一个web调试控制台</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Barbushin PHP Console -另一个使用Google Chrome的web调试控制台</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPDBG – 一个交互的PHP调试器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Tracy -一个简单的错误检测，写日志和时间测量库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Build Tools 构建工具</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">项目构建和自动化工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Go -一个简单的PHP构建工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Bob – 一个简单的项目自动化工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Phake -一个PHP克隆库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Box – 一个构建PHAR文件的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Phing -一个灵感来自于Apache Ant的PHP项目构建系统</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Task Runners 任务运行器</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">自动运行任务的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Task -一个灵感来源于Grunt和Gulp的纯PHP任务运行器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Robo -一个面向对象配置的PHP任务运行器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Bldr -一个构建在Symfony组件上的PHP任务运行器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Navigation导航</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">构建导航结构的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">KnpMenu – 一个菜单库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Cartographer -一个站点地图生成库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Asset Management 资源管理</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">管理，压缩和最小化web站点资源的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Assetic – 一个资源管理的管道库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Pipe -另一个资源管理的管道库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Munee -一个资源优化库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">JShrink -一个JavaScript最小化库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Puli – 一个检测资源绝对路径的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Geolocation 地理位置</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">为地理编码地址和使用纬度经度的库。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">GeoCoder -一个地理编码库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">GeoTools -一个地理工具相关的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPGeo -一个简单的地理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">GeoJSON -一个地理JSON的实现</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Date and Time 日期和时间</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">处理日期和时间的库</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Carbon – 一个简单的日期时间API扩展</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">ExpressiveDate -另一个日期时间API扩展</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">CalendR – 一个日历管理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Event 事件</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">时间驱动或非阻塞事件循环实现的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">React -一个事件驱动的非阻塞I/O库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Rx.PHP – 一个reactive扩展库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Ratchet – 一个web套接字库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Hoa WebSocket -另一个web套接字库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Hoa EventSource -一个事件源库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Evenement -一个事件分发库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">FuelPHP Event -另一个事件分发库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Logging 日志</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">生成和处理日志文件的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Monolog – 一个全面的日志工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">KLogger -一个易用的PSR-3兼容的日志类</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">E-commerce 电子商务</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">处理支付和构建在线电子商务商店的库和应用</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">OmniPay -一个框架混合了多网关支付处理的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Payum – 一个支付抽象库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Sylius – 一个开源的电子商务解决方案</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Thelia -另一个开源的电子商务解决方案</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Money – 一个Fowler金钱模式的PHP实现</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Sebastian Money -另一个处理货币值的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Swap -一个汇率库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">PDF</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">处理PDF文件的库和软件</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Snappy -一个PDF和图像生成器库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">WKHTMLToPDF -一个将HTML转换为PDF的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Database 数据库</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">使用对象关系映射(ORM)或数据映射技术的数据库交互库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Doctrine -一个全面的DBAL和ORM</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Doctrine Extensions -一个Doctrine行为扩展的集合</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Propel – 一个快速的ORM，迁移库和查询构架器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Eloquent -Laravel 4 ORM</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Baum -一个Eloquent的嵌套集实现</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Spot2 -一个MySQL的ORM映射器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">RedBean -一个轻量级，低配置的ORM</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Pomm -一个PostgreSQL对象模型管理器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">ProxyManager -一个为数据映射生成代理对象的工具集</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Migrations 迁移</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">帮助管理数据库模式和迁移的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPMig -另一个迁移管理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Phinx – 另一个数据库迁移管理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Migrations -一个迁移管理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Doctrine Migrations -一个Doctrine迁移库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">NoSQL</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">处理NoSQL后端的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">MongoQB -一个MongoDB查询构建库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Monga -一个MongoDB抽象库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Predis – 一个功能完整的Redis库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Queue 队列</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">处理事件和任务队列的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Pheanstalk -一个Beanstalkd 客户端库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP AMQP -一个纯PHP AMQP库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Thumper – 一个RabbitMQ模式库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Bernard -一个多后端抽象库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Search 搜索</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">在数据上索引和执行查询的库和软件</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">ElasticSearch PHP -ElasticSearch的官方客户端库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Elastica -ElasticSearch的客户端库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Solarium -Solr的客户端库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">SphinxQL query builder -Sphinx搜索引擎的的查询库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Command Line 命令行</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">构建命令行工具的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Boris – 一个微型PHP REPL</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PsySH – 另一个微型PHP REPL</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Pecan -一个事件驱动和非阻塞内核</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">GetOpt – 一个命令行选择解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">OptParse -另一个命令行选择解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Commando -另一个简单的命令行选择解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">GetOptionKit -另一个命令行选择解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Cron Expression -计算cron运行日期的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">ShellWrap -一个简单的命令行包装库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Hoa Console -另一个命令行库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Shunt – 一个在多台远程机器上并行运行命令行的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Cilex -一个构建命令行工具的微型框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Authentication 身份验证</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">实现身份验证的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Sentry -一个混合的身份验证和授权的框架库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Sentry Social -一个社交网络身份验证库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Opauth -一个多渠道的身份验证框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">OAuth2 -一个OAuth2身份验证服务，资源服务器和客户端库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">OAuth2 Server -另一个OAuth2服务器实现</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP oAuthLib -另一个OAuth库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">TwitterOAuth -一个Twitter OAuth库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">TwitterSDK -一个完全测试的Twitter SDK</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Hawk -一个Hawk HTTP身份认证库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">HybridAuth -一个开源的社交登陆库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Markup 标记</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">处理标记的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Decoda -一个轻量级标记解析库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Markdown -一个Markdown解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">CommonMark PHP -一个对 CommonMark spec全支持的Markdown解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Dflydev Markdown -另一个Markdown解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Parsedown -另一个Markdown解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Ciconia – 另一个支持Github Markdown风格的Markdown解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Cebe Markdown -一个快速的可扩展的Markdown解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">HTML5 PHP – 一个HTML5解析和序列化库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Strings 字符串</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">解析和处理字符串的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">ANSI to HTML5 -ANSI到HTML5的转化库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Patchwork UTF-8 -一个处理UTF-8字符串的便携库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Hoa String -另一个UTF-8字符串库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Stringy -一个多字节支持的字符串处理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Color Jizz -处理和转换颜色的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">UUID – 生成UUIDs的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Slugify -转换字符串到slug的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Urlify – 一个Django的 URLify.jsPHP通道</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Text – 一个文本处理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">SQL Formatter -一个格式化SQL语句的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">UA Parser – 一个解析用户代理字符串的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Numbers 数字</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">处理数字的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Numbers PHP -处理数字的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Math -处理大数字的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">ByteUnits – 在二进制和度量系统中解析,格式化和转换字节单元的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Units of Measure -一个计量单位转换的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Conversion – 另一个计量单位转换的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">LibPhoneNumber for PHP -Google电话号码处理的PHP实现库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Filtering and Validation 过滤和验证</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">过滤和验证数据的库</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Filterus – 一个简单的PHP过滤库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Respect Validate -一个简单的验证库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Valitron -另一个验证库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Upload – 一个处理文件上传和验证的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">DMS Filter – 一个注释过滤库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">MetaYaml -一个支持YAML,JSON和XML的模式验证库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">ISO-codes -验证各种ISO和ZIP编码的库(IBAN, SWIFT/BIC, BBAN, VAT, SSN, UKNIN)</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">REST和API</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">开发REST-ful API的库和web工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Apigility -一个使用Zend Framework 2构建的API构建器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Hateoas -一个HOATEOAS REST web服务库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">HAL -一个超文本应用语言(HAL)构建库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Negotiation -一个内容协商库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Drest -一个将Doctrine实体暴露为REST资源节点的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Restler -一个将PHP方法暴露为RESTful web API的轻量级框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Caching 缓存</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">缓存数据的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Alternative PHP Cache (APC) – 打开PHP伪代码缓存</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Cache -一个缓存库(Doctrine部分)</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Stash -另一个缓存库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">数据结构和存储</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">实现数据结构和存储技术的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Ardent -一个数据结构库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Collections – 一个简单的集合库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Serializer -一个序列化和反序列化数据的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Object Storage -一个对象存储库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Fractal -一个转换复杂数据结构到JSON输出的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Totem -一个管理和穿件数据交换集的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PINQ -一个PHP实时Linq库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">JsonMapper -一个将内嵌JSON结构映射为PHP类的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Notifications 通知</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">处理通知软件的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Nod -一个通知库(Growl等)</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Notificato – 一个处理推送通知的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Notification Pusher -一个设备推送通知的独立库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Notificator -一个轻量级的通知库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Deployment 部署</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">项目部署库</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Pomander -一个PHP应用部署工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Rocketeer -PHP世界里的一个快速简单的部署器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Envoy -一个用PHP运行SSH任务的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Plum – 一个部署库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">国际化和本地化</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">国际化(I18n)和本地化(L10n)</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Aura.Intl</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">第三方API</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">访问第三方API的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Amazon Web Service SDK – PHP AWS SDK官方库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">S3 Stream Wrapper -Amazon S3流包装库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Stripe -Stripe官方PHP库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Campaign Monitor -Campaign Monitor官方PHP库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Digital Ocean -Digital Ocean API 接口库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Github – Github API交互库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Github API -另一个Github API交互库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Twitter OAuth -Twitter OAuth工作流交互库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Twitter REST – Twitter REST API交互库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Dropbox SDK – The official PHP Dropbox SDK library.</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Dropbox SDK – Dropbox SDK官方PHP库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Twilio – The official Twilio PHP REST API.</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Twilio – Twilio官方PHP REST API</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Mailgun The official Mailgun PHP API.</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Mailgun Mailgun官方PHP REST API</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Extensions 扩展</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">帮组构建PHP扩展的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Zephir -用于开发PHP扩展，且介于PHP和C++之间的编译语言</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP CPP -一个开发PHP扩展的C++库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Miscellaneous 杂项</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">不在上面分类中的有用库和工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Spork -一个处理forking的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">JSON Lint – 一个JSON lint工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">JSONPCallbackValidator -验证JSONP回调的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Pagerfanta -一个分页库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Ruler – 一个简单的无状态的生产环境规则引擎。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">LiteCQRS -一个CQRS(命令查询责任分离)库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Sslurp – 一个使得SSL处理减少的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Option一个可选的类型库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Metrics -一个简单的度量API库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Sabre VObject – 一个解析VCard和iCalendar对象的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Annotations -一个注释库(Doctrine部分)</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Whoops -一个不错的错误处理库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Finite -一个简单的PHP有限状态机</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">LadyBug -一个dumper库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Procrastinator -运行耗时任务的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Compose -一个功能组合库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">SuperClosure -一个允许闭包序列化的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Jumper – 一个远程服务执行库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Underscore -一个Undersccore JS库的PHP实现</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP PassBook -一个iOS PassBook PHP库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Expression -一个PHP表达式语言</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">RMT – 一个编写版本和发布软件的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Wise – 一个配置管理器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Opengraph -一个开放图库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Essence -一个提取web媒体的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Embera -一个Oembed消费库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Graphviz -一个图形库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Monad PHP 一个简单Monad库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Flux -一个正则表达式构建库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Patchwork – 一个重新定义用户的函数库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Galapagos -语言转换进化</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Design Patterns PHP -一个使用PHP实现的设计模式存储库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPCR – 一个Java内容存储库(JCR)的PHP实现</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Functional PHP – 一个函数式编程库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">ClassPreloader – 一个优化自动加载的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Lib Country -一个国家和地区数据的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Lib Accessor -一个简化访问的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHPStack -一个PHP编写的TCP/IP栈概念</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Nmap -一个Nmap PHP包装器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Code Mover -一个移动代码的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Iter -一个使用生成器提供迭代原语的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Lambda PHP -一个PHP中的Lambda 计算解析器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Country List – 所有带有名称和ISO 3166-1编码的国家列表</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP-GPIO – 用于Raspberry PI的GPIO pin的库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">print_o – 一个对象图的可视化器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Alias -一个类别名库</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Software 软件</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">创建一个开发环境的软件</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">PHP安装</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">在你的电脑上帮助安装和管理PHP的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">HomeBrew -一个OSX包管理器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">HomeBrew PHP -一个HomeBrew的PHP通道</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP OSX – 一个OSX下的PHP安装器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Brew -一个PHP版本管理和安装器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Env – 另一个PHP版本管理器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Switch – 另一个PHP版本管理器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Build – 另一个PHP版本安装器</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">VirtPHP – 一个创建和管理独立PHP环境的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Development Environment 开发环境</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">创建沙盒开发环境的软件和工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Vagrant -一个便携的开发环境工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Ansible – 一个非常简单的编制框架</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Puppet -一个服务器自动化框架和应用</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PuPHPet -一个构建PHP开发虚拟机的web工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Protobox -另一个构建PHP开发虚拟机的web工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Phansible – 一个用Ansible构建PHP开发虚拟机的web工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Virtual Machines 虚拟机</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">相关的PHP虚拟机</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">HipHop PHP -Facebook出品的PHP虚拟机，运行时和JIT</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">HippyVM -另一个PHP虚拟机</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Hack – 一个PHP进行无缝操作的 HHVM编程语言</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">IDE 集成开发环境</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">支持PHP的集成开发环境</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Netbeans -一个支持PHP和HTML5的IDE</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Eclipse for PHP Developers -一个基于Eclipse平台的PHP IDE</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PhpStorm -一个商业PHP IDE</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Web Applications Web应用</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">基于Web的应用和工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">3V4L一个在线的PHP shell</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">DBV -一个数据库版本控制应用</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Queue -一个管理后端队列的应用</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Composer as a Service – 作为一个zip文件下载Composer包的工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">MailCatcher – 一个抓取和查看邮件的web工具</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">Resources 资源</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">各种提高你的PHP开发技能和知识的资源，比如书籍，网站，文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">PHP网站</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP相关的有用网站</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP The Right Way -一个PHP最佳实践的快速指引手册</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Best Practices – 一个PHP最佳实践指南</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Weekly – 一个PHP新闻周刊</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Security – 一个PHP安全指南</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP FIG – PHP框架交互组</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP UG -一个帮助用户定位最近的PHP用户组(UG)的网站</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Seven PHP -一个PHP社区成员采访的网站</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Nomad PHP -一个在线PHP学习资源</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Mentoring -点对点PHP导师组织</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Other Websites 其他网站</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">web开发相关的有用网站</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">The Open Web Application Security Project (OWASP) -一个开放软件安全社区</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">WebSec IO – 一个web安全社区资源</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Web Advent -一个web开发人员日历</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Semantic Versioning -一个解析语义版本的网站</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Atlassian Git Tutorials -一个Git教程系列</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Hg Init -一个Mercurial教程系列</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Servers for Hackers – 一个关于服务器管理的新闻通讯</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">PHP 书籍</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP相关的非常好的书籍</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Scaling PHP Applications – 一本Steve Corona关于扩展PHP应用程序的电子书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">The Grumpy Programmer’s Guide to Building Testable PHP Applications -一本Chris Hartjes关于构建PHP应用程序测试的书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Grumpy PHPUnit -一本Chris Hartjes关于使用PHPUnit进行单元测试的书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Mastering Object-Orientated PHP – 一本Brandon Savage关于PHP面向对象的书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Signaling PHP -一本Cal Evans关于在CLI脚本捕获PCNTL 信号的书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Securing PHP: Core Concepts -一本Chris Cornutt关于PHP常见安全条款和实践的书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Modernising Legacy Applications in PHP -一本Paul M.Jones关于遗留PHP应用进行现代化的书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">其他书籍</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">与一般计算和web开发相关的书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">The Linux Command Line -William Shotts关于Linux命令行的一本书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Understanding Computation -Tom Stuart关于计算理论的一本书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">The Tangled Web — Securing Web Applications – Michal Zalewski关于web应用安全的一本书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Elasticsearch: The Definitive Guide -Clinton Cormley和Zachary Tong编写的与Elasticsearch工作的一本指南</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Eloquent JavaScript -Marijin Haverbeke关于JavaScript编程的一本书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Vagrant Cookbook-Erika Heidi关于创建 Vagrant环境的一本书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Pro Git -Scott Chacon和Ben Straub关于Git的一本书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">PHP视频</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP相关的非常不错的视频</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Taking PHP Seriously – 来自Facebook Keith Adams 讲述PHP优势</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Town Hall – 一个随意的Ben Edmunds和Phil Sturgeon的PHP播客</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Programming with Anthony Anthony Ferrara的视频系列</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><span style=\"box-sizing: border-box; margin: 0px; border: none; word-break: break-all; font-weight: 700;\">PHP阅读</span></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP相关的阅读资料</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Create Your Own PHP Framework – 一部Fabien Potencier的关于如何创建你自己的PHP框架的系列文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Seven Ways to Screw Up BCrypt – 一篇关于纠正BCrypt实现的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Preventing CSRF Attacks -一篇组织CSRF攻击的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Don’t Worry About BREACH – 一篇关于BREACH攻击和CSRF令牌的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">On PHP 5.3, Lamda Functions and Closures -一篇关于lambda函数和闭包的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Use Env – 一篇关于使用unix环境帮助的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Composer Primer – Composer初级</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Composer Versioning -一篇关于Composer版本的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Composer Stability Flags -一篇关于Composer稳定性标志的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Innocent Villagefolk or a Pillagin’ Pirate? -一篇关于PHP从其他语言获取想法的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Predicting Random Numbers in PHP -一篇关于生成随机数的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">A 20 Point List for Preventing XSS in PHP -一篇关于组织XSS的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Sucks! But I Like It! -一篇关于PHP利弊的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Is Much Better Than You Think -一篇关于PHP语言和生态圈的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Internals Reading PHP内核阅读</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">阅读PHP内核或性能相关的资料</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP RFCs – PHP RFCs主页(请求注解)</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Internals Book – 一本由三名核心开发编写的关于PHP内核的在线书</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Print vs Echo, Which One is Faster? -一篇关于打印和echo性能的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">The PHP Ternary Operator. Fast or Not? -一篇关于三元操作性能的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Disproving the Single Quotes Myth -一篇关于单，双引号字符串性能的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">You’re Being Lied To – 一篇关于内核ZVALs的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">How Long is a Piece of String -一篇关于字符串原理的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Understanding OpCodes -一篇关于伪代码的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">How Foreach Works -StackOverflow 关于foreach回答的详情</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">When Does Foreach Copy? -一篇关于foreach原理的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">How Big Are PHP Arrays (And Values) Really? – 一篇关于数组原理的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Why Objects (Usually) Use Less Memory Than Arrays -一篇关于对象和数组原理的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">PHP Evaluation Order -一篇关于PHP评估顺序的文章</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">开发人员的PHP源代码： 1 2 3 4 -关于PHP源代码的系列</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">垃圾收集： 1 2 3 关于PHP垃圾收集原理的系列</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">伯乐在线已在 GitHub 上发起「PHP 资源大全中文版」的整理。欢迎扩散、欢迎加入。</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 10px; border: none; word-break: break-all; font-family: arial, \" microsoft=\"\" color:=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">https://github.com/jobbole/awesome-php-cn</p><p><br/></p>',1477139382,'',1007,1,1,18),(27,' 超实用PHP函数总结整理 ','  ','  ','','<p></p><pre class=\"brush:php;toolbar:false\"><br/></pre><h4 id=\"encrypt\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">1、PHP加密解密</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">PHP加密和解密函数可以用来加密一些有用的字符串存放在数据库里，并且通过可逆解密字符串，该函数使用了base64和MD5加密和解密。</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">function&nbsp;encryptDecrypt($key,&nbsp;$string,&nbsp;$decrypt){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if($decrypt){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$decrypted&nbsp;=&nbsp;rtrim(mcrypt_decrypt(MCRYPT_RIJNDAEL_256,&nbsp;md5($key),&nbsp;base64_decode($string),&nbsp;MCRYPT_MODE_CBC,&nbsp;md5(md5($key))),&nbsp;&quot;12&quot;);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$decrypted;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}else{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$encrypted&nbsp;=&nbsp;base64_encode(mcrypt_encrypt(MCRYPT_RIJNDAEL_256,&nbsp;md5($key),&nbsp;$string,&nbsp;MCRYPT_MODE_CBC,&nbsp;md5(md5($key))));&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$encrypted;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">//以下是将字符串“Helloweba欢迎您”分别加密和解密&nbsp;//加密：&nbsp;echo&nbsp;encryptDecrypt(&#39;password&#39;,&nbsp;&#39;Helloweba欢迎您&#39;,0);&nbsp;\r\n//解密：&nbsp;echo&nbsp;encryptDecrypt(&#39;password&#39;,&nbsp;&#39;z0JAx4qMwcF+db5TNbp/xwdUM84snRsXvvpXuaCa4Bk=&#39;,1);</pre><h4 id=\"randstring\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">2、PHP生成随机字符串</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">当我们需要生成一个随机名字，临时密码等字符串时可以用到下面的函数：</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">function&nbsp;generateRandomString($length&nbsp;=&nbsp;10)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$characters&nbsp;=&nbsp;&#39;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$randomString&nbsp;=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;for&nbsp;($i&nbsp;=&nbsp;0;&nbsp;$i&nbsp;&lt;&nbsp;$length;&nbsp;$i++)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$randomString&nbsp;.=&nbsp;$characters[rand(0,&nbsp;strlen($characters)&nbsp;-&nbsp;1)];&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$randomString;&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">echo&nbsp;generateRandomString(20);</pre><h4 id=\"fileext\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">3、PHP获取文件扩展名（后缀）</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">以下函数可以快速获取文件的扩展名即后缀。</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">function&nbsp;getExtension($filename){&nbsp;\r\n&nbsp;&nbsp;$myext&nbsp;=&nbsp;substr($filename,&nbsp;strrpos($filename,&nbsp;&#39;.&#39;));&nbsp;\r\n&nbsp;&nbsp;return&nbsp;str_replace(&#39;.&#39;,&#39;&#39;,$myext);&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">$filename&nbsp;=&nbsp;&#39;我的文档.doc&#39;;&nbsp;\r\necho&nbsp;getExtension($filename);</pre><h4 id=\"filesize\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">4、PHP获取文件大小并格式化</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">以下使用的函数可以获取文件的大小，并且转换成便于阅读的KB，MB等格式。</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">function&nbsp;formatSize($size)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$sizes&nbsp;=&nbsp;array(&quot;&nbsp;Bytes&quot;,&nbsp;&quot;&nbsp;KB&quot;,&nbsp;&quot;&nbsp;MB&quot;,&nbsp;&quot;&nbsp;GB&quot;,&nbsp;&quot;&nbsp;TB&quot;,&nbsp;&quot;&nbsp;PB&quot;,&nbsp;&quot;&nbsp;EB&quot;,&nbsp;&quot;&nbsp;ZB&quot;,&nbsp;&quot;&nbsp;YB&quot;);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($size&nbsp;==&nbsp;0)&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return(&#39;n/a&#39;);&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;(round($size/pow(1024,&nbsp;($i&nbsp;=&nbsp;floor(log($size,&nbsp;1024)))),&nbsp;2)&nbsp;.&nbsp;$sizes[$i]);&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">$thefile&nbsp;=&nbsp;filesize(&#39;test_file.mp3&#39;);&nbsp;\r\necho&nbsp;formatSize($thefile);</pre><h4 id=\"replace\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">5、PHP替换标签字符</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">有时我们需要将字符串、模板标签替换成指定的内容，可以用到下面的函数：</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">function&nbsp;stringParser($string,$replacer){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;=&nbsp;str_replace(array_keys($replacer),&nbsp;array_values($replacer),$string);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$result;&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">$string&nbsp;=&nbsp;&#39;The&nbsp;{b}anchor&nbsp;text{/b}&nbsp;is&nbsp;the&nbsp;{b}actual&nbsp;word{/b}&nbsp;or&nbsp;words&nbsp;used&nbsp;{br}to&nbsp;describe&nbsp;the&nbsp;link&nbsp;{br}itself&#39;;&nbsp;\r\n$replace_array&nbsp;=&nbsp;array(&#39;{b}&#39;&nbsp;=&gt;&nbsp;&#39;&#39;,&#39;{br}&#39;&nbsp;=&gt;&nbsp;&#39;\r\n&#39;);&nbsp;\r\n\r\necho&nbsp;stringParser($string,$replace_array);</pre><h4 id=\"listfile\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">6、PHP列出目录下的文件名</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">如果你想列出目录下的所有文件，使用以下代码即可：</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">function&nbsp;listDirFiles($DirPath){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if($dir&nbsp;=&nbsp;opendir($DirPath)){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;while(($file&nbsp;=&nbsp;readdir($dir))!==&nbsp;false){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(!is_dir($DirPath.$file))&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;filename:&nbsp;$file\r\n&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">listDirFiles(&#39;home/some_folder/&#39;);</pre><h4 id=\"pageurl\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">7、PHP获取当前页面URL</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">以下函数可以获取当前页面的URL，不管是http还是https。</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">function&nbsp;curPageURL()&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pageURL&nbsp;=&nbsp;&#39;http&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!empty($_SERVER[&#39;HTTPS&#39;]))&nbsp;{$pageURL&nbsp;.=&nbsp;&quot;s&quot;;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$pageURL&nbsp;.=&nbsp;&quot;://&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($_SERVER[&quot;SERVER_PORT&quot;]&nbsp;!=&nbsp;&quot;80&quot;)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$pageURL&nbsp;.=&nbsp;$_SERVER[&quot;SERVER_NAME&quot;].&quot;:&quot;.$_SERVER[&quot;SERVER_PORT&quot;].$_SERVER[&quot;REQUEST_URI&quot;];&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$pageURL&nbsp;.=&nbsp;$_SERVER[&quot;SERVER_NAME&quot;].$_SERVER[&quot;REQUEST_URI&quot;];&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$pageURL;&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">echo&nbsp;curPageURL();</pre><h4 id=\"forcedown\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">8、PHP强制下载文件</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">有时我们不想让浏览器直接打开文件，如PDF文件，而是要直接下载文件，那么以下函数可以强制下载文件，函数中使用了application/octet-stream头类型。</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">function&nbsp;download($filename){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;((isset($filename))&amp;&amp;(file_exists($filename))){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&quot;Content-length:&nbsp;&quot;.filesize($filename));&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Content-Type:&nbsp;application/octet-stream&#39;);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;header(&#39;Content-Disposition:&nbsp;attachment;&nbsp;filename=&quot;&#39;&nbsp;.&nbsp;$filename&nbsp;.&nbsp;&#39;&quot;&#39;);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;readfile(&quot;$filename&quot;);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;Looks&nbsp;like&nbsp;file&nbsp;does&nbsp;not&nbsp;exist!&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs swift\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">download(&#39;/down/test_45f73e852.zip&#39;);</pre><h4 id=\"strlen\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">9、PHP截取字符串长度</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">我们经常会遇到需要截取字符串(含中文汉字)长度的情况，比如标题显示不能超过多少字符，超出的长度用…表示，以下函数可以满足你的需求。</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">/*&nbsp;\r\n&nbsp;Utf-8、gb2312都支持的汉字截取函数&nbsp;\r\n&nbsp;cut_str(字符串,&nbsp;截取长度,&nbsp;开始长度,&nbsp;编码);&nbsp;\r\n&nbsp;编码默认为&nbsp;utf-8&nbsp;\r\n&nbsp;开始长度默认为&nbsp;0&nbsp;\r\n*/&nbsp;function&nbsp;cutStr($string,&nbsp;$sublen,&nbsp;$start&nbsp;=&nbsp;0,&nbsp;$code&nbsp;=&nbsp;&#39;UTF-8&#39;){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if($code&nbsp;==&nbsp;&#39;UTF-8&#39;){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$pa&nbsp;=&nbsp;&quot;/[\\x01-\\x7f]|[\\xc2-\\xdf][\\x80-\\xbf]|\\xe0[\\xa0-\\xbf][\\x80-\\xbf]|[\\xe1-\\xef][\\x80-\\xbf][\\x80-\\xbf]|\\xf0[\\x90-\\xbf][\\x80-\\xbf][\\x80-\\xbf]|[\\xf1-\\xf7][\\x80-\\xbf][\\x80-\\xbf][\\x80-\\xbf]/&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;preg_match_all($pa,&nbsp;$string,&nbsp;$t_string);&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(count($t_string[0])&nbsp;-&nbsp;$start&nbsp;&gt;&nbsp;$sublen)&nbsp;return&nbsp;join(&#39;&#39;,&nbsp;array_slice($t_string[0],&nbsp;$start,&nbsp;$sublen)).&quot;...&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;join(&#39;&#39;,&nbsp;array_slice($t_string[0],&nbsp;$start,&nbsp;$sublen));&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}else{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$start&nbsp;=&nbsp;$start*2;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$sublen&nbsp;=&nbsp;$sublen*2;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$strlen&nbsp;=&nbsp;strlen($string);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmpstr&nbsp;=&nbsp;&#39;&#39;;&nbsp;\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for($i=0;&nbsp;$i=$start&nbsp;&amp;&amp;&nbsp;$i129){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmpstr.=&nbsp;substr($string,&nbsp;$i,&nbsp;2);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}else{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$tmpstr.=&nbsp;substr($string,&nbsp;$i,&nbsp;1);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(ord(substr($string,&nbsp;$i,&nbsp;1))&gt;129)&nbsp;$i++;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if(strlen($tmpstr)&lt;$strlen&nbsp;)&nbsp;$tmpstr.=&nbsp;&quot;...&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$tmpstr;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">$str&nbsp;=&nbsp;&quot;jQuery插件实现的加载图片和页面效果&quot;;&nbsp;\r\necho&nbsp;cutStr($str,16);</pre><h4 id=\"realip\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">10、PHP获取客户端真实IP</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">我们经常要用数据库记录用户的IP，以下代码可以获取客户端真实的IP：</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">//获取用户真实IP&nbsp;function&nbsp;getIp()&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(getenv(&quot;HTTP_CLIENT_IP&quot;)&nbsp;&amp;&amp;&nbsp;strcasecmp(getenv(&quot;HTTP_CLIENT_IP&quot;),&nbsp;&quot;unknown&quot;))&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ip&nbsp;=&nbsp;getenv(&quot;HTTP_CLIENT_IP&quot;);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(getenv(&quot;HTTP_X_FORWARDED_FOR&quot;)&nbsp;&amp;&amp;&nbsp;strcasecmp(getenv(&quot;HTTP_X_FORWARDED_FOR&quot;),&nbsp;&quot;unknown&quot;))&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ip&nbsp;=&nbsp;getenv(&quot;HTTP_X_FORWARDED_FOR&quot;);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(getenv(&quot;REMOTE_ADDR&quot;)&nbsp;&amp;&amp;&nbsp;strcasecmp(getenv(&quot;REMOTE_ADDR&quot;),&nbsp;&quot;unknown&quot;))&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ip&nbsp;=&nbsp;getenv(&quot;REMOTE_ADDR&quot;);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(isset&nbsp;($_SERVER[&#39;REMOTE_ADDR&#39;])&nbsp;&amp;&amp;&nbsp;$_SERVER[&#39;REMOTE_ADDR&#39;]&nbsp;&amp;&amp;&nbsp;strcasecmp($_SERVER[&#39;REMOTE_ADDR&#39;],&nbsp;&quot;unknown&quot;))&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ip&nbsp;=&nbsp;$_SERVER[&#39;REMOTE_ADDR&#39;];&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;else&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$ip&nbsp;=&nbsp;&quot;unknown&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;($ip);&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">echo&nbsp;getIp();</pre><h4 id=\"sql\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">11、PHP防止SQL注入</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">我们在查询数据库时，出于安全考虑，需要过滤一些非法字符防止SQL恶意注入，请看一下函数：</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">function&nbsp;injCheck($sql_str)&nbsp;{&nbsp;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$check&nbsp;=&nbsp;preg_match(&#39;/select|insert|update|delete|\\&#39;|\\/\\*|\\*|\\.\\.\\/|\\.\\/|union|into|load_file|outfile/&#39;,&nbsp;$sql_str);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($check)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;非法字符！！&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;exit;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$sql_str;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">echo&nbsp;injCheck(&#39;1&nbsp;or&nbsp;1=1&#39;);</pre><h4 id=\"message\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">12、PHP页面提示与跳转</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">我们在进行表单操作时，有时为了友好需要提示用户操作结果，并跳转到相关页面，请看以下函数：</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">function&nbsp;message($msgTitle,$message,$jumpUrl){&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;页面提示&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;.$msgTitle.&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;.$message.&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;系统将在&nbsp;3&nbsp;秒后自动跳转,如果不想等待,直接点击&nbsp;这里&nbsp;跳转&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&quot;&quot;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;.=&nbsp;&#39;&#39;;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$str;&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs java\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">message(&#39;操作提示&#39;,&#39;操作成功！&#39;,&#39;http://www.helloweba.com/&#39;);</pre><h4 id=\"timetype\" style=\"margin: 0px 0px 14px; padding: 0px 0px 5px; color: rgb(34, 34, 34); border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(238, 238, 238); font-size: 14px; font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\">13、PHP计算时长</h4><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">我们在处理时间时，需要计算当前时间距离某个时间点的时长，如计算客户端运行时长，通常用hh:mm:ss表示。</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">function&nbsp;changeTimeType($seconds)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($seconds&nbsp;&gt;&nbsp;3600)&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$hours&nbsp;=&nbsp;intval($seconds&nbsp;/&nbsp;3600);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$minutes&nbsp;=&nbsp;$seconds&nbsp;%&nbsp;3600;&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$time&nbsp;=&nbsp;$hours&nbsp;.&nbsp;&quot;:&quot;&nbsp;.&nbsp;gmstrftime(&#39;%M:%S&#39;,&nbsp;$minutes);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$time&nbsp;=&nbsp;gmstrftime(&#39;%H:%M:%S&#39;,&nbsp;$seconds);&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;\r\n&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;$time;&nbsp;\r\n}</pre><p style=\"margin-top: 0px; margin-bottom: 15px; padding: 0px; color: rgb(68, 68, 68); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\">使用方法如下：</p><pre class=\"hljs php\" style=\"margin: 15px auto; padding: 10px 15px; overflow-x: auto; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; white-space: pre-wrap; font-stretch: normal; font-size: 12px; line-height: 20px; font-family: \" courier=\"\" border-width:=\"\" 1px=\"\" border-style:=\"\" border-color:=\"\" background-color:=\"\">$seconds&nbsp;=&nbsp;3712;&nbsp;\r\necho&nbsp;changeTimeType($seconds);</pre><p><br/></p>',1477139037,'  admin',100,0,1,18),(28,'10个技巧优化PHP程序Laravel 5框架','','','','<p><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">性能一直是 Laravel 框架为人诟病的一个点，所以调优 Laravel 程序算是一个必学的技能。 接下来分享一些开发的最佳实践，还有调优技巧，大家有别的建议也欢迎留言讨论。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">性能一直是 Laravel 框架为人诟病的一个点，所以调优 Laravel 程序算是一个必学的技能。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">接下来分享一些开发的最佳实践，还有调优技巧，大家有别的建议也欢迎留言讨论。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">这里是简单的列表：</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">配置信息缓存 artisan config:cache</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">路由缓存 artisan route:cache</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">类映射加载优化 artisan optimize</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">自动加载优化 composer dumpautoload</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">使用 Memcached 来存储会话 config/session.php</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">使用专业缓存驱动器 config/cache.php</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">数据库请求优化</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">为数据集书写缓存逻辑</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">使用即时编译器（JIT），如：HHVM、OpCache</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">前端资源合并 Elixir</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">1. 配置信息缓存</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">使用以下 Artisan 自带命令，把 config 文件夹里所有配置信息合并到一个文件里，减少运行时文件的载入数量：</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">php artisan config:cache</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">上面命令会生成文件 bootstrap/cache/config.php，可以使用以下命令来取消配置信息缓存：</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">php artisan config:clear</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">此命令做的事情就是把 bootstrap/cache/config.php 文件删除。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">注意：配置信息缓存不会随着更新而自动重载，所以，开发时候建议关闭配置信息缓存，一般在生产环境中使用，可以配合 Envoy 任务运行器 一起使用。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">2. 路由缓存</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">路由缓存可以有效的提高路由器的注册效率，在大型应用程序中效果越加明显，可以使用以下命令：</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">php artisan route:cache</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">以上命令会生成 bootstrap/cache/routes.php 文件，需要注意的是，路由缓存不支持路由匿名函数编写逻辑。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">可以使用下面命令清除路由缓存：</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">php artisan route:clear</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">此命令做的事情就是把 bootstrap/cache/routes.php 文件删除。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">注意：路由缓存不会随着更新而自动重载，所以，开发时候建议关闭路由缓存，一般在生产环境中使用，可以配合 Envoy 任务运行器 一起使用。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">3. 类映射加载优化</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">optimize 命令把常用加载的类合并到一个文件里，通过减少文件的加载，来提高运行效率：</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">php artisan optimize --force</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">会生成 bootstrap/cache/compiled.php 和 bootstrap/cache/services.json 两个文件。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">你可以可以通过修改 config/compile.php 文件来添加要合并的类。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">在 production 环境中，参数 --force 不需要指定，文件就会自动生成。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">要清除类映射加载优化，请运行以下命令：</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">php artisan clear-compiled</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">此命令会删除上面 optimize 生成的两个文件。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">注意：此命令要运行在 php artisan config:cache 后，因为 optimize 命令是根据配置信息（如：config/app.php 文件的 providers 数组）来生成文件的。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">4. 自动加载优化</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">此命令不止针对于 Laravel 程序，适用于所有使用 composer 来构建的程序。此命令会把 PSR-0 和 PSR-4 转换为一个类映射表，来提高类的加载速度。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">composer dumpautoload -o</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">注意：php artisan optimize --force 命令里已经做了这个操作。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">5. 使用 Memcached 来存储会话</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">每一个 Laravel 的请求，都会产生会话，修改会话的存储方式能有效提高程序效率，会话的配置信息是 config/session.php，建议修改为 Memcached 或者 Redis 等专业的缓存软件：</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">&#39;driver&#39; =&gt; &#39;memcached&#39;,</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">6. 使用专业缓存驱动器</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">「缓存」是提高应用程序运行效率的法宝之一，默认缓存驱动是 file 文件缓存，建议切换到专业的缓存系统，如 Redis 或者 Memcached，不建议使用数据库缓存。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">&#39;default&#39; =&gt; &#39;redis&#39;,</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">7. 数据库请求优化</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">数据关联模型读取时使用 延迟预加载 和 预加载 ；</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">使用 Laravel Debugbar 或者 Clockwork 留意每一个页面的总数据库请求数量；</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">这里的篇幅只写到与 Laravel 相关的，其他关于数据优化的内容，请自行查阅其他资料。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">8. 为数据集书写缓存逻辑</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">合理的使用 Laravel 提供的缓存层操作，把从数据库里面拿出来的数据集合进行缓存，减少数据库的压力，运行在内存上的专业缓存软件对数据的读取也远远快于数据库。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">$posts = Cache::remember(&#39;index.posts&#39;, $minutes = 30, function()</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">{</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">&nbsp; &nbsp; return Post::with(&#39;comments&#39;, &#39;tags&#39;, &#39;author&#39;, &#39;seo&#39;)-&gt;whereHidden(0)-&gt;get();</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">});</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">remember 甚至连数据关联模型也都一并缓存了，多么方便呀。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">9. 使用即时编译器</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">HHVM 和 OpCache 都能轻轻松松的让你的应用程序在不用做任何修改的情况下，直接提高 50% 或者更高的性能，PHPhub 之前做个一个实验，具体请见：使用 OpCache 提升 PHP 5.5+ 程序性能。</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">10. 前端资源合并</span><br style=\"word-wrap: break-word; color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; white-space: normal; background-color: rgb(255, 255, 255);\"/><span style=\"color: rgb(68, 68, 68); font-family: &quot;Microsoft Yahei&quot;, Tahoma, Helvetica, SimSun, sans-serif; font-size: 14px; line-height: 21px; background-color: rgb(255, 255, 255);\">作为优化的标准，一个页面只应该加载一个 CSS 和 一个 JS 文件，并且文件要能方便走 CDN，需要文件名随着修改而变化。</span></p>',0,'',100,0,1,18),(29,'  PHP常用函数总结(180多个)[持续更新中...] ','  ','  ','','<h2 id=\"数学函数\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">数学函数</h2><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">1.abs(): 求绝对值</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">$abs&nbsp;=&nbsp;abs(-4.2);&nbsp;//4.211</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 数字&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 绝对值数字</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">2.ceil(): 进一法取整</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">echo&nbsp;ceil(9.999);&nbsp;//&nbsp;1011</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 浮点数进一取整</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">3.floor(): 去尾法取整</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;floor(9.999);&nbsp;&nbsp;//&nbsp;911</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 浮点数直接舍去小数部分</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">4.fmod(): 浮点数取余</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$x&nbsp;=&nbsp;5.7;&nbsp;&nbsp;&nbsp;&nbsp;$y&nbsp;=&nbsp;1.3;&nbsp;//&nbsp;两个浮点数,x&gt;y&nbsp;浮点余数\r\n&nbsp;&nbsp;&nbsp;&nbsp;$r&nbsp;=&nbsp;fmod($x,&nbsp;$y);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;$r&nbsp;equals&nbsp;0.5,&nbsp;because&nbsp;4&nbsp;*&nbsp;1.3&nbsp;+&nbsp;0.5&nbsp;=&nbsp;5.712341234</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">5.pow(): 返回数的n次方</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;pow(-1,&nbsp;20);&nbsp;//&nbsp;1&nbsp;基础数|n次方乘方值11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">6.round(): 浮点数四舍五入</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;round(1.95583,&nbsp;2);&nbsp;//&nbsp;1.96,&nbsp;一个数值|保留小数点后多少位,默认为0&nbsp;舍入后的结果11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">7.sqrt(): 求平方根</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;sqrt(9);&nbsp;//3&nbsp;被开方的数平方根11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">8.max(): 求最大值</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;max(1,&nbsp;3,&nbsp;5,&nbsp;6,&nbsp;7);&nbsp;//&nbsp;711</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">多个数字或数组&nbsp;<br style=\"box-sizing: border-box;\"/>返回其中的最大值</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;max(array(2,&nbsp;4,&nbsp;5));&nbsp;//&nbsp;511</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">9.min(): 求最小值</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入</em>: 多个数字或数组</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输出</em>: 返回其中的最小值</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">10.mt_rand(): 更好的随机数</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入</em>: 最小|最大,&nbsp;<br style=\"box-sizing: border-box;\"/><em style=\"box-sizing: border-box;\">输出</em>: 随机数随机返回范围内的值</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;mt_rand(0,9);//n11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">11.rand(): 随机数&nbsp;<br style=\"box-sizing: border-box;\"/><em style=\"box-sizing: border-box;\">输入</em>: 最小|最大,&nbsp;<br style=\"box-sizing: border-box;\"/><em style=\"box-sizing: border-box;\">输出</em>: 随机数随机返回范围内的值</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">12.pi(): 获取圆周率值</p><h2 id=\"字符串函数\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t2\"></a>字符串函数</h2><h3 id=\"去空格或或其他字符\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t3\"></a><strong style=\"box-sizing: border-box;\">去空格或或其他字符:</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">13.trim(): 删除字符串两端的空格或其他预定义字符</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;=&nbsp;&quot;\\r\\nHello&nbsp;World!\\r\\n&quot;;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;trim($str);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 目标字符串&nbsp;<br style=\"box-sizing: border-box;\"/>返回值: 清除后的字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">14.rtrim(): 删除字符串右边的空格或其他预定义字符</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;=&nbsp;&quot;Hello&nbsp;World!\\n\\n&quot;;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;rtrim($str);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">15.chop(): rtrim()的别名</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">16.ltrim(): 删除字符串左边的空格或其他预定义字符</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;=&nbsp;&quot;\\r\\nHello&nbsp;World!&quot;;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;ltrim($str);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">17.dirname(): 返回路径中的目录部分</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;dirname(&quot;c:/testweb/home.php&quot;);&nbsp;&nbsp;//c:/testweb11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 一个包含路径的字符串&nbsp;<br style=\"box-sizing: border-box;\"/>返回值: 返回文件路径的目录部分</p><h3 id=\"字符串生成与转化\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t4\"></a><strong style=\"box-sizing: border-box;\">字符串生成与转化：</strong>　　</h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">18.str_pad(): 把字符串填充为指定的长度</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;=&nbsp;&quot;Hello&nbsp;World&quot;;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;str_pad($str,20,&quot;.&quot;);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入</em>:&nbsp;<br style=\"box-sizing: border-box;\"/>要填充的字符串|新字符串的长度|供填充使用的字符串, 默认是空白</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输出</em>:&nbsp;<br style=\"box-sizing: border-box;\"/>完成后的字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">19.str_repeat(): 重复使用指定字符串</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;str_repeat(&quot;.&quot;,13);&nbsp;//&nbsp;要重复的字符串|字符串将被重复的次数13个点11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">20.str_split(): 把字符串分割到数组中</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">print_r(str_split(&quot;Hello&quot;));11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入</em>: 要分割的字符串|每个数组元素的长度，默认1</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输出</em>: 拆分后的字符串数组</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">21.strrev(): 反转字符串</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strrev(&quot;Hello&nbsp;World!&quot;);&nbsp;//&nbsp;!dlroW&nbsp;olleH11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 目标字符串颠倒顺序后的字符串&nbsp;<br style=\"box-sizing: border-box;\"/><br style=\"box-sizing: border-box;\"/></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">22.wordwrap(): 按照指定长度对字符串进行折行处理</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;=&nbsp;&quot;An&nbsp;example&nbsp;on&nbsp;a&nbsp;long&nbsp;word&nbsp;is:&nbsp;Supercalifragulistic&quot;;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;wordwrap($str,15);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 目标字符串|最大宽数</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 折行后的新字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">23.str_shuffle(): 随机地打乱字符串中所有字符</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;str_shuffle(&quot;Hello&nbsp;World&quot;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 目标字符串顺序&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 打乱后的字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">24.parse_str(): 将字符串解析成变量</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;parse_str(&quot;id=23&amp;name=John%20Adams&quot;,&nbsp;$myArray);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($myArray);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入</em>: 要解析的字符串|存储变量的数组名称</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输出</em>:</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">Array(\r\n[id]&nbsp;=&gt;&nbsp;23[name]&nbsp;=&gt;&nbsp;John&nbsp;Adams)123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">25.number_format(): 通过千位分组来格式化数字&nbsp;<br style=\"box-sizing: border-box;\"/><em style=\"box-sizing: border-box;\">输入:</em>&nbsp;<br style=\"box-sizing: border-box;\"/>要格式化的数字|规定多少个小数|规定用作小数点的字符串|规定用作千位分隔符的字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输出:</em></p><pre style=\"white-space: pre-wrap; word-wrap: break-word; box-sizing: border-box; margin-top: 0px; margin-bottom: 10.5px; font-family: \" source=\"\" code=\"\" padding:=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">1,000,000\r\n1,000,000.00\r\n1.000.000,00</pre><h3 id=\"大小写转换\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t5\"></a><strong style=\"box-sizing: border-box;\">大小写转换：</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">26.strtolower(): 字符串转为小写</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strtolower(&quot;Hello&nbsp;WORLD!&quot;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">目标字符串&nbsp;<br style=\"box-sizing: border-box;\"/>小写字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">27.strtoupper(): 字符串转为大写</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strtoupper(&quot;Hello&nbsp;WORLD!&quot;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 大写字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">28.ucfirst(): 字符串首字母大写</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;ucfirst(&quot;hello&nbsp;world&quot;);&nbsp;//　Hello&nbsp;world11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">29.ucwords(): 字符串每个单词首字符转为大写</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;ucwords(&quot;hello&nbsp;world&quot;);&nbsp;//　Hello&nbsp;World11</pre><h3 id=\"html标签关联\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t6\"></a><strong style=\"box-sizing: border-box;\">html标签关联:</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">30.htmlentities(): 把字符转为HTML实体</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;=&nbsp;&quot;John&nbsp;&amp;&nbsp;&#39;Adams&#39;&quot;;echo&nbsp;htmlentities($str,&nbsp;ENT_COMPAT);&nbsp;//&nbsp;John&nbsp;&amp;&nbsp;&#39;Adams&#39;1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">31.htmlspecialchars(): 预定义字符转html编码</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">32.nl2br(): \\n转义为<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\"><br/></code>标签</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;nl2br(&quot;One&nbsp;line.\\nAnother&nbsp;line.&quot;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 处理后的字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">33.strip_tags(): 剥去 HTML、XML 以及&nbsp;<a href=\"http://lib.csdn.net/base/php\" class=\"replace_word\" title=\"PHP知识库\" target=\"_blank\" style=\"text-decoration: none; box-sizing: border-box; color: rgb(223, 52, 52); font-weight: bold;\">PHP</a>&nbsp;的标签</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strip_tags(&quot;Hello&nbsp;world!&quot;);&nbsp;　11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">34.addcslashes():在指定的字符前添加反斜线转义字符串中字符</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;=&nbsp;&quot;Hello,&nbsp;my&nbsp;name&nbsp;is&nbsp;John&nbsp;Adams.&quot;;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$str;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;addcslashes($str,&#39;m&#39;);123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入:</em>&nbsp;<br style=\"box-sizing: border-box;\"/>目标字符串|指定的特定字符或字符范围</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">35.stripcslashes(): 删除由addcslashes()添加的反斜线</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;stripcslashes(&quot;Hello,&nbsp;\\my&nbsp;na\\me&nbsp;is&nbsp;Kai&nbsp;Ji\\m.&quot;);&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;目标字符串&nbsp;Hello,&nbsp;my&nbsp;name&nbsp;is&nbsp;Kai&nbsp;Jim.1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">36.addslashes(): 指定预定义字符前添加反斜线</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;=&nbsp;&quot;Who&#39;s&nbsp;John&nbsp;Adams?&quot;;echo&nbsp;addslashes($str);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 把目标串中的’ ” \\和null进行转义处理</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">37.stripslashes(): 删除由addslashes()添加的转义字符</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;stripslashes(&quot;Who\\&#39;s&nbsp;John&nbsp;Adams?&quot;);&nbsp;//&nbsp;清除转义符号Who&#39;s&nbsp;John&nbsp;Adams?11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">38.quotemeta(): 在字符串中某些预定义的字符前添加反斜线</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$str&nbsp;=&nbsp;&quot;Hello&nbsp;world.&nbsp;(can&nbsp;you&nbsp;hear&nbsp;me?)&quot;;echo&nbsp;quotemeta($str);&nbsp;&nbsp;&nbsp;&nbsp;//　Hello&nbsp;world\\.&nbsp;\\(can&nbsp;you&nbsp;hear&nbsp;me\\?\\)123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">39.chr(): 从指定的 ASCII 值返回字符</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;chr(052);&nbsp;//&nbsp;ASCII&nbsp;值返回对应的字符11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">40.ord(): 返回字符串第一个字符的ASCII值</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;ord(&quot;hello&quot;);&nbsp;字符串第一个字符的&nbsp;ASCII&nbsp;值11</pre><h3 id=\"字符串比较\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t7\"></a><strong style=\"box-sizing: border-box;\">字符串比较：</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">41.strcasecmp(): 不区分大小写比较两字符串</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strcasecmp(&quot;Hello&nbsp;world!&quot;,&quot;HELLO&nbsp;WORLD!&quot;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入:</em>&nbsp;<br style=\"box-sizing: border-box;\"/>两个目标字符串&nbsp;<br style=\"box-sizing: border-box;\"/><em style=\"box-sizing: border-box;\">输出:</em>&nbsp;<br style=\"box-sizing: border-box;\"/>大1|等0|小 -1</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">42.strcmp(): 区分大小写比较两字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">43.strncmp(): 比较字符串前n个字符,区分大小写</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int strncmp ( string $str1 , string $str2 , int $len)</code>&nbsp;<br style=\"box-sizing: border-box;\"/>　&nbsp;<br style=\"box-sizing: border-box;\"/>44.strncasecmp(): 比较字符串前n个字符,不区分大小写</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int strncasecmp ( string $str1 , string $str2 , int $len )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">45.strnatcmp(): 自然顺序法比较字符串长度,区分大小写</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int strnatcmp ( string $str1 , string $str2 )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入:</em>&nbsp;<br style=\"box-sizing: border-box;\"/>目标字符串　</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">46.strnatcasecmp(): 自然顺序法比较字符串长度, 不区分大小写</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int strnatcasecmp ( string $str1 , string $str2 )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">字符串切割与拼接：</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">47.chunk_split()：将字符串分成小块</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">str chunk_split(str $body[,int $len[,str $end]])</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入:</em>&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$body</code>目标字串,&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$len</code>长度,&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$str</code>插入结束符&nbsp;<br style=\"box-sizing: border-box;\"/><em style=\"box-sizing: border-box;\">输出:</em>&nbsp;<br style=\"box-sizing: border-box;\"/>分割后的字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">48.strtok(): 切开字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">str strtok(str $str,str $token)</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">目标字符串<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$str</code>，以<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$token</code>为标志切割返回切割后的字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">49.explode(): 使用一个字符串为标志分割另一个字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">array explode(str $sep,str $str[,int $limit])</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入:</em>&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$sep</code>为分割符,<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$str</code>目标字符串,<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$limit</code>返回数组最多包含元素数&nbsp;<br style=\"box-sizing: border-box;\"/><em style=\"box-sizing: border-box;\">输出:</em>&nbsp;字符串被分割后形成的数组</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">50.implode(): 同join,将数组值用预订字符连接成字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string implode ( string $glue , array $pieces )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$glue</code>默认, 用”则直接相连</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">51.substr(): 截取字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string substr ( string $string , int $start [, int $length ] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><strong style=\"box-sizing: border-box;\">字符串查找替换：</strong></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">52.str_replace(): 字符串替换操作,区分大小写</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">mix str_replace(mix $search,mix $replace, mix $subject[,int &amp;$num])</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入</em>:&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$search</code>查找的字符串,<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$replace</code>替换的字符串,<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$subject</code>被查找字串,&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">&amp;$num</code>&nbsp;<br style=\"box-sizing: border-box;\"/><em style=\"box-sizing: border-box;\">输出</em>: 返回替换后的结果</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">53.str_ireplace() 字符串替换操作,不区分大小写</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">mix str_ireplace ( mix $search , mix $replace , mix $subject [, int &amp;$count ] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入</em>:&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$search</code>查找的字符串,<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$replace</code>替换的字符串,<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$subject</code>被查找字串,<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">&amp;$num</code>&nbsp;<br style=\"box-sizing: border-box;\"/><em style=\"box-sizing: border-box;\">输出</em>: 返回替换后的结果</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">54.substr_count(): 统计一个字符串,在另一个字符串中出现次数</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int substr_count ( string $haystack , string $needle[, int $offset = 0 [, int $length ]] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">55.substr_replace(): 替换字符串中某串为另一个字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">mixed substr_replace ( mixed $string, string $replacement,int $start [, int $length ] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">56.similar_text(): 返回两字符串相同字符的数量</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int similar_text(str $str1,str $str2)</code>&nbsp;<br style=\"box-sizing: border-box;\"/><em style=\"box-sizing: border-box;\">输入</em>:&nbsp;<br style=\"box-sizing: border-box;\"/>两个比较的字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输出</em>:&nbsp;<br style=\"box-sizing: border-box;\"/>整形,相同字符数量</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">57.strrchr(): 返回一个字符串在另一个字符串中最后一次出现位置开始到末尾的字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string strrchr ( string $haystack , mixed $needle )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">58.strstr(): 返回一个字符串在另一个字符串中开始位置到结束的字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string strstr ( string $str, string $needle , bool $before_needle )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>　　&nbsp;<br style=\"box-sizing: border-box;\"/>59.strchr(): strstr()的别名,返回一个字符串在另一个字符串中首次出现的位置开始到末尾的字符串</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string strstr ( string $haystack , mixed $needle [, bool $before_needle = false ] )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>　　&nbsp;<br style=\"box-sizing: border-box;\"/>60.stristr(): 返回一个字符串在另一个字符串中开始位置到结束的字符串，不区分大小写</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string stristr ( string $haystack , mixed $needle [, bool $before_needle = false ] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">61.strtr(): 转换字符串中的某些字符</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string strtr ( string $str , string $from , string $to )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">62.strpos(): 寻找字符串中某字符最先出现的位置</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">63.stripos(): 寻找字符串中某字符最先出现的位置,不区分大小写&nbsp;<br style=\"box-sizing: border-box;\"/>调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int stripos ( string $haystack , string $needle [, int $offset ] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">64.strrpos(): 寻找某字符串中某字符最后出现的位置</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int strrpos ( string $haystack , string $needle [, int $offset = 0 ] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">65.strripos(): 寻找某字符串中某字符最后出现的位置,不区分大小写</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int strripos ( string $haystack , string $needle [, int $offset ] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">66.strspn(): 返回字符串中首次符合mask的子字符串长度&nbsp;<br style=\"box-sizing: border-box;\"/>调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int strspn ( string $str1 , string $str2 [, int $start [, int $length ]] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">67.strcspn(): 返回字符串中不符合mask的字符串的长度</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int strcspn ( string $str1 , string $str2 [, int $start [, int $length ]] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><em style=\"box-sizing: border-box;\">输入</em>:&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$str1</code>被查询,<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$str2</code>查询字符串，<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$start</code>开始查询的字符，<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$length</code>是查询长度&nbsp;<br style=\"box-sizing: border-box;\"/><em style=\"box-sizing: border-box;\">输出</em>:&nbsp;<br style=\"box-sizing: border-box;\"/>返回从开始到第几个字符</p><h3 id=\"字符串统计\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t8\"></a><strong style=\"box-sizing: border-box;\">字符串统计：</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">68.str_word_count(): 统计字符串含有的单词数</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">mix str_word_count(str $str,[])</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 目标字符串&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 统计处的数量</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">69.strlen(): 统计字符串长度&nbsp;<br style=\"box-sizing: border-box;\"/>函数原型:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int strlen(str $str)</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 目标字符串&nbsp;<br style=\"box-sizing: border-box;\"/>输出:整型长度</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">70.count_chars(): 统计字符串中所有字母出现次数(0..255)&nbsp;<br style=\"box-sizing: border-box;\"/>调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">mixed count_chars ( string $string [, int $mode ] )</code></p><h3 id=\"字符串编码\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t9\"></a><strong style=\"box-sizing: border-box;\">字符串编码：</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">71.md5(): 字符串md5编码</p><pre style=\"white-space: pre-wrap; word-wrap: break-word; box-sizing: border-box; margin-top: 0px; margin-bottom: 10.5px; font-family: \" source=\"\" code=\"\" padding:=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">$str&nbsp;=&nbsp;&quot;Hello&quot;;</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">echo md5($str);</p><h2 id=\"数组函数\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t10\"></a>数组函数</h2><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">数组创建：</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">72.array(): 生成一个数组</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(&quot;Dog&quot;,&quot;Cat&quot;,&quot;Horse&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($a);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">数组值或,键=&gt;值一个数组型变量</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">73.array_combine(): 生成一个数组,用一个数组的值&nbsp;<br style=\"box-sizing: border-box;\"/>作为键名,另一个数组值作为值</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a1=array(&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;);&nbsp;&nbsp;&nbsp;&nbsp;$a2=array(&quot;Cat&quot;,&quot;Dog&quot;,&quot;Horse&quot;,&quot;Cow&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r(array_combine($a1,$a2));123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入参数:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$a1</code>为提供键,<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$a2</code>提供值&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 合成后的数组</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">74.range(): 创建并返回一个包含指定范围的元素的数组。</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$number&nbsp;=&nbsp;range(0,50,10);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r&nbsp;($number);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 0是最小值,50是最大值,10是步长&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 合成后的数组</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">75.compact(): 创建一个由参数所带变量组成的数组</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$firstname&nbsp;=&nbsp;&quot;Peter&quot;;&nbsp;&nbsp;&nbsp;&nbsp;$lastname&nbsp;=&nbsp;&quot;Griffin&quot;;&nbsp;&nbsp;&nbsp;&nbsp;$age&nbsp;=&nbsp;&quot;38&quot;;&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;=&nbsp;compact(&quot;firstname&quot;,&nbsp;&quot;lastname&quot;,&nbsp;&nbsp;&quot;age&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($result);1234512345</pre><h3 id=\"变量或数组\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t11\"></a>变量或数组</h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">返回由变量名为键,变量值为值的数组,变量也可以为多维数组.会递归处理&nbsp;<br style=\"box-sizing: border-box;\"/>76.array_fill(): 用给定的填充(值生成)数组</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array_fill(2,3,&quot;Dog&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($a);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">2是键,3是填充的数量,’Dog’为填充内容返回完成的数组</p><h3 id=\"数组合并和拆分\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t12\"></a><strong style=\"box-sizing: border-box;\">数组合并和拆分：</strong>　　　　</h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">77.array_chunk(): 把一个数组分割为新的数组块</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(&quot;a&quot;=&gt;&quot;Cat&quot;,&quot;b&quot;=&gt;&quot;Dog&quot;,&quot;c&quot;=&gt;&quot;Horse&quot;,&quot;d&quot;=&gt;&quot;Cow&quot;);\r\nprint_r(array_chunk($a,2));1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">一个数组分割后的多维数组，规定每个新数组包含2个元素</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">78.array_merge(): 把两个或多个数组合并为一个数组。</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a1=array(&quot;a&quot;=&gt;&quot;Horse&quot;,&quot;b&quot;=&gt;&quot;Dog&quot;);&nbsp;&nbsp;&nbsp;&nbsp;$a2=array(&quot;c&quot;=&gt;&quot;Cow&quot;,&quot;b&quot;=&gt;&quot;Cat&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r(array_merge($a1,$a2));123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 两个数组&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 返回完成后的数组</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">79.array_slice(): 在数组中根据条件取出一段值，并返回。</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(0=&gt;&quot;Dog&quot;,1=&gt;&quot;Cat&quot;,2=&gt;&quot;Horse&quot;,3=&gt;&quot;Bird&quot;);\r\nprint_r(array_slice($a,1,2));1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 一个数组&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 1为从’Cat’开始，2为返回两个元素</p><h3 id=\"数组比较\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t13\"></a>数组比较：</h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">80.array_diff(): 返回两个数组的差集数组</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a1=array(0=&gt;&quot;Cat&quot;,1=&gt;&quot;Dog&quot;,2=&gt;&quot;Horse&quot;);$a2=array(3=&gt;&quot;Horse&quot;,4=&gt;&quot;Dog&quot;,5=&gt;&quot;Fish&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r(array_diff($a1,$a2));&nbsp;//返回&#39;Cat&#39;123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 两个或多个数组&nbsp;<br style=\"box-sizing: border-box;\"/>输出:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$a1</code>与<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$a2</code>的不同之处</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">81.array_intersect(): 返回两个或多个数组的交集数组&nbsp;<br style=\"box-sizing: border-box;\"/>输出:&nbsp;<br style=\"box-sizing: border-box;\"/>返回’Dog’和’Horse’,&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$a1</code>与<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$a2</code>的相同之处</p><h3 id=\"数组查找替换\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t14\"></a>数组查找替换： 　　　　</h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">82.array_search(): 在数组中查找一个值，返回一个键，没有返回返回假</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(&quot;a&quot;=&gt;&quot;Dog&quot;,&quot;b&quot;=&gt;&quot;Cat&quot;,&quot;c&quot;=&gt;&quot;Horse&quot;);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;array_search(&quot;Dog&quot;,$a);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 一个数组&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 成功返回键名,失败返回false</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">83.array_splice(): 把数组中一部分删除用其他值替代</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a1=array(0=&gt;&quot;Dog&quot;,1=&gt;&quot;Cat&quot;,2=&gt;&quot;Horse&quot;,3=&gt;&quot;Bird&quot;);&nbsp;&nbsp;&nbsp;&nbsp;$a2=array(0=&gt;&quot;Tiger&quot;,1=&gt;&quot;Lion&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;array_splice($a1,0,2,$a2);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($a1);12341234</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 一个或多个数组&nbsp;<br style=\"box-sizing: border-box;\"/>输出:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$a1</code>被移除的部分由<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$a2</code>补全</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">84.array_sum(): 返回数组中所有值的总和</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(0=&gt;&quot;5&quot;,1=&gt;&quot;15&quot;,2=&gt;&quot;25&quot;);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;array_sum($a);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 一个数组&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 返回和</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">85.in_array(): 在数组中搜索给定的值,区分大小写</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$people&nbsp;=&nbsp;array(&quot;Peter&quot;,&nbsp;&quot;Joe&quot;,&nbsp;&quot;Glenn&quot;,&nbsp;&quot;Cleveland&quot;);&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(in_array(&quot;Glenn&quot;,$people)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;Match&nbsp;found&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;else{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;Match&nbsp;not&nbsp;found&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}12345671234567</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 需要搜索的值|数组&nbsp;<br style=\"box-sizing: border-box;\"/>输出: true/false</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">86.array_key_exists(): 判断某个数组中是否存在指定的 key</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 需要搜索的键名|数组</p><h3 id=\"数组引用操作\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t15\"></a>数组引用操作：</h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">87.key(): 返回数组内部指针当前指向元素的键名&nbsp;<br style=\"box-sizing: border-box;\"/>　　　&nbsp;<br style=\"box-sizing: border-box;\"/>88.current(): 返回数组中的当前元素(单元).&nbsp;<br style=\"box-sizing: border-box;\"/>　　　&nbsp;<br style=\"box-sizing: border-box;\"/>89.next(): 把指向当前元素的指针移动到下一个元素的位置,并返回当前元素的值&nbsp;<br style=\"box-sizing: border-box;\"/>　　　&nbsp;<br style=\"box-sizing: border-box;\"/>90.prev(): 把指向当前元素的指针移动到上一个元素的位置,并返回当前元素的值&nbsp;<br style=\"box-sizing: border-box;\"/>　　　&nbsp;<br style=\"box-sizing: border-box;\"/>91.end(): 将数组内部指针指向最后一个元素，并返回该元素的值(如果成功)&nbsp;<br style=\"box-sizing: border-box;\"/>　　　&nbsp;<br style=\"box-sizing: border-box;\"/>92.reset(): 把数组的内部指针指向第一个元素，并返回这个元素的值&nbsp;<br style=\"box-sizing: border-box;\"/>　　　&nbsp;<br style=\"box-sizing: border-box;\"/>93.list(): 用数组中的元素为一组变量赋值</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$my_array=array(&quot;Dog&quot;,&quot;Cat&quot;,&quot;Horse&quot;);&nbsp;&nbsp;&nbsp;&nbsp;list($a,&nbsp;$b,&nbsp;$c)&nbsp;=&nbsp;$my_array;1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$a</code>,&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$b</code>,&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$c</code>为需要赋值的变量&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 变量分别匹配数组中的值</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">94.array_shift(): 删除数组中的第一个元素，并返回被删除元素的值</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(&quot;a&quot;=&gt;&quot;Dog&quot;,&quot;b&quot;=&gt;&quot;Cat&quot;,&quot;c&quot;=&gt;&quot;Horse&quot;);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;array_shift($a);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r&nbsp;($a);123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">95.array_unshift(): 在数组开头插入一个或多个元素</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(&quot;a&quot;=&gt;&quot;Cat&quot;,&quot;b&quot;=&gt;&quot;Dog&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;array_unshift($a,&quot;Horse&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($a);123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">96.array_push(): 向数组最后压入一个或多个元素</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">$a=array(&quot;Dog&quot;,&quot;Cat&quot;);\r\narray_push($a,&quot;Horse&quot;,&quot;Bird&quot;);\r\nprint_r($a);123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 目标数组|需要压入的值&nbsp;<br style=\"box-sizing: border-box;\"/>返回值: 返回新的数组</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">97.array_pop(): 取得（删除）数组中的最后一个元素</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(&quot;Dog&quot;,&quot;Cat&quot;,&quot;Horse&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;array_pop($a);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($a);123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$a</code>为目标数组&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 返回数组剩余元素</p><h3 id=\"数组键值操作\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t16\"></a><strong style=\"box-sizing: border-box;\">数组键值操作:</strong>&nbsp;　　　　</h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">98.shuffle(): 将数组打乱,保留键名</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$my_array&nbsp;=&nbsp;array(&quot;a&quot;&nbsp;=&gt;&nbsp;&quot;Dog&quot;,&nbsp;&quot;b&quot;&nbsp;=&gt;&nbsp;&quot;Cat&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;shuffle($my_array);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($my_array);123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 一个或多个数组&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 顺序打乱后的数组</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">99.count(): 计算数组中的单元数目或对象中的属性个数</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$people&nbsp;=&nbsp;array(&quot;Peter&quot;,&nbsp;&quot;Joe&quot;,&nbsp;&quot;Glenn&quot;,&nbsp;&nbsp;&nbsp;&nbsp;&quot;Cleveland&quot;);&nbsp;&nbsp;&nbsp;&nbsp;$result&nbsp;=&nbsp;count($people);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$result;12341234</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 数组&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 输出元素个数</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">100.array_flip(): 返回一个键值反转后的数组</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(0=&gt;&quot;Dog&quot;,1=&gt;&quot;Cat&quot;,2=&gt;&quot;Horse&quot;);\r\nprint_r(array_flip($a));1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 返回完成后的数组&nbsp;<br style=\"box-sizing: border-box;\"/>101.array_keys(): 返回数组所有的键,组成一个数组</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(&quot;a&quot;=&gt;&quot;Horse&quot;,&quot;b&quot;=&gt;&quot;Cat&quot;,&quot;c&quot;=&gt;&quot;Dog&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r(array_keys($a));1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 返回由键名组成的数组</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">102.array_values(): 返回数组中所有值，组成一个数组</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 返回由键值组成的数组</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">103.array_reverse(): 返回一个元素顺序相反的数组&nbsp;<br style=\"box-sizing: border-box;\"/>元素顺序相反的一个数组，键名和键值依然匹配</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">104.array_count_values(): 统计数组中所有的值出现的次数</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(&quot;Cat&quot;,&quot;Dog&quot;,&quot;Horse&quot;,&quot;Dog&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r(array_count_values($a));1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 返回数组原键值为新键名，次数为新键值</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">105.array_rand(): 从数组中随机抽取一个或多个元素,注意是键名!!!</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(&quot;a&quot;=&gt;&quot;Dog&quot;,&quot;b&quot;=&gt;&quot;Cat&quot;,&quot;c&quot;=&gt;&quot;Horse&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r(array_rand($a,1));1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$a</code>为目标数组, 1为抽取第几个元素的键名返回第1个元素的键名b</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">106.each(): 返回数组中当前的键／值对并将数组指针向前移动一步&nbsp;<br style=\"box-sizing: border-box;\"/>调用<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">array each ( array &amp;$array )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">在执行 each() 之后，数组指针将停留在数组中的下一个单元或者当碰到数组结尾时停留在最后一个单元。如果要再用 each 遍历数组，必须使用 reset()。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">返回值:&nbsp;<br style=\"box-sizing: border-box;\"/>数组中当前指针位置的键／值对并向前移动数组指针。键值对被返回为四个单元的数组，键名为0，1，key和 value。单元 0 和 key 包含有数组单元的键名，1 和 value 包含有数据。&nbsp;<br style=\"box-sizing: border-box;\"/>如果内部指针越过了数组的末端，则 each() 返回 FALSE。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">107.array_unique(): 删除重复值，返回剩余数组</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$a=array(&quot;a&quot;=&gt;&quot;Cat&quot;,&quot;b&quot;=&gt;&quot;Dog&quot;,&quot;c&quot;=&gt;&quot;Cat&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r(array_unique($a));1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入: 数组&nbsp;<br style=\"box-sizing: border-box;\"/>输入: 返回无重复值数组，键名不变</p><h3 id=\"数组排序\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t17\"></a><strong style=\"box-sizing: border-box;\">数组排序:</strong>&nbsp;　　</h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">108.sort(): 按升序对给定数组的值排序,不保留键名</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$my_array&nbsp;=&nbsp;array(&quot;a&quot;&nbsp;=&gt;&nbsp;&quot;Dog&quot;,&nbsp;&quot;b&quot;&nbsp;=&gt;&nbsp;&quot;Cat&quot;,&nbsp;&quot;c&quot;&nbsp;=&gt;&nbsp;&quot;Horse&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;sort($my_array);\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r($my_array);123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: true/false&nbsp;<br style=\"box-sizing: border-box;\"/>　&nbsp;<br style=\"box-sizing: border-box;\"/>109.rsort(): 对数组逆向排序,不保留键名　　&nbsp;<br style=\"box-sizing: border-box;\"/>110.asort(): 对数组排序,保持索引关系　　　&nbsp;<br style=\"box-sizing: border-box;\"/>111.arsort(): 对数组逆向排序,保持索引关　&nbsp;<br style=\"box-sizing: border-box;\"/>112.ksort(): 系按键名对数组排序　&nbsp;<br style=\"box-sizing: border-box;\"/>113.krsort(): 将数组按照键逆向排序&nbsp;<br style=\"box-sizing: border-box;\"/>114.natsort(): 用自然顺序<a href=\"http://lib.csdn.net/base/datastructure\" class=\"replace_word\" title=\"算法与数据结构知识库\" target=\"_blank\" style=\"text-decoration: none; box-sizing: border-box; color: rgb(223, 52, 52); font-weight: bold;\">算法</a>对数组中的元素排序 　　　&nbsp;<br style=\"box-sizing: border-box;\"/>115.natcasesort(): 自然排序,不区分大小写　　　&nbsp;<br style=\"box-sizing: border-box;\"/>　　</p><h2 id=\"文件系统函数\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t18\"></a>文件系统函数</h2><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">116.fopen(): 打开文件或者 URL</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$handle&nbsp;=&nbsp;fopen(&quot;ftp://user:password@example.com/somefile.txt&quot;,&nbsp;&quot;w&quot;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">resource fopen ( string filename, string mode [, bool use_include_path [, resource zcontext]] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">返回值: 如果打开失败，本函数返回 FALSE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">117.fclose(): 关闭一个已打开的文件指针</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$handle&nbsp;=&nbsp;fopen(&#39;somefile.txt&#39;,&nbsp;&#39;r&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;fclose($handle);\r\n&nbsp;&nbsp;&nbsp;&nbsp;bool&nbsp;fclose(resource&nbsp;handle)123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 如果成功则返回 TRUE，失败则返回 FALSE</p><h3 id=\"文件属性\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t19\"></a><strong style=\"box-sizing: border-box;\">文件属性</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">118.file_exists(): 检查文件或目录是否存在</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$filename&nbsp;=&nbsp;&#39;/path/to/foo.txt&#39;;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(file_exists($filename))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;exists&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;does&nbsp;not&nbsp;exist&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}123456123456</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool file_exists ( string filename )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输入: 指定的文件或目录&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 存在则返回 TRUE，否则返回 FALSE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">119.filesize(): 取得文件大小</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$filename&nbsp;=&nbsp;&#39;somefile.txt&#39;;echo&nbsp;$filename&nbsp;.&nbsp;&#39;:&nbsp;&#39;&nbsp;.&nbsp;filesize($filename)&nbsp;.&#39;bytes&#39;;1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int filesize ( string $filename )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 返回文件大小的字节数，如果出错返回 FALSE 并生成一条 E_WARNING 级的错误</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">120.is_readable(): 判断给定文件是否可读</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$filename&nbsp;=&nbsp;&#39;test.txt&#39;;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(is_readable($filename))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;可读&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;不可读&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}123456123456</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool is_readable ( string $filename )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 如果由 filename指定的文件或目录存在并且可读则返回 TRUE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">121.is_writable(): 判断给定文件是否可写</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$filename&nbsp;=&nbsp;&#39;test.txt&#39;;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(is_writable($filename))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;可写&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;不可写&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}123456123456</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用: bool is_writable ( string $filename )&nbsp;<br style=\"box-sizing: border-box;\"/>filename 参数 可以是一个允许进行是否可写检查的目录名</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出:&nbsp;<br style=\"box-sizing: border-box;\"/>如果文件存在并且可写则返回 TRUE。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">122.is_executable(): 判断给定文件是否可执行</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$file&nbsp;=&nbsp;&#39;setup.exe&#39;;&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(is_executable($file))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;可执行&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;else&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;不可执行&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}123456123456</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool is_executable ( string $filename )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 如果文件存在且可执行则返回 TRUE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">123.filectime(): 获取文件的创建时间</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$filename&nbsp;=&nbsp;&#39;somefile.txt&#39;;echo&nbsp;filectime($filename);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int filectime ( string $filename )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 时间以 Unix 时间戳的方式返回，如果出错则返回FALSE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">124.filemtime(): 获取文件的修改时间</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$filename&nbsp;=&nbsp;&#39;somefile.txt&#39;;echo&nbsp;filemtime($filename);\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;filemtime&nbsp;(&nbsp;string&nbsp;$filename&nbsp;)123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 返回文件上次被修改的时间，出错时返回 FALSE。时间以 Unix时间戳的方式返回</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">125.fileatime(): 获取文件的上次访问时间</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$filename&nbsp;=&nbsp;&#39;somefile.txt&#39;;echo&nbsp;fileatime($filename);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int fileatime (string $filename)</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 返回文件上次被访问的时间, 如果出错则返回FALSE. 时间以Unix时间戳的方式返回.</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">126.stat(): 获取文件大部分属性值</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$filename&nbsp;=&nbsp;&#39;somefile.txt&#39;;\r\nvar_dump(fileatime($filename));1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用: array stat (string $filename&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 返回由 filename 指定的文件的统计信息</p><h3 id=\"文件操作\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t20\"></a><strong style=\"box-sizing: border-box;\">文件操作</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">127.fwrite(): 写入文件</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$filename&nbsp;=&nbsp;&#39;test.txt&#39;;&nbsp;&nbsp;&nbsp;&nbsp;$somecontent&nbsp;=&nbsp;&quot;添加这些文字到文件\\n&quot;;&nbsp;&nbsp;&nbsp;&nbsp;$handle&nbsp;=&nbsp;fopen($filename,&nbsp;&#39;a&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;fwrite($handle,&nbsp;$somecontent);\r\n&nbsp;&nbsp;&nbsp;&nbsp;fclose($handle);1234512345</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int fwrite ( resource handle, string string [, int length] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出:&nbsp;<br style=\"box-sizing: border-box;\"/>把 string 的内容写入 文件指针 handle 处。如果指定了 length,当写入了length个字节或者写完了string以后，写入就会停止, 视乎先碰到哪种情况</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">128.fputs(): 同上　&nbsp;<br style=\"box-sizing: border-box;\"/>　　&nbsp;<br style=\"box-sizing: border-box;\"/>129.fread(): 读取文件</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$filename&nbsp;=&nbsp;&quot;/usr/local/something.txt&quot;;$handle&nbsp;=&nbsp;fopen($filename,&nbsp;&quot;r&quot;);$contents&nbsp;=&nbsp;fread($handle,&nbsp;filesize($filename));\r\n&nbsp;&nbsp;&nbsp;&nbsp;fclose($handle);12341234</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string fread ( int handle, int length )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>从文件指针handle，读取最多 length 个字节</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">130.feof(): 检测文件指针是否到了文件结束的位置</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$file&nbsp;=&nbsp;@fopen(&quot;no_such_file&quot;,&nbsp;&quot;r&quot;);&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(!feof($file))&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;fclose($file);12341234</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用: bool feof ( resource handle )&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 如果文件指针到了 EOF 或者出错时则返回TRUE，否则返回一个错误（包括 socket 超时），其它情况则返回 FALSE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">131.fgets(): 从文件指针中读取一行</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$handle&nbsp;=&nbsp;@fopen(&quot;/tmp/inputfile.txt&quot;,&nbsp;&quot;r&quot;);&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;($handle)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(!feof($handle))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;$buffer&nbsp;=&nbsp;fgets($handle,&nbsp;4096);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$buffer;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;fclose($handle);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}1234567812345678</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string fgets ( int handle [, int length] )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 从handle指向的文件中读取一行并返回长度最多为length-1字节的字符串.碰到换行符（包括在返回值中）、EOF 或者已经读取了length -1字节后停止(看先碰到那一种情况). 如果没有指定 length,则默认为1K, 或者说 1024 字节.</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">132.fgetc(): 从文件指针中读取字符</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$fp&nbsp;=&nbsp;fopen(&#39;somefile.txt&#39;,&nbsp;&#39;r&#39;);&nbsp;&nbsp;&nbsp;&nbsp;if&nbsp;(!$fp)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;Could&nbsp;not&nbsp;open&nbsp;file&nbsp;somefile.txt&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;while&nbsp;(false&nbsp;!==&nbsp;($char&nbsp;=&nbsp;fgetc($fp)))&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;$char\\n&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}12345671234567</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输入:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string fgetc ( resource $handle )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 返回一个包含有一个字符的字符串，该字符从 handle指向的文件中得到. 碰到 EOF 则返回 FALSE.</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">133.file(): 把整个文件读入一个数组中</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$lines&nbsp;=&nbsp;file(&#39;http://www.example.com/&#39;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">// 在数组中循环，显示 HTML 的源文件并加上行号。</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;foreach&nbsp;($lines&nbsp;as&nbsp;$line_num&nbsp;=&gt;&nbsp;$line)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&quot;Line&nbsp;#&nbsp;:&nbsp;&quot;&nbsp;.\r\n&nbsp;&nbsp;&nbsp;&nbsp;htmlspecialchars($line)&nbsp;.&nbsp;&quot;\r\n\\n&quot;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}12341234</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">// 另一个例子将 web 页面读入字符串。参见&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">file_get_contents()</code>。</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$html&nbsp;=&nbsp;implode(&#39;&#39;,&nbsp;file(&#39;http://www.example.com/&#39;));11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">array file ( string $filename [, int $use_include_path [, resource $context ]] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 数组中的每个单元都是文件中相应的一行，包括换行符在内。如果失败 file() 返回 FALSE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">134.readfile(): 输出一个文件　&nbsp;<br style=\"box-sizing: border-box;\"/>调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int readfile ( string $filename [, bool $use_include_path [, resource $context ]] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 读入一个文件并写入到输出缓冲。返回从文件中读入的字节数。如果出错返回 FALSE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">135.file_get_contents(): 将整个文件读入一个字符串</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;file_get_contents(&#39;http://www.baidu.com&#39;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string file_get_contents ( string $filename [, bool $use_include_path [, resource $context [, int $offset [, int $maxlen ]]]] )</code><br style=\"box-sizing: border-box;\"/>　&nbsp;<br style=\"box-sizing: border-box;\"/>136.file_put_contents():将一个字符串写入文件</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;file_put_contents(&#39;1.txt&#39;,&#39;aa&#39;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int file_put_contents ( string $filename , string $data [, int $flags [, resource $context ]] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 该函数将返回写入到文件内数据的字节数</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">137.ftell(): 返回文件指针读/写的位置</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$fp=fopen(&#39;tx.txt&#39;,&#39;r&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;fseek($fp,10);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;ftell($fp);\r\n&nbsp;&nbsp;&nbsp;&nbsp;fread($fp,4);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;ftell($fp);1234512345</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int ftell ( resource $handle )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 返回由 handle 指定的文件指针的位置，也就是文件流中的偏移量</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">138.fseek(): 在文件指针中定位</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$fp=fopen(&#39;tx.txt&#39;,&#39;r&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;fseek($fp,10);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;ftell($fp);\r\n&nbsp;&nbsp;&nbsp;&nbsp;fread($fp,4);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;ftell($fp);1234512345</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int fseek ( resource $handle , int $offset [, int $whence ] )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 成功则返回 0；否则返回 -1</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">139.rewind(): 倒回文件指针的位置</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$fp=fopen(&#39;tx.txt&#39;,&#39;r&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;fseek($fp,3);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;ftell($fp);\r\n&nbsp;&nbsp;&nbsp;&nbsp;fread($fp,4);\r\n&nbsp;&nbsp;&nbsp;&nbsp;rewind($fp);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;ftell($fp);123456123456</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool rewind ( resource $handle )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>返回值: 如果成功则返回 TRUE，失败则返回 FALSE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">140.flock(): 轻便的执行文件锁定</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$fp=fopen(&#39;tx.txt&#39;,&#39;r&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;flock($fp,&nbsp;LOCK_SH);//共享锁\r\n&nbsp;&nbsp;&nbsp;&nbsp;//flock($fp,&nbsp;LOCK_EX);//独立锁，写文件时用它打开\r\n&nbsp;&nbsp;&nbsp;&nbsp;//flock($fp,&nbsp;LOCK_NB);//附加锁\r\n&nbsp;&nbsp;&nbsp;&nbsp;flock($fp,&nbsp;LOCK_UN);//释放锁\r\n&nbsp;&nbsp;&nbsp;&nbsp;fclose($fp);123456123456</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool flock ( int $handle , int $operation [, int &amp;$wouldblock ] )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 如果成功则返回 TRUE，失败则返回 FALSE</p><h3 id=\"目录\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t21\"></a><strong style=\"box-sizing: border-box;\">目录</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">141.basename(): 返回路径中的文件名部分</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;path&nbsp;=&nbsp;&quot;/home/httpd/html/index.php&quot;;&nbsp;&nbsp;&nbsp;&nbsp;$file&nbsp;=&nbsp;basename($path);&nbsp;&nbsp;&nbsp;&nbsp;$file&nbsp;=&nbsp;basename($path,&quot;.php&quot;);123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string basename ( string $path [, string $suffix ])</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 给出一个包含有指向一个文件的全路径的字符串，本函数返回基本的文件名。如果文件名是以 suffix 结&nbsp;<br style=\"box-sizing: border-box;\"/>束的，那这一部分也会被去掉</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">142.dirname(): 返回路径中的目录部分</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$path&nbsp;=&nbsp;&quot;/etc/passwd&quot;;&nbsp;&nbsp;&nbsp;&nbsp;$file&nbsp;=&nbsp;dirname($path);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string dirname ( string $path )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 给出一个包含有指向一个文件的全路径的字符串，本函数返回去掉文件名后的目录名</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">143.pathinfo(): 返回文件路径的信息</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;print_r(pathinfo(&quot;/www/htdocs/index.html&quot;));&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;&#39;;123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">mixed pathinfo ( string $path [, int $options ] )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>返回一个关联数组包含有 path 的信息</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">144.opendir(): 打开目录句柄</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">$fp=opendir(&#39;E:/xampp/htdocs/php/study/19&#39;);echo&nbsp;readdir($fp);\r\nclosedir($fp);123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">resource opendir ( string $path [, resource $context ] )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>返回值: 如果成功则返回目录句柄的 resource，失败则返回FALSE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">145.readdir(): 从目录句柄中读取条目</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">$fp=opendir(&#39;E:/xampp/htdocs/php/study/19&#39;);echo&nbsp;readdir($fp);\r\nclosedir($fp);123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string readdir ( resource $dir_handle )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>返回值: 返回目录中下一个文件的文件名。文件名以在文件系统中的排序返回</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">146.closedir(): 关闭目录句柄</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$fp=opendir(&#39;E:/xampp/htdocs/php/study/19&#39;);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;readdir($fp);\r\n&nbsp;&nbsp;&nbsp;&nbsp;closedir($fp);123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">void closedir ( resource $dir_handle )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>关闭由 dir_handle 指定的目录流。流必须之前被opendir() 所打开&nbsp;<br style=\"box-sizing: border-box;\"/>147.rewinddir() : 倒回目录句柄</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$fp=opendir(&#39;E:/xampp/htdocs/php/study/19&#39;);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;readdir($fp).&#39;\r\n&#39;;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;readdir($fp).&#39;\r\n&#39;;&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;readdir($fp).&#39;\r\n&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;rewinddir($fp);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;readdir($fp).&#39;\r\n&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;closedir($fp);12345671234567</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">void rewinddir ( resource $dir_handle )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 将 dir_handle 指定的目录流重置到目录的开头&nbsp;<br style=\"box-sizing: border-box;\"/>148.mkdir(): 新建目录</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;mkdir(&#39;123&#39;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool mkdir ( string $pathname [, int $mode [, bool $recursive [, resource $context ]]] )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 尝试新建一个由 pathname 指定的目录</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">149.rmdir(): 删除目录</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;rmdir(&#39;123&#39;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool rmdir ( string $dirname )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 尝试删除 dirname 所指定的目录。目录必须是空的，而且要有相应的权限。如果成功则返回TRUE，失败则返回 FALSE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">150.unlink(): 删除文件</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;unlink(&#39;123/1.txt&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;rmdir(&#39;123&#39;);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool unlink ( string $filename )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 删除 filename 。和 Unix C 的 unlink() 函数相似。如果成功则返回 TRUE，失败则返回 FALSE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">151.copy(): 拷贝文件</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;copy(&#39;index.php&#39;,&#39;index.php.bak&#39;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool copy ( string $source , string $dest )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 将文件从 source 拷贝到 dest. 如果成功则返回TRUE，失败则返回 FALSE</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">152.rename(): 重命名一个文件或目录</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;rename(&#39;tx.txt&#39;,&#39;txt.txt&#39;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool rename ( string $oldname , string $newname [, resource $context ] )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 如果成功则返回 TRUE，失败则返回 FALSE</p><h3 id=\"文件的上传与下载\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t22\"></a><strong style=\"box-sizing: border-box;\">文件的上传与下载</strong></h3><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">153.is_uploaded_file():判断文件是否是通过 HTTP POST上传的</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;if(is_uploaded_file($_FILES[&#39;bus&#39;][&#39;tmp_name&#39;])){&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;move_uploaded_file($_FILES[&#39;bus&#39;][&#39;tmp_name&#39;],&nbsp;&nbsp;&nbsp;&nbsp;$NewPath)&nbsp;){&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;上传成功\r\n[object Object]&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}else{&nbsp;&nbsp;&nbsp;&nbsp;exit(&#39;失败&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}else{&nbsp;&nbsp;&nbsp;&nbsp;exit(&#39;不是上传文件&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}1234567891012345678910</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool is_uploaded_file ( string $filename )</code>&nbsp;　</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">154.move_uploaded_file(): 将上传的文件移动到新位置</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;if(is_uploaded_file($_FILES[&#39;bus&#39;][&#39;tmp_name&#39;])){&nbsp;&nbsp;&nbsp;&nbsp;if(&nbsp;move_uploaded_file($_FILES[&#39;bus&#39;][&#39;tmp_name&#39;],&nbsp;&nbsp;&nbsp;&nbsp;$NewPath)&nbsp;){&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;上传成功\r\n[object Object]&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}else{&nbsp;&nbsp;&nbsp;&nbsp;exit(&#39;失败&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}\r\n&nbsp;&nbsp;&nbsp;&nbsp;}else{&nbsp;&nbsp;&nbsp;&nbsp;exit(&#39;不是上传文件&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;}1234567891012345678910</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool move_uploaded_file ( string $filename , string</code></p><h2 id=\"时间函数\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t23\"></a>时间函数</h2><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">155.time(): 返回当前的 Unix 时间戳time();&nbsp;<br style=\"box-sizing: border-box;\"/>调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int time ( void )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 返回自从 Unix 纪元（格林威治时间 1970 年 1 月 1 日 00:00:00）到当前时间的秒数</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">156.mktime(): 取得一个日期的 Unix 时间戳</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;mktime(0,&nbsp;0,&nbsp;0,&nbsp;4,&nbsp;25,&nbsp;2012);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int mktime ([ int $hour [, int $minute [, int $second [, int $month [, int $day [, int $year [, int $is_dst ]]]]]]] )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>　&nbsp;<br style=\"box-sizing: border-box;\"/>156.date(): 格式化一个本地时间／日期</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">date(&#39;Y年m月d日&nbsp;H:i:s&#39;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string date ( string $format [, int $timestamp ] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 2016年09月10日 20:45:54</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">157.checkdate(): 验证一个格里高里日期&nbsp;<br style=\"box-sizing: border-box;\"/>调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool checkdate ( int $month , int $day , int $year)</code>&nbsp;<br style=\"box-sizing: border-box;\"/>输出: 如果给出的日期有效则返回 TRUE，否则返回 FALSE</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;if(checkdate(6,31,2012)){&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;成立&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}else{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;&#39;不成立&#39;;\r\n&nbsp;&nbsp;&nbsp;&nbsp;}1234512345</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">158.date_default_timezone_set(): 设定用于一个脚本中所有日期时间函数的默认时区</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;date_default_timezone_set(&#39;PRC&#39;);11</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool date_default_timezone_set ( string $timezone_identifier)</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">返回值: 如果 timezone_identifier 参数无效则返回 FALSE，否则返回 TRUE。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">159.getdate(): 取得日期／时间信息&nbsp;<br style=\"box-sizing: border-box;\"/>调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">array getdate ([ int $timestamp ] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出: 返回一个根据timestamp得出的包含有日期信息的关联数组。如果没有给出时间戳则认为是当前本地时间</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$t=getdate();\r\n&nbsp;&nbsp;&nbsp;&nbsp;var_dump($t);1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">160.strtotime(): 将任何英文文本的日期时间描述解析为 Unix 时间戳</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strtotime(&quot;now&quot;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;int&nbsp;strtotime&nbsp;(&nbsp;string&nbsp;$time&nbsp;[,&nbsp;int&nbsp;$now&nbsp;]&nbsp;)&nbsp;　&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strtotime(&quot;10&nbsp;September&nbsp;2000&quot;);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strtotime(&quot;+1&nbsp;day&quot;);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strtotime(&quot;+1&nbsp;week&quot;);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strtotime(&quot;+1&nbsp;week&nbsp;2&nbsp;days&nbsp;4&nbsp;hours&nbsp;2&nbsp;seconds&quot;);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strtotime(&quot;next&nbsp;Thursday&quot;);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;strtotime(&quot;last&nbsp;Monday&quot;);1234567812345678</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">161.microtime(): 返回当前 Unix 时间戳和微秒数&nbsp;<br style=\"box-sizing: border-box;\"/>调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">mixed microtime ([ bool $get_as_float ] )</code></p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">&nbsp;&nbsp;&nbsp;&nbsp;$start=microtime(true);\r\n&nbsp;&nbsp;&nbsp;&nbsp;sleep(3);&nbsp;&nbsp;&nbsp;&nbsp;$stop=microtime(true);&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;$stop-$start;12341234</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">其他常用:</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">162.intval(): 获取变量的整数值&nbsp;<br style=\"box-sizing: border-box;\"/>调用:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">int intval ( mixed $var [, int $base = 10 ] )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>通过使用指定的进制 base 转换（默认是十进制），返回变量 var 的 integer 数值。 intval() 不能用于 object，否则会产生 E_NOTICE 错误并返回 1。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">var: 要转换成 integer 的数量值</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">base: 转化所使用的进制</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">返回值: 成功时返回 var 的 integer 值，失败时返回 0。 空的 array 返回 0，非空的 array 返回 1。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">163.sprintf(): 函数把格式化的字符串写入一个变量中。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">语法&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">sprintf(format,arg1,arg2,arg++)</code>&nbsp;<br style=\"box-sizing: border-box;\"/>参数 描述&nbsp;<br style=\"box-sizing: border-box;\"/>format 必需。转换格式。&nbsp;<br style=\"box-sizing: border-box;\"/>arg1 必需。规定插到 format 字符串中第一个 % 符号处的参数。&nbsp;<br style=\"box-sizing: border-box;\"/>arg2 可选。规定插到 format 字符串中第二个 % 符号处的参数。&nbsp;<br style=\"box-sizing: border-box;\"/>arg++ 可选。规定插到 format 字符串中第三、四等等 % 符号处的参数。&nbsp;<br style=\"box-sizing: border-box;\"/>说明&nbsp;<br style=\"box-sizing: border-box;\"/>参数 format 是转换的格式，以百分比符号 (“%”) 开始到转换字符结束。下面的可能的 format 值：</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">%% - 返回百分比符号&nbsp;<br style=\"box-sizing: border-box;\"/>%b - 二进制数&nbsp;<br style=\"box-sizing: border-box;\"/>%c - 依照 ASCII 值的字符&nbsp;<br style=\"box-sizing: border-box;\"/>%d - 带符号十进制数&nbsp;<br style=\"box-sizing: border-box;\"/>%e - 可续计数法（比如 1.5e+3）&nbsp;<br style=\"box-sizing: border-box;\"/>%u - 无符号十进制数&nbsp;<br style=\"box-sizing: border-box;\"/>%f - 浮点数(local settings aware)&nbsp;<br style=\"box-sizing: border-box;\"/>%F - 浮点数(not local settings aware)&nbsp;<br style=\"box-sizing: border-box;\"/>%o - 八进制数&nbsp;<br style=\"box-sizing: border-box;\"/>%s - 字符串&nbsp;<br style=\"box-sizing: border-box;\"/>%x - 十六进制数（小写字母）&nbsp;<br style=\"box-sizing: border-box;\"/>%X - 十六进制数（大写字母）&nbsp;<br style=\"box-sizing: border-box;\"/>arg1, arg2, ++ 等参数将插入到主字符串中的百分号 (%) 符号处。该函数是逐步执行的。在第一个 % 符号中，插入 arg1，在第二个 % 符号处，插入 arg2，依此类推。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">提示和注释</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">注释：如果 % 符号多于 arg 参数，则您必须使用占位符。占位符插到 % 符号后面，由数字和 “<span style=\"box-sizing: border-box;\">$</span>” 组成。请参见例子 3。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">提示：相关函数：fprintf()、printf()、vfprintf()、vprintf() 以及 vsprintf()。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">例子</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">例子 1</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">123456123456</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出：</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">Hello world. Day number 123</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">164.PDO类的相关函数&nbsp;<br style=\"box-sizing: border-box;\"/>prepare()&nbsp;<br style=\"box-sizing: border-box;\"/>execute()&nbsp;<br style=\"box-sizing: border-box;\"/>fetch()</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">getMessage()&nbsp;.&nbsp;&quot;&quot;;\r\n}$sql&nbsp;=&nbsp;&#39;SELECT&nbsp;&nbsp;*&nbsp;FROM&nbsp;users&#39;;$stmt&nbsp;=&nbsp;$conn-&gt;prepare($sql);$stmt-&gt;execute();echo&nbsp;&quot;&quot;;while($row&nbsp;=&nbsp;$stmt-&gt;fetch(PDO::FETCH_ASSOC)){&nbsp;&nbsp;echo&nbsp;&quot;&quot;;&nbsp;&nbsp;foreach($row&nbsp;as&nbsp;$value)\r\n&nbsp;&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;echo&nbsp;sprintf(&quot;%s&quot;,&nbsp;$value);\r\n&nbsp;&nbsp;}&nbsp;&nbsp;echo&nbsp;&quot;&quot;;\r\n}echo&nbsp;&quot;&quot;;?&gt;12345678910111213141516171819202122232425262728291234567891011121314151617181920212223242526272829</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">165.isset(): 检测变量是否设置。&nbsp;<br style=\"box-sizing: border-box;\"/>原型格式：&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">bool isset ( mixed var [, mixed var [, ...]] )</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">返回值：&nbsp;<br style=\"box-sizing: border-box;\"/>若变量不存在则返回 FALSE&nbsp;<br style=\"box-sizing: border-box;\"/>若变量存在且其值为NULL，也返回 FALSE&nbsp;<br style=\"box-sizing: border-box;\"/>若变量存在且值不为NULL，则返回 TURE&nbsp;<br style=\"box-sizing: border-box;\"/>同时检查多个变量时，每个单项都符合上一条要求时才返回 TRUE，否则结果为 FALSE&nbsp;<br style=\"box-sizing: border-box;\"/>如果已经使用 unset() 释放了一个变量之后，它将不再是 isset()。若使用 isset() 测试一个被设置成 NULL 的变量，将返回 FALSE。同时要注意的是一个 NULL 字节（”“）并不等同于 PHP 的 NULL 常数。</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">$userInfo=’abc’;if(isset($userInfo[&#39;account&#39;]))&nbsp;{$account=$userInfo[&#39;account&#39;];\r\n}&nbsp;else&nbsp;{$account=$userInfo;\r\n}123456123456</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">166.unset(): 销毁指定的变量。&nbsp;<br style=\"box-sizing: border-box;\"/>函数原型:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">unset(var1,var2,...)</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">参数 描述&nbsp;<br style=\"box-sizing: border-box;\"/>var1 要销毁的变量1&nbsp;<br style=\"box-sizing: border-box;\"/>var2 要销毁的变量2</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">1234512345</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">167.preg_replace_callback: 执行一个正则表达式搜索并且使用一个回调进行替换.</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">原型:&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">mixed preg_replace_callback ( mixed $pattern , callable $callback , mixed $subject [, int $limit = -1 [, int &amp;$count ]] )</code><br style=\"box-sizing: border-box;\"/>这个函数的行为除了 可以指定一个 callback 替代 replacement 进行替换 字符串的计算，其他方面等同于 preg_replace()。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">pattern: 要搜索的模式，可以使字符串或一个字符串数组。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">callback: 一个回调函数，在每次需要替换时调用，调用时函数得到的参数是从subject 中匹配到的结果。回调函数返回真正参与替换的字符串。这是该回调函数的签名：&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">string handler ( array $matches )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>你可能经常会需要callback函数而仅用于preg_replace_callback()一个地方的调用。在这种情况下，你可以 使用匿名函数来定义一个匿名函数作为preg_replace_callback()调用时的回调。 这样做你可以保留所有 调用信息在同一个位置并且不会因为一个不在任何其他地方使用的回调函数名称而污染函数名称空间。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">subject: 要搜索替换的目标字符串或字符串数组。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">limit: 对于每个模式用于每个 subject 字符串的最大可替换次数。 默认是-1（无限制）。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">count: 如果指定，这个变量将被填充为替换执行的次数。</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">1234567891011121314151612345678910111213141516</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">返回值:&nbsp;<br style=\"box-sizing: border-box;\"/>如果subject是一个数组， preg_replace_callback()返回一个数组，其他情况返回字符串。 错误发生时返回 NULL。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">如果查找到了匹配，返回替换后的目标字符串（或字符串数组）， 其他情况subject 将会无变化返回。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">168.json_encode(): 对变量进行 JSON 编码</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">函数原型:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">json_encode(value,option)</code>&nbsp;<br style=\"box-sizing: border-box;\"/>参数 描述&nbsp;<br style=\"box-sizing: border-box;\"/>value 必填。待编码的 value ，除了resource 类型之外，可以为任何数据类型。该函数只能接受 UTF-8 编码的数据&nbsp;<br style=\"box-sizing: border-box;\"/>options 可选。&nbsp;<br style=\"box-sizing: border-box;\"/>JSON_HEX_QUOT 把双引号转为\\u0022（php 5.3）&nbsp;<br style=\"box-sizing: border-box;\"/>JSON_HEX_TAG 把&lt; &gt; 转为 \\u003C 和 \\u003E（php 5.3）&nbsp;<br style=\"box-sizing: border-box;\"/>JSON_HEX_AMP 把 &amp; 转为 \\u0026（php 5.3）&nbsp;<br style=\"box-sizing: border-box;\"/>JSON_HEX_APOS 把单引号转为 \\u0027.（php 5.3）&nbsp;<br style=\"box-sizing: border-box;\"/>JSON_NUMERIC_CHECK 把数字字符串当作数字编码（php 5.3）&nbsp;<br style=\"box-sizing: border-box;\"/>JSON_PRETTY_PRINT 使用空格格式化数据（php 5.4）&nbsp;<br style=\"box-sizing: border-box;\"/>JSON_UNESCAPED_SLASHES 不忽略 /（php 5.4）&nbsp;<br style=\"box-sizing: border-box;\"/>JSON_FORCE_OBJECT 使用非关联数组时输出一个对象而不是一个数组（php 5.3）&nbsp;<br style=\"box-sizing: border-box;\"/>JSON_UNESCAPED_UNICODE 逐字编译多字节字符（php 5.4）</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">1,&#39;b&#39;=&gt;2,&#39;c&#39;=&gt;3,&#39;d&#39;=&gt;4,&#39;e&#39;=&gt;5);echo&nbsp;json_encode($arr);?&gt;&nbsp;12341234</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">以上例程会输出：</p><pre style=\"white-space: pre-wrap; word-wrap: break-word; box-sizing: border-box; margin-top: 0px; margin-bottom: 10.5px; font-family: \" source=\"\" code=\"\" padding:=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">{&quot;a&quot;:1,&quot;b&quot;:2,&quot;c&quot;:3,&quot;d&quot;:4,&quot;e&quot;:5}</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">169.iconv(): 用于按规定的字符编码转换字符串。mb_convert_encoding() 函数也可以转换编码。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">如果发现中文输出乱码的时候，很可能就需要使用此函数做处理。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">函数原型:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">iconv(in_charset ,out_charset ,str )</code>&nbsp;<br style=\"box-sizing: border-box;\"/>参数 描述&nbsp;<br style=\"box-sizing: border-box;\"/>in_charset 输入的字符集。&nbsp;<br style=\"box-sizing: border-box;\"/>out_charset 输出的字符集。如果你在 out_charset 后添加了字符串 //TRANSLIT，将启用转写（transliteration）功能。这个意思是，当一个字符不能被目标字符集所表示时，它可以通过一个或多个形似的字符来近似表达。 如果你添加了字符串 //IGNORE，不能以目标字符集表达的字符将被默默丢弃。 否则，str 从第一个无效字符开始截断并导致一个 E_NOTICE。&nbsp;<br style=\"box-sizing: border-box;\"/>str 要转换的字符串。</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">12345671234567</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">Original&nbsp;:&nbsp;This&nbsp;is&nbsp;the&nbsp;Euro&nbsp;symbol&nbsp;&#39;€&#39;.\r\nTRANSLIT&nbsp;:&nbsp;This&nbsp;is&nbsp;the&nbsp;Euro&nbsp;symbol&nbsp;&#39;EUR&#39;.\r\nIGNORE&nbsp;&nbsp;&nbsp;:&nbsp;This&nbsp;is&nbsp;the&nbsp;Euro&nbsp;symbol&nbsp;&#39;&#39;.\r\nPlain&nbsp;&nbsp;&nbsp;&nbsp;:\r\nNotice:&nbsp;iconv():&nbsp;Detected&nbsp;an&nbsp;illegal&nbsp;character&nbsp;in&nbsp;input&nbsp;string&nbsp;in&nbsp;.\\iconv-example.php&nbsp;on&nbsp;line&nbsp;7This&nbsp;is&nbsp;the&nbsp;Euro&nbsp;symbol&nbsp;&#39;123456123456</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">170.exec(): 不输出结果，返回最后一行执行结果，所有结果可以保存到一个返回的数组里面。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">函数原型:&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">exec(command,output,return_var)</code>&nbsp;<br style=\"box-sizing: border-box;\"/>参数 描述&nbsp;<br style=\"box-sizing: border-box;\"/>command 必需。要执行的命令&nbsp;<br style=\"box-sizing: border-box;\"/>output 可选。一个包含每行命令执行结果的数组&nbsp;<br style=\"box-sizing: border-box;\"/>return_var 可选。获得命令执行的状态码</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">注意：<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">dir</code>命令适应windows系统，<a href=\"http://lib.csdn.net/base/linux\" class=\"replace_word\" title=\"Linux知识库\" target=\"_blank\" style=\"text-decoration: none; box-sizing: border-box; color: rgb(223, 52, 52); font-weight: bold;\">Linux</a>系统请使用<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">ls</code>命令。</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">123456123456</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">171.system(): 调用命令，输出并返回最后一个执行结果。&nbsp;<br style=\"box-sizing: border-box;\"/>函数原型:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">system(command,return_var)</code>&nbsp;<br style=\"box-sizing: border-box;\"/>参数 描述&nbsp;<br style=\"box-sizing: border-box;\"/>command 必需。要执行的命令&nbsp;<br style=\"box-sizing: border-box;\"/>return_var 可选。得到命令执行后的状态码</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">1234512345</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">172.serialize():作用是序列化对象、数组成一个字符串。&nbsp;<br style=\"box-sizing: border-box;\"/>比如存储数组到memcache就会被序列化。使用 unserialize() 可以还原数组。</p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">语法&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">serialize(param)</code>&nbsp;<br style=\"box-sizing: border-box;\"/>参数 描述&nbsp;<br style=\"box-sizing: border-box;\"/>param 必需。对象或数组。</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">123456123456</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">输出：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">a:5:{i:0;s:1:&quot;a&quot;;i:1;s:1:&quot;b&quot;;i:2;s:1:&quot;c&quot;;i:3;s:9:&quot;serialize&quot;;i:4;s:9:&quot;怎么用&quot;;}Array&nbsp;(&nbsp;[0]&nbsp;=&gt;&nbsp;a&nbsp;[1]&nbsp;=&gt;&nbsp;b&nbsp;[2]&nbsp;=&gt;&nbsp;c&nbsp;[3]&nbsp;=&gt;&nbsp;serialize&nbsp;[4]&nbsp;=&gt;&nbsp;怎么用&nbsp;)1212</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">173.php_check_syntax&nbsp;<br style=\"box-sizing: border-box;\"/>这个函数可以用来检查特定文件中的PHP语法是否正确。&nbsp;<br style=\"box-sizing: border-box;\"/>使用方法：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">123456789123456789</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">174.highlight_string&nbsp;<br style=\"box-sizing: border-box;\"/>当你想要把PHP代码显示到页面上时，highlight_string()函数就会非常有用，它可以用内置定义的语法高亮颜色把你提供的PHP代码高亮显示。这个函数有两个参数，第一个参数是要被突出显示的字符串。第二个参数如果设置成TRUE，就会把高亮后的代码返回。&nbsp;<br style=\"box-sizing: border-box;\"/>使用方法：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">175.show_source&nbsp;<br style=\"box-sizing: border-box;\"/>这个函数的运行和highlight_file()相似，它可以显示PHP语法高亮后的文件，并且是根据HTML标签进行语法高亮的。&nbsp;<br style=\"box-sizing: border-box;\"/>使用方法：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">176.php_strip_whitespace&nbsp;<br style=\"box-sizing: border-box;\"/>这个函数跟上面的show_source()函数相似，但它会删除文件里的注释和空格符。&nbsp;<br style=\"box-sizing: border-box;\"/>使用方法：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">177.halt_compiler&nbsp;<br style=\"box-sizing: border-box;\"/>它可以中止编译器的执行，这对于在PHP脚本中嵌入数据是很有帮助的，就像安装文件一样。&nbsp;<br style=\"box-sizing: border-box;\"/>使用方法：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">12345671234567</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">178.highlight_file&nbsp;<br style=\"box-sizing: border-box;\"/>这是一个非常有用的PHP函数，它能返回指定的PHP文件，并按照语法高亮突出显示文件内容。&nbsp;<br style=\"box-sizing: border-box;\"/>使用方法：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">179.ignore_user_abort&nbsp;<br style=\"box-sizing: border-box;\"/>利用这个函数，用户可以拒绝浏览器端终止执行脚本的请求。正常情况下客户端的退出会导致服务器端脚本的停止运行。&nbsp;<br style=\"box-sizing: border-box;\"/>使用方法：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">180.str_word_count&nbsp;<br style=\"box-sizing: border-box;\"/>这个函数可以用来统计字符串中单词的数量。&nbsp;<br style=\"box-sizing: border-box;\"/>使用方法：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">181.get_defined_vars&nbsp;<br style=\"box-sizing: border-box;\"/>这个函数在代码调试时十分重要，它会返回一个包括所有已定义的变量的多维数组。&nbsp;<br style=\"box-sizing: border-box;\"/>使用方法：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">123123</pre><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\">182.get_browser&nbsp;<br style=\"box-sizing: border-box;\"/>这个函数检查并读取browscap.ini文件，返回浏览器兼容信息。&nbsp;<br style=\"box-sizing: border-box;\"/>使用方法：</p><pre class=\"prettyprint\" name=\"code\" style=\"white-space: nowrap; word-wrap: break-word; box-sizing: border-box; position: relative; overflow-y: hidden; overflow-x: auto; margin-top: 0px; margin-bottom: 1.1em; font-family: \" source=\"\" code=\"\" padding:=\"\" 5px=\"\" font-size:=\"\" line-height:=\"\" word-break:=\"\" color:=\"\" border:=\"\" 1px=\"\" solid=\"\" border-radius:=\"\" background-color:=\"\">1234512345</pre><h2 id=\"正则表达式-元字符\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t24\"></a>正则表达式-元字符</h2><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><strong style=\"box-sizing: border-box;\">元字符及其匹配范围</strong></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">\\d</code>&nbsp;匹配任意一个十进制数字,等价于:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">[0-9]</code>&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">\\D</code>&nbsp;匹配除十进制数字以外的任意数字,等价于:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">[^0-9]</code>&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">\\s</code>:匹配空白字符,等价于:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">[\\n\\f\\r\\t\\v]</code>&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">\\S</code>: 匹配除空白字符以外的任意一个字符, 等价于<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">[^\\n\\f\\r\\t\\v]</code></p><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">\\w</code>&nbsp;匹配任意一个数字、字母和下划线,等价于:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">[0-9a-zA-Z_]</code>&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">\\W</code>&nbsp;匹配除字母、数字和下划线以外的任意字符, 等价于:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">[^0-9a-zA-Z_]</code>&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">[]</code>&nbsp;1)用来表示范围。2)匹配任意一个中括号中定义的原子&nbsp;<br style=\"box-sizing: border-box;\"/>　&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">[^]</code>: 中括号里面的^(抑扬符)：表示匹配任意一个除中括号里面定义的原子</p><h4 id=\"限定次数\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t25\"></a><strong style=\"box-sizing: border-box;\">限定次数</strong></h4><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">*</code>&nbsp;匹配0次、1次或多次其前的原子, 等价于:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">{0,}</code>&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">+</code>&nbsp;匹配1次或多次其前的原子, 等价于:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">{1,}</code>&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">?</code>&nbsp;匹配0次或1次其前的原子, 等价于:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">{0,1}</code>&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">{n}</code>&nbsp;表示其前的原子正好出现n次, 等价于:&nbsp;<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">{n,}</code>&nbsp;<br style=\"box-sizing: border-box;\"/>表示其前的原子至少出现n次，最多不限制&nbsp;<br style=\"box-sizing: border-box;\"/>　&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">{m,n}</code>&nbsp;表示其前的原子最少出现m次，最多出现n次&nbsp;<br style=\"box-sizing: border-box;\"/>　</p><h4 id=\"其它\" style=\"margin: 0.8em 0px; padding: 0px; box-sizing: border-box; font-weight: 100; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><a style=\"box-sizing: border-box; color: rgb(12, 137, 207);\" name=\"t26\"></a><strong style=\"box-sizing: border-box;\">其它</strong></h4><p style=\"margin-top: 0px; margin-bottom: 1.1em; padding: 0px; box-sizing: border-box; color: rgb(85, 85, 85); font-family: \" microsoft=\"\" font-size:=\"\" line-height:=\"\" white-space:=\"\" background-color:=\"\"><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">.</code>&nbsp;匹配除换行符(\\n)以外的任意字符【windows下还匹配<code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">\\f\\r</code>】　&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">|</code>&nbsp;两个或多个分支选择【优先级最低】&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">^</code>&nbsp;匹配输入字符的开始位置　&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">$</code>&nbsp;匹配输入字符的结束位置　&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">\\b</code>&nbsp;匹配词边界　&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">\\B</code>&nbsp;匹配非词边界　&nbsp;<br style=\"box-sizing: border-box;\"/><code style=\"box-sizing: border-box; font-family: \" source=\"\" code=\"\" padding:=\"\" 2px=\"\" font-size:=\"\" color:=\"\" white-space:=\"\" border-radius:=\"\" background-color:=\"\">()</code>&nbsp;1)模式单元，把多个小原子组成一个大原子。2)可以改变优先级</p><p><br/></p>',1477139361,'',100,1,1,18),(30,' PHP 程序员的技术成长规划 ','  ','  ','','<table style=\"width: 828px;\" width=\"999\" cellspacing=\"0\" cellpadding=\"0\"><tbody style=\"word-wrap: break-word;\"><tr style=\"word-wrap: break-word;\" class=\"firstRow\"><td class=\"t_f\" id=\"postmessage_111739\" style=\"word-wrap: break-word;\"><span style=\"word-wrap: break-word; color: rgb(51, 51, 51);\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">按照了解的很多PHP/LNMP程序员的发展轨迹，结合个人经验体会，抽象出很多程序员对未来的迷漫，特别对技术学习的盲目和慌乱，简单梳理了这个每个阶段PHP程序员的技术要求，来帮助很多PHP程序做对照设定学习成长目标。</span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">本文按照目前主流技术做了一个基本的梳理，整个是假设PHP程序员不是基础非常扎实的情况进行的设定，并且所有设定都非常具体明确清晰，可能会让人觉得不适，请理解仅代表一家之言。（未来技术变化不在讨论范围）</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">第一阶段：基础阶段（基础PHP程序员）</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">重点：把LNMP搞熟练（核心是安装配置基本操作）</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">目标：能够完成基本的LNMP系统安装，简单配置维护；能够做基本的简单系统的PHP开发；能够在PHP中型系统中支持某个PHP功能模块的开发。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">时间：完成本阶段的时间因人而异，有的成长快半年一年就过了，成长慢的两三年也有。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">1. Linux ：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">基本命令、操作、启动、基本服务配置（包括rpm安装文件，各种服务配置等）；会写简单的shell脚本和awk/sed 脚本命令等。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">2. Nginx：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">做到能够安装配置nginx+php，知道基本的nginx核心配置选项，知道 server/fastcgi_pass/access_log 等基础配置，目标是能够让nginx+php_fpm顺利工作。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">3. MySQL：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">会自己搭建mysql，知道基本的mysql配置选项；知道innodb和myisam的区别，知道针对InnoDB和MyISAM两个引擎的不同 配置选项；知道基本的两个引擎的差异和选择上面的区别；能够纯手工编译搭建一个MySQL数据库并且配置好编码等正常稳定运行；核心主旨是能够搭建一个可 运行的MySQL数据库。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">4. PHP：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">基本语法数组、字符串、数据库、XML、Socket、GD/ImageMgk图片处理等等；熟悉各种跟MySQL操作链接的api（mysql /mysqli/PDO)，知道各种编码问题的解决；知道常规熟练使用的PHP框架（ThinkPHP、Zendframework、Yii、Yaf 等）；了解基本MVC的运行机制和为什么这么做，稍微知道不同的PHP框架之间的区别；能够快速学习一个 MVC框架 。能够知道开发工程中的文件目录组织，有基本的良好的代码结构和风格，能够完成小系统的开发和中型系统中某个模块的开发工作。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">5. 前端：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">如果条件时间允许，可以适当学习下 HTML/CSS/JS 等相关知识，知道什么web标准，div+css的web/wap页面模式，知道 HTML5和HTML4的区别；了解一些基本的前端只是和JS框架（jQuery之类的）；了解一些基本的JavaScript编程知识；（本项不是必须 项，如果有时间，稍微了解一下是可以的，不过不建议作为重点，除非个人有强烈兴趣）</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">6. 系统设计：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">能够完成小型系统的基本设计，包括简单的数据库设计，能够完成基本的：浏览器 -&gt; Nginx+PHP -&gt; 数据库 架构的设计开发工作；能够支撑每天几十万到数百万流量网站的开发维护工作；</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">第二阶段：提高阶段 （中级PHP程序员）</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">重点：提高针对LNMP的技能，能够更全面的对LNMP有熟练的应用。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">目标：能够随时随地搭建好LNMP环境，快速完成常规配置；能够追查解决大部分遇到的开发和线上环境的问题；能够独立承担中型系统的构架和开发工作；能够在大型系统中承担某个中型模块的开发工作；</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">1.&nbsp;&nbsp;Linux:&nbsp;</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">在第一阶段的基础上面，能够流畅的使用Shell脚本来完成很多自动化的工作；awk/sed/perl 也操作的不错，能够完成很多文本处理和数 据统计等工作；基本能够安装大部分非特殊的Linux程序（包括各种库、包、第三方依赖等等，比如MongoDB/Redis/Sphinx /Luncene/SVN之类的）；了解基本的Linux服务，知道如何查看Linux的性能指标数据，知道基本的Linux下面的问题跟踪等。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">2.&nbsp;&nbsp;Nginx:&nbsp;</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">在第一阶段的基础上面，了解复杂一些的Nginx配置；包括 多核配置、events、proxy_pass，sendfile/tcp_*配置， 知道超时等相关配置和性能影响；知道nginx除了web server，还能够承担代理服务器、反向静态服务器等配置；知道基本的nginx配置调优； 知道如何配置权限、编译一个nginx扩展到nginx；知道基本的nginx运行原理（master/worker机制，epoll），知道为什么 nginx性能比apache性能好等知识；</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">3.&nbsp;&nbsp;MySQL/MongoDB：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">在第一阶段的基础上面，在MySQL开发方面，掌握很多小技巧，包括常规SQL优化（group by/order by/rand优化等）；除了 能够搭建MySQL，还能够冷热备份MySQL数据，还知道影响innodb/myisam性能的配置选项（比如key_buffer /query_cache/sort_buffer/innodb_buffer_pool_size /innodb_flush_log_at_trx_commit等），也知道这些选项配置成为多少值合适；另外也了解一些特殊的配置选项，比如&nbsp;&nbsp;知道 如何搭建mysql主从同步的环境，知道各个binlog_format的区别；知道MySQL的性能追查，包括slow_log/explain等，还 能够知道基本的索引建立处理等知识；原理方面了解基本的MySQL的架构（Server+存储引擎），知道基本的InnoDB/MyISAM索引存储结构 和不同（聚簇索引，B树）；知道基本的InnoDB事务处理机制；了解大部分MySQL异常情况的处理方案（或者知道哪儿找到处理方案）。条件允许的情 况，建议了解一下NoSQL的代表MongoDB数据库，顺便对比跟MySQL的差别，同事能够在合适的应用场景安全谨慎的使用MongoDB，知道基本 的PHP与MongoDB的结合开发。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">4.&nbsp;&nbsp;Redis/Memcached：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">在大部分中型系统里面一定会涉及到缓存处理，所以一定要了解基本的缓存；知道Memcached和Redis的异同和应用场景，能够独立安 装 Redis/Memcached，了解Memcahed的一些基本特性和限制，比如最大的value值，知道PHP跟他们的使用结合；Redis了解 基本工作原理和使用，了解常规的数据类型，知道什么场景应用什么类型，了解Redis的事务等等。原理部分，能够大概了解Memcached的内存结构 （slab机制），redis就了解常用数据类型底层实现存储结构（SDS/链表/SkipList/HashTable）等等，顺便了解一下Redis 的事务、RDB、AOF等机制更好</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">5.&nbsp;&nbsp;PHP：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">除了第一阶段的能力，安装配置方面能够随意安装PHP和各种第三方扩展的编译安装配置；了解php-fpm的大部分配置选项和含义（如 max_requests/max_children/request_terminate_timeout之类的影响性能的配置），知道mod_php /fastcgi的区别；在PHP方面已经能够熟练各种基础技术，还包括各种深入些的PHP，包括对PHP面向对象的深入理解/SPL/语法层面的特殊特 性比如反射之类的；在框架方面已经阅读过最少一个以上常规PHP MVC框架的代码了，知道基本PHP框架内部实现机制和设计思想；在PHP开发中已经能 够熟练使用常规的 设计模式 来 应用开发（抽象工厂/单例/观察者/命令链/策略/适配器 等模式）；建议开发自己的PHP MVC框架来充分让开发自由化，让自己深入理解MVC模式， 也让自己能够在业务项目开发里快速升级；熟悉PHP的各种代码优化方法，熟悉大部分PHP安全方面问题的解决处理；熟悉基本的PHP执行的机制原理 （Zend引擎/扩展基本工作机制）；</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">6.&nbsp;&nbsp;C/C++：&nbsp;&nbsp;</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">开始涉猎一定的C/C++语言，能够写基本的C/C++代码，对基本的C/C++语法熟悉（指针、数组操作、字符串、常规标准API）和数据结构 （链表、树、哈希、队列）有一定的熟悉下；对Linux下面的C语言开发有基本的了解概念，会简单的makefile文件编写，能够使用简单的 GCC/GDB的程序编译简单调试工作；对基本的网络编程有大概了解。（本项是为了向更高层次打下基础）</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">7.&nbsp;&nbsp;前端：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">在第一阶段的基础上面，熟悉基本的HTTP协议（协议代码200/300/400/500，基本的HTTP交互头）；条件允许，可以在深入写出稍微 优雅的HTML+CSS+JavaScript，或者能够大致简单使用某些前端框架（jQuery/YUI/ExtJS/RequireJS/ Bootstrap 之类）；如果条件允许，可以深入学习JavaScript编程，比如闭包机制、DOM处理；再深入些可以读读jQuery源码做深入学习。（本项不做重点学习，除非对前端有兴趣）</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">8.&nbsp;&nbsp;系统设计：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">能够设计大部分中型系统的网站架构、数据库、基本PHP框架选型；性能测试排查处理等；能够完成类似：浏览 器 -&gt; CDN(Squid) -&gt; Nginx+PHP -&gt; 缓存 -&gt; 数据库 结构网站的基本设计开发维护；能够支撑 每天数百万到千万流量基本网站的开发维护工作；</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">第三阶段：高级阶段 （高级PHP程序员）</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">重点：除了基本的LNMP程序，还能够在某个方向或领域有深入学习。（纵深维度发展）</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">目标：除了能够完成基本的PHP业务开发，还能够解决大部分深入复杂的技术问题，并且可以独立设计完成中大型的系统设计和开发工作；自己能够独立hold深入某个技术方向，在这块比较专业。（比如在MySQL、Nginx、PHP、Redis等等任一方向深入研究）</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">1.&nbsp;&nbsp;Linux：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">除了第二阶段的能力，在Linux下面除了常规的操作和性能监控跟踪，还能够使用很多高级复杂的命令完成工作（watch/tcpdump /starce/ldd/ar等)；在shell脚本方面，已经能够编写比较复杂的shell脚本（超过500行）来协助完成很多包括备份、自动化处理、 监控等工作的shell；对awk/sed/perl 等应用已经如火纯青，能够随意操作控制处理文本统计分析各种复杂格式的数据；对Linux内部机制 有一些了解，对内核模块加载，启动错误处理等等有个基本的处理；同时对一些其他相关的东西也了解，比如NFS、磁盘管理等等；</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">2.&nbsp;&nbsp;Nginx:&nbsp;</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">在第二阶段的基础上面，已经能够把Nginx操作的很熟练，能够对Nginx进行更深入的运维工作，比如监控、性能优化，复杂问题处理等等；看个人 兴趣，更多方面可以考虑侧重在关于Nginx工作原理部分的深入学习，主要表现在阅读源码开始，比如具体的master/worker工作机 制，Nginx内部的事件处理，内存管理等等；同时可以学习Nginx扩展的开发，可以定制一些自己私有的扩展；同时可以对Nginx+Lua有一定程度 的了解，看看是否可以结合应用出更好模式；这个阶段的要求是对Nginx原理的深入理解，可以考虑成为Nginx方向的深入专业者。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">3.&nbsp;&nbsp;MySQL/MongoDB：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">在第二阶段的基础上面，在MySQL应用方面，除了之前的基本SQL优化，还能够在完成一些复杂操作，比如大批量数据的导入导出，线上大批量数据的 更改表结构或者增删索引字段等等高危操作；除了安装配置，已经能够处理更多复杂的MySQL的问题，比如各种问题的追查，主从同步延迟问题的解决、跨机房 同步数据方案、MySQL高可用架构等都有涉及了解；对MySQL应用层面，对MySQL的核心关键技术比较熟悉，比如事务机制（隔离级别、锁等）、对触 发器、分区等技术有一定了解和应用；对MySQL性能方面，有包括磁盘优化（SAS迁移到SSD）、服务器优化（内存、服务器本身配置）、除了二阶段的其 他核心性能优化选项（innodb_log_buffer_size/back_log/table_open_cache /thread_cache_size/innodb_lock_wait_timeout等）、连接池软件选择应用，对show * （show status/show profile）类的操作语句有深入了解，能够完成大部分的性能问题追查；MySQL备份技术的深入熟悉，包括灾备 还原、对Binlog的深入理解，冷热备份，多IDC备份等；在MySQL原理方面，有更多了解，比如对MySQL的工作机制开始阅读部分源码，比如对主 从同步（复制）技术的源码学习，或者对某个存储引擎（MyISAM/Innodb/TokuDB）等等的源码学习理解，如果条件允许，可以参考CSV引擎 开发自己简单的存储引擎来保存一些数据，增强对MySQL的理解；在这个过程，如果自己有兴趣，也可以考虑往DBA方向发展。MongoDB层面，可以考 虑比如说在写少读多的情况开始在线上应用MongoDB，或者是做一些线上的数据分析处理的操作，具体场景可以按照工作来，不过核心是要更好的深入理解 RMDBS和NoSQL的不同场景下面的应用，如果条件或者兴趣允许，可以开始深入学习一下MongoDB的工作机制。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">4.&nbsp;&nbsp;Redis/Memcached：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">在第二阶段的基础上面，能够更深入的应用和学习。因为Memcached不是特别复杂，建议可以把源码进行阅读，特别是内存管理部分，方便深入理 解；Redis部分，可以多做一些复杂的数据结构的应用（zset来做排行榜排序操作/事务处理用来保证原子性在秒杀类场景应用之类的使用操作）；多涉及 aof等同步机制的学习应用，设计一个高可用的Redis应用架构和集群；建议可以深入的学习一下Redis的源码，把在第二阶段积累的知识都可以应用 上，特别可以阅读一下包括核心事件管理、内存管理、内部核心数据结构等充分学习了解一下。如果兴趣允许，可以成为一个Redis方面非常专业的使用者。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">5. PHP：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">作为基础核心技能，我们在第二阶段的基础上面，需要有更深入的学习和应用。从基本代码应用上面来说，能够解决在PHP开发中遇到95%的问题，了解 大部分PHP的技巧；对大部分的PHP框架能够迅速在一天内上手使用，并且了解各个主流PHP框架的优缺点，能够迅速方便项目开发中做技术选型；在配置方 面，除了常规第二阶段会的知识，会了解一些比较偏门的配置选项（php auto_prepend_file/auto_append_file），包括 扩展中的一些复杂高级配置和原理（比如memcached扩展配置中的memcache.hash_strategy、apc扩展配置中的 apc.mmap_file_mask/apc.slam_defense/apc.file_update_protection之类的）；对php的 工作机制比较了解，包括php-fpm工作机制（比如php-fpm在不同配置机器下面开启进程数量计算以及原理），对zend引擎有基本熟悉 （vm/gc/stream处理），阅读过基本的PHP内核源码（或者阅读过相关文章），对PHP内部机制的大部分核心数据结构（基础类型/Array /Object）实现有了解，对于核心基础结构（zval/hashtable/gc）有深入学习了解；能够进行基本的PHP扩展开发，了解一些扩展开发 的中高级知识（minit/rinit等），熟悉php跟apache/nginx不同的通信交互方式细节（mod_php/fastcgi）；除了开发 PHP扩展，可以考虑学习开发Zend扩展，从更底层去了解PHP。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">6.&nbsp;&nbsp;C/C++：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">在第二阶段基础上面，能够在C/C++语言方面有更深入的学习了解，能够完成中小型C/C++系统的开发工作；除了基本第二阶段的基础C/C++语 法和数据结构，也能够学习一些特殊数据结构（b-tree/rb-tree/skiplist/lsm-tree/trie-tree等）方便在特殊工作 中需求；在系统编程方面，熟悉多进程、多线程编程；多进程情况下面了解大部分多进程之间的通信方式，能够灵活选择通信方式（共享内存/信号量/管道等）； 多线程编程能够良好的解决锁冲突问题，并且能够进行多线程程序的开发调试工作；同时对网络编程比较熟悉，了解多进程模型/多线程模型/异步网络IO模型的 差别和选型，熟悉不同异步网络IO模型的原理和差异（select/poll/epoll/iocp等），并且熟悉常见的异步框架（ACE/ICE /libev/libevent/libuv/Boost.ASIO等）和使用，如果闲暇也可以看看一些国产自己开发的库（比如muduo）；同时能够设 计好的高并发程序架构（leader-follow/master-worker等）；了解大部分C/C++后端Server开发中的问题（内存管理、日 志打印、高并发、前后端通信协议、服务监控），知道各个后端服务RPC通信问题（struct/http/thirft/protobuf等）；能够更熟 络的使用GCC和GDB来开发编译调试程序，在线上程序core掉后能够迅速追查跟踪解决问题；通用模块开发方面，可以积累或者开发一些通用的工具或库 （比如异步网络框架、日志库、内存池、线程池等），不过开发后是否应用要谨慎，省的埋坑去追bug；</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">7.&nbsp;&nbsp;前端：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">深入了解HTTP协议（包括各个细致协议特殊协议代码和背后原因，比如302静态文件缓存了，502是nginx后面php挂了之类的）；除了之前 的前端方面的各种框架应用整合能力，前端方面的学习如果有兴趣可以更深入，表现形式是，可以自己开发一些类似jQuery的前端框架，或者开发一个富文本 编辑器之类的比较琐碎考验JavaScript功力；</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">8.&nbsp;&nbsp;其他领域语言学习：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">在基础的PHP/C/C++语言方面有基本积累，建议在当前阶段可以尝试学习不同的编程语言，看个人兴趣爱好，脚本类语言可以学学 Python /Ruby 之类的，函数式编程语言可以试试 Lisp/Haskell/Scala/Erlang 之类的，静态语言可以试试 Java /Golang，数据统计分析可以了解了解R语言，如果想换个视角做后端业务，可以试试 Node.js还有前面提到的跟Nginx结合的 Nginx_Lua等。学习不同的语言主要是提升自己的视野和解决问题手段的差异，比如会了解除了进程/线程，还有轻量级协程；比如在跨机器通信场景下 面，Erlang的解决方案简单的惊人；比如在不想选择C/C++的情况下，还有类似高效的Erlang/Golang可用等等；主要是提升视野。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">9.&nbsp;&nbsp;其他专业方向学习：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">在本阶段里面，会除了基本的LNMP技能之外，会考虑一些其他领域知识的学习，这些都是可以的，看个人兴趣和长期的目标方向。目前情况能够选择的领 域比较多，比如、云计算（分布式存储、分布式计算、虚拟机等），机器学习（数据挖掘、模式识别等，应用到统计、个性化推荐），自然语言处理（中文分词 等），搜索引擎技术、图形图像、语音识别等等。除了这些高大上的，也有很多偏工程方面可以学习的地方，比如高性能系统、移动开发 （Android/IOS）、计算机安全、嵌入式系统、硬件等方向。</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">10.&nbsp;&nbsp;系统设计：</span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\"><br style=\"word-wrap: break-word;\"/></span></span></span><br style=\"word-wrap: break-word;\"/><span style=\"font-family:Microsoft Yahei, Helvetica Neue, Helvetica, Arial, sans-serif;word-wrap: break-word;\"><span style=\"color:#333333;word-wrap: break-word;\"><span style=\"word-wrap: break-word; font-size: 17.5px;\">系统设计在第二阶段的基础之上，能够应用掌握的经验技能，设计出比较复杂的中大型系统，能够解决大部分线上的各种复杂系统的问题，完成类似 浏览器 -&gt; CDN -&gt;负载均衡 -&gt; 接入层 -&gt; Nginx+PHP -&gt; 业务缓存 -&gt; 数据库 -&gt; 各路复杂后端RPC交互（存储后端、逻辑后端、反作弊 后端、外部服务） -&gt; 更多后端 酱紫的复杂业务；能够支撑每天数千万到数亿流量网站的正常开发维护工作。</span></span></span></td></tr></tbody></table><p><br/></p>',1477139441,'',100,1,1,18),(31,'  php并发控制中的独占锁  ','    ','  ','','<table style=\"width: 828px;\" width=\"999\" cellspacing=\"0\" cellpadding=\"0\"><tbody style=\"word-wrap: break-word;\"><tr style=\"word-wrap: break-word;\" class=\"firstRow\"><td class=\"t_f\" id=\"postmessage_146114\" style=\"word-wrap: break-word;\">在php开发<a href=\"http://www.maiziedu.com/course/php/\" target=\"_blank\" class=\"gj_safe_a\" style=\"word-wrap: break-word; color: rgb(85, 85, 85);\">http://www.maiziedu.com/course/php/</a>中，我们常常遇到并发问题，那对于并发控制中的独占锁问题我们怎么解决呢？一起来看看吧。<br style=\"word-wrap: break-word;\"/>1.并发问题<br style=\"word-wrap: break-word;\"/>并发大家都知道是什么情况，这里说的是并发多个请求抢占同一个资源,直接上实例吧<br style=\"word-wrap: break-word;\"/>请求：index.php?mod=a&amp;action=b&amp;taskid=6<br style=\"word-wrap: break-word;\"/>处理：<br style=\"word-wrap: break-word;\"/>$key = &quot;a_b::&quot;.$uid.&#39;_&#39;.$taskid;<br style=\"word-wrap: break-word;\"/>$v = $redis-&gt;get($key);<br style=\"word-wrap: break-word;\"/>if($v == 1){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; $redis-&gt;setex($key,10,1);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; //处理逻辑省略<br style=\"word-wrap: break-word;\"/>}<br style=\"word-wrap: break-word;\"/>2.分析<br style=\"word-wrap: break-word;\"/>逻辑看来还可以，结果发现数据库中写入了两个同样的请求结果，我看了记录的时间戳,天!居然是同一秒.<br style=\"word-wrap: break-word;\"/>我用microtime(true) log一下两个请求的时间差居然相差了0.0001s，就是说$redis-&gt;setex($key,10,1);还没执行成功 第二个请求已经get到跟第一个请求一样的结果。这不就是传说中的并发抢占资源。这中情况 听过很多，在开发过程中也没刻意去模拟实验过。<br style=\"word-wrap: break-word;\"/>3.解决<br style=\"word-wrap: break-word;\"/>方案1：第一反应就是要给处理过程加事务(数据库是mysql innoDB)，加事务的结果就是 第一个请求成功了 第二个请求会执行到后面捡查发现重了会回滚。其实mysql事务在保证数据一致性上是很ok的，但是通过回滚来保证唯一资源独占代价太大，做过mysql事务测试测同学都知道，事务中的insert是已经插进去了，回滚之后才删掉的。<br style=\"word-wrap: break-word;\"/>方案2：还有一个选择就是php中的文件独占锁，那就是说这情况下我要新建 用户数 * 任务数的文件来实现每个请求资源的独占，如果独占资源较少的话可选的解决办法：<br style=\"word-wrap: break-word;\"/>/**<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;* 加锁<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;*/<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; public function file_lock($filename){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$fp_key = sha1($filename);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$this-&gt;fps[$fp_key] = fopen($filename, &#39;w+&#39;);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if($this-&gt;fps[$fp_key]){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return flock($this-&gt;fps[$fp_key], LOCK_EX|LOCK_NB);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;return false;<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; }<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; /**<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;* 解锁<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;*/<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; public function file_unlock($filename){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$fp_key = sha1($filename);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;if($this-&gt;fps[$fp_key] ){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;flock($this-&gt;fps[$fp_key] , LOCK_UN);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;fclose($this-&gt;fps[$fp_key] );<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; }<br style=\"word-wrap: break-word;\"/>方案3：发现$redis-&gt;setnx()可以提供原子操作的状态：相同的key执行setnx之后没过期或者没del，再执行会返回false。这就让两个以上的并发请求得到控制必须成功获取锁才能继续。<br style=\"word-wrap: break-word;\"/>/**<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;*&nbsp;&nbsp;加锁<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp;&nbsp;*/<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp; public function task_lock($taskid){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;$expire = 2;<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; $lock_key =&#39;task_get_reward_&#39;.$this-&gt;uid.&#39;_&#39;.$taskid;<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;$lock = $this-&gt;redis-&gt;setNX($lock_key , time());//设当前时间<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if($lock){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; $this-&gt;redis-&gt;expire($lock_key,&nbsp;&nbsp;$expire); //如果没执行完 2s锁失效<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;if(!$lock){//如果获取锁失败 检查时间<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; $time = $this-&gt;redis-&gt;get($lock_key);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if(time() - $time&nbsp;&nbsp;&gt;=&nbsp;&nbsp;$expire){//添加时间戳判断为了避免expire执行失败导致死锁 当然可以用redis自带的事务来保证<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$this-&gt;redis-&gt;rm($lock_key);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; $lock =&nbsp;&nbsp;$this-&gt;redis-&gt;setNX($lock_key , time());<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; if($lock){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;$this-&gt;redis-&gt;expire($lock_key,&nbsp;&nbsp;$expire); //如果没执行完 2s锁失效<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp; }<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;}<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;return $lock;<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;/**<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;*&nbsp;&nbsp;解锁<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;*/<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;public function task_unlock($taskid){<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;$this-&gt;set_redis();<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;$lock_key = &#39;task_get_reward_&#39;.$this-&gt;uid.&#39;_&#39;.$taskid;<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;&nbsp; &nbsp;$this-&gt;redis-&gt;rm($lock_key);<br style=\"word-wrap: break-word;\"/>&nbsp; &nbsp;&nbsp; &nbsp;&nbsp;&nbsp;}<br style=\"word-wrap: break-word;\"/>说明下setNX 和expire 这两个操作其实可以用redis事务来保证一致性<br style=\"word-wrap: break-word;\"/></td></tr></tbody></table><p><br/></p>',1477139341,' admin ',100,1,1,18);
/*!40000 ALTER TABLE `blog_article` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_category`
--

DROP TABLE IF EXISTS `blog_category`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_category` (
  `cate_id` int(11) NOT NULL AUTO_INCREMENT,
  `cate_name` varchar(45) NOT NULL DEFAULT '' COMMENT '分类名称',
  `cate_title` varchar(255) NOT NULL DEFAULT '' COMMENT '名称描述',
  `cate_keywords` varchar(255) NOT NULL DEFAULT '' COMMENT '关键词',
  `cate_description` varchar(255) NOT NULL COMMENT '网站描述',
  `cate_view` int(11) NOT NULL DEFAULT '0' COMMENT '分类浏览次数',
  `cate_order` tinyint(4) NOT NULL DEFAULT '0' COMMENT '分类排序',
  `cate_pid` int(11) NOT NULL DEFAULT '0' COMMENT '父级id',
  PRIMARY KEY (`cate_id`)
) ENGINE=MyISAM AUTO_INCREMENT=24 DEFAULT CHARSET=utf8 COMMENT='文章分类';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_category`
--

LOCK TABLES `blog_category` WRITE;
/*!40000 ALTER TABLE `blog_category` DISABLE KEYS */;
INSERT INTO `blog_category` VALUES (22,'基础知识','基本的语法知识','','',0,4,18),(23,'Memcached','','','',0,5,18),(21,'实用的类','自己常用的一些类','常用类','',0,3,18),(18,'PHP','','','',0,1,0),(19,'smarty','smarty模板引擎','模板引擎','',0,1,18),(20,'框架','流行框架','','',0,2,18);
/*!40000 ALTER TABLE `blog_category` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_config`
--

DROP TABLE IF EXISTS `blog_config`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_config` (
  `conf_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `conf_name` varchar(45) NOT NULL,
  `conf_title` varchar(45) NOT NULL,
  `conf_content` text NOT NULL,
  `conf_order` int(11) NOT NULL,
  `conf_tips` varchar(255) NOT NULL,
  `field_type` varchar(20) NOT NULL,
  `field_value` varchar(45) NOT NULL,
  PRIMARY KEY (`conf_id`)
) ENGINE=MyISAM AUTO_INCREMENT=10 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_config`
--

LOCK TABLES `blog_config` WRITE;
/*!40000 ALTER TABLE `blog_config` DISABLE KEYS */;
INSERT INTO `blog_config` VALUES (1,'web_title','网站标题','牵挂的个人博客',1,'<title></title>','text',''),(4,'page_size','分页大小','5',5,'文章一次显示的数量','text',''),(2,'web_link_num','友情链接数量','3',2,'','text',''),(3,'default_image','默认图片','/resources/views/home/images/fc4f5a7ac57733d6920f45c3fa0cee1c.jpg',3,'','file',''),(6,'ad_image','广告图片','/resources/views/home/images/b61a2102ac5ea8adc2cb5b9e9388d375.png',0,'','file',''),(7,'head_image','头像','/resources/views/home/images/1c06d03995e4921987c0cc08cb178b71.jpg',0,'','file',''),(8,'wisdom','首页图片中的文字','  <p>流云在天边，行囊在眼前，有一条通往太阳的路无边又无沿。</p>       <p>觉得自己做的到和不做的到，其实只在一念之间。</p>       <p>把自己当傻瓜，不懂就问，你会学的更多。</p>',0,'用p标签分开','text',''),(9,'weixin_image','微信公众号','/resources/views/home/images/7498ee04c42e968f8bee0b94726b97b8.jpg',0,'','file','');
/*!40000 ALTER TABLE `blog_config` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_links`
--

DROP TABLE IF EXISTS `blog_links`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_links` (
  `link_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `link_name` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '' COMMENT '名称',
  `link_title` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '' COMMENT '标题',
  `link_url` varchar(255) COLLATE utf8_unicode_ci NOT NULL DEFAULT '' COMMENT '链接',
  `link_order` int(11) NOT NULL DEFAULT '0' COMMENT '排序',
  `link_myproject` tinyint(4) NOT NULL DEFAULT '0' COMMENT '1:自己的项目,0:普通链接',
  `link_user` varchar(45) COLLATE utf8_unicode_ci NOT NULL DEFAULT '' COMMENT '链接后台用户名',
  `link_password` varchar(45) COLLATE utf8_unicode_ci NOT NULL DEFAULT '' COMMENT '链接后台密码',
  `link_description` text COLLATE utf8_unicode_ci NOT NULL COMMENT '项目说明',
  PRIMARY KEY (`link_id`)
) ENGINE=MyISAM AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_links`
--

LOCK TABLES `blog_links` WRITE;
/*!40000 ALTER TABLE `blog_links` DISABLE KEYS */;
INSERT INTO `blog_links` VALUES (1,'百度','国内最大的搜索网站','www.baidu.com',1,0,'','',''),(2,'谷歌','世界最大的搜索网站','www.google.com',3,0,'','',''),(3,'百度云','2T超大存储云空间','yun.baidu.com',4,0,'','',''),(4,'ThinkPHP博客','thinkphp框架做的博客','http://cchenhuiyu.com/blog2/index.php',6,1,'admin','admin','知识点:'),(5,'ThinkPHP许愿墙','thinkphp框架做的许愿墙','http://cchenhuiyu.com/wish1/',5,1,'admmin','admin','知识点:'),(6,'无线音乐业务版权审核数据','中国移动无线音乐业务版权审核数据管理信息系统cms','http://cchenhuiyu.com/htdocs/cvms/index.php',8,1,'super','admin','自己定义的框架结构 后台控制器遵循的面向对象编程'),(7,'PHP爬虫','php写的爬虫 性能有点问题','http://cchenhuiyu.com/search/',7,1,'','','女朋友做百度推广 每天晚上都要手动搜索商户用户名和电话号码，这个程序可以从输入关键词 找到百度网页中所对应的公司名称 联系人名字，联系人电话 最后输出到excel 用了curl模拟浏览器搜索 ，phpexcel'),(8,'CI---广告管理系统','用ci框架写的广告管理系统用于终端机的管理','http://cchenhuiyu.com/advsys/admin/index.php?ctrl=login&act=index',10,1,'admin','swe234','用户购买终端机后会分配账户 和密码 用户上传视频和图片资源 审核后 投放到终端机进行播放,终端机上的程序用的C#写的 与php后台交互用的json格式 加密用了RSA非对称加密 和des对称加密');
/*!40000 ALTER TABLE `blog_links` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_migrations`
--

DROP TABLE IF EXISTS `blog_migrations`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_migrations` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `migration` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COLLATE=utf8_unicode_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_migrations`
--

LOCK TABLES `blog_migrations` WRITE;
/*!40000 ALTER TABLE `blog_migrations` DISABLE KEYS */;
INSERT INTO `blog_migrations` VALUES (2,'2016_10_20_220518_create_links_table',1);
/*!40000 ALTER TABLE `blog_migrations` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_navs`
--

DROP TABLE IF EXISTS `blog_navs`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_navs` (
  `nav_id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `nav_name` varchar(45) NOT NULL,
  `nav_order` int(11) NOT NULL,
  `nav_url` varchar(100) NOT NULL,
  `nav_user` varchar(45) NOT NULL,
  `nav_password` varchar(45) NOT NULL,
  `nav_description` varchar(45) NOT NULL,
  `nav_alias` varchar(255) NOT NULL,
  PRIMARY KEY (`nav_id`)
) ENGINE=MyISAM AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 COMMENT='导航表';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_navs`
--

LOCK TABLES `blog_navs` WRITE;
/*!40000 ALTER TABLE `blog_navs` DISABLE KEYS */;
INSERT INTO `blog_navs` VALUES (1,'首页',1,'/','','','','index'),(2,'关于我',2,'http://','','','','1'),(3,'慢生活',3,'http://','','','','2'),(4,'碎言碎语',4,'http://','','','','3'),(5,'模板分享',5,'http://','','','','4'),(6,'学无止境',6,'http://','','','','5'),(7,'留言版',7,'http://','','','','6');
/*!40000 ALTER TABLE `blog_navs` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `blog_user`
--

DROP TABLE IF EXISTS `blog_user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `blog_user` (
  `user_id` int(11) NOT NULL,
  `user_name` varchar(45) NOT NULL DEFAULT '',
  `user_pass` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`user_id`)
) ENGINE=MyISAM DEFAULT CHARSET=utf8 COMMENT='管理员';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `blog_user`
--

LOCK TABLES `blog_user` WRITE;
/*!40000 ALTER TABLE `blog_user` DISABLE KEYS */;
INSERT INTO `blog_user` VALUES (1,'admin','eyJpdiI6InBURzNGcUh0OHBvdVBXMFlwVzFzaXc9PSIsInZhbHVlIjoiamFXR0hUNVRjNVpNNGZaR3hnMHV1UT09IiwibWFjIjoiZDVmY2Y4NjY1Y2NkYWMyMTk4NGE3ZTEyYjMxNDE3M2JkZDNlMDI4ZmZjMjRmOGJlNGI2ZjQ1Y2Y4ZjgyY2UwNiJ9');
/*!40000 ALTER TABLE `blog_user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2016-10-24 11:10:11
